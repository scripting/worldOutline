<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- OPML generated by OPML Editor v10.1b19 on Sat, 14 May 2022 16:32:48 GMT -->
<opml version="2.0">
	<head>
		<title>config.nodeEditor.projects.littleFeedReader.scripts</title>
		<dateCreated>Fri, 18 Feb 2022 15:50:57 GMT</dateCreated>
		<dateModified>Sat, 14 May 2022 16:32:48 GMT</dateModified>
		<ownerName>Dave Winer</ownerName>
		<ownerId>http://davewiner.com/</ownerId>
		<expansionState>1, 2, 3, 22, 45, 47, 49, 50, 51, 52, 73, 75, 76, 77, 97, 105, 111, 112, 113, 177, 178, 179, 180, 182, 183, 197</expansionState>
		<vertScrollState>83</vertScrollState>
		<windowTop>45</windowTop>
		<windowLeft>532</windowLeft>
		<windowBottom>1067</windowBottom>
		<windowRight>1889</windowRight>
		</head>
	<body>
		<outline text="/scripting.com/code/littlefeedreader/" created="Thu, 02 Dec 2021 14:19:56 GMT">
			<outline text="docs/worknotes.mdo" created="Thu, 24 Feb 2022 16:31:51 GMT">
				<outline text="5/11/22; 9:00:30 AM by DW" created="Wed, 11 May 2022 13:00:30 GMT">
					<outline text="Next up, test the code used to read feedlist.opml outside of littlefeedreader." created="Wed, 11 May 2022 15:44:01 GMT"/>
					<outline text="Expanding includes in the opml package, todo" created="Wed, 11 May 2022 13:00:31 GMT">
						<outline text="need a list of types that are docs?" created="Wed, 11 May 2022 13:00:48 GMT"/>
						</outline>
					</outline>
				<outline text="5/9/22; 2:54:40 PM by DW" created="Mon, 09 May 2022 18:54:39 GMT">
					<outline text="Today's project was to build an OPML file with all the NYT feeds, organized the way they are on the NYT page." created="Mon, 09 May 2022 18:54:40 GMT">
						<outline text="http://nytimes.com/rss" created="Mon, 09 May 2022 18:55:07 GMT"/>
						<outline text="http://scripting.com/publicfolder/misc/nytFeeds.opml" created="Mon, 09 May 2022 18:55:16 GMT"/>
						<outline text="The outline is also in the Bookmarks menu in E/D." created="Mon, 09 May 2022 18:55:41 GMT"/>
						</outline>
					</outline>
				<outline text="5/8/22; 10:19:47 AM by DW" created="Sun, 08 May 2022 14:19:46 GMT">
					<outline text="starter lists" created="Sun, 08 May 2022 22:50:24 GMT"/>
					<outline text="included lists" created="Sun, 08 May 2022 22:50:33 GMT"/>
					<outline text="should we edit lists in a flat structure" created="Sun, 08 May 2022 22:50:08 GMT"/>
					<outline text="when you change title of blog update posts right away" created="Sun, 08 May 2022 22:49:17 GMT"/>
					<outline text="only show new items in feeds you're subscribed to" created="Sun, 08 May 2022 22:49:27 GMT"/>
					<outline text="I want to set a title sometimes" created="Sun, 08 May 2022 22:49:41 GMT"/>
					<outline text="when you sign off, the screen should clear" created="Sun, 08 May 2022 14:19:47 GMT">
						<outline text="copy the signon box from opml tweets app" created="Sun, 08 May 2022 14:20:40 GMT"/>
						</outline>
					<outline text="for when the day comes" created="Sun, 08 May 2022 15:08:55 GMT">
						<outline text="As I'm sure you can tell from my various postings, I'm working on RSS. In all past efforts I rushed through it, anxious to get to the result. This time I'm going slowly and carefully. It's been almost 20 years since the last &quot;release&quot; -- if you can call it that. It was very contentious, lots of people wanted to run the show, and the question was always who had the right to work on RSS. I got one last version out and then I was so sick of it, I never wanted to go back to it. So much time has passed now, anyone who says I got in their way is not credible. Over the last few years I've done clean re-releases of XML-RPC and OPML, the old websites converted to new ones, and the example code converted from Frontier to Node.js and browser-based JavaScript. " created="Sun, 08 May 2022 15:08:59 GMT"/>
						</outline>
					</outline>
				<outline text="5/7/22; 12:10:57 PM by DW" created="Sat, 07 May 2022 16:10:56 GMT">
					<outline text="Likes are complete. " created="Sat, 07 May 2022 16:10:57 GMT"/>
					<outline text="Next session, get cluelessnewbie set up to use the app." created="Sat, 07 May 2022 16:11:01 GMT">
						<outline text="work out first-time user issues. " created="Sat, 07 May 2022 16:11:12 GMT"/>
						</outline>
					</outline>
				<outline text="5/6/22; 10:00:20 AM by DW" created="Fri, 06 May 2022 14:00:20 GMT">
					<outline text="Likes" created="Fri, 06 May 2022 14:00:21 GMT">
						<outline text="create table likes (">
							<outline text="      screenname varchar (255), "/>
							<outline text="      itemId int," created="Wed, 23 Mar 2022 20:46:47 GMT"/>
							<outline text="      whenCreated datetime, "/>
							<outline text="      primary key (screenname, itemId)"/>
							<outline text="      );"/>
							</outline>
						<outline text="user interface for likes" created="Fri, 06 May 2022 15:06:31 GMT">
							<outline text="move things around" created="Fri, 06 May 2022 15:06:36 GMT">
								<outline text="move the ... menu" created="Fri, 06 May 2022 15:06:39 GMT"/>
								</outline>
							</outline>
						<outline text="" created="Fri, 06 May 2022 14:24:08 GMT"/>
						</outline>
					<outline text="set up a second user" created="Fri, 06 May 2022 14:18:07 GMT"/>
					</outline>
				<outline text="5/5/22; 10:20:57 AM by DW" created="Thu, 05 May 2022 14:20:56 GMT">
					<outline text="Using Markdown for the posts in LFR." created="Thu, 05 May 2022 14:20:57 GMT">
						<outline text="As the user is typing, we're saving off a Markdown version of the post." created="Thu, 05 May 2022 14:21:11 GMT">
							<outline text="When the user clicks Post -- we save the Markdown text in &lt;source:markdown&gt; and the rendered-to-HTML text in the description. " created="Thu, 05 May 2022 14:21:49 GMT"/>
							</outline>
						<outline text="When we edit a post, we render it as HTML and add that to the text box. " created="Thu, 05 May 2022 14:22:46 GMT"/>
						<outline text="Places that need to change" created="Thu, 05 May 2022 14:23:07 GMT">
							<outline text="new column in items table == markdowntext" created="Thu, 05 May 2022 14:59:34 GMT">
								<outline text="alter table items add markdowntext longtext;" created="Thu, 05 May 2022 15:01:34 GMT"/>
								<outline text="alter table items drop column markidowntext;" created="Thu, 05 May 2022 15:01:34 GMT"/>
								</outline>
							<outline text="editbox.js in the client" created="Thu, 05 May 2022 14:23:19 GMT"/>
							<outline text="blog.js in the server" created="Thu, 05 May 2022 14:23:25 GMT"/>
							<outline text="daverss so it knows about &lt;source:markdown&gt;" created="Thu, 05 May 2022 14:23:36 GMT"/>
							</outline>
						</outline>
					</outline>
				<outline text="5/3/22; 9:14:09 AM by DW" created="Tue, 03 May 2022 13:14:08 GMT">
					<outline text="fixed bug where a new post would be entered twice, because one place had the guid be the id and another the post time. " created="Tue, 03 May 2022 13:14:09 GMT"/>
					<outline text="The box that you click to edit should just contain the text, not the popup menu or the elapsed time." created="Mon, 02 May 2022 21:10:15 GMT"/>
					</outline>
				<outline text="5/2/22; 9:47:12 AM by DW -- bugs" created="Mon, 02 May 2022 13:47:12 GMT">
					<outline text="the hiding of text via the MORE button doesn't work in safari." created="Tue, 03 May 2022 16:06:42 GMT"/>
					<outline text="after editing if there's only one paragraph get rid of the &lt;p&gt; and &lt;/p&gt;." created="Tue, 03 May 2022 13:27:17 GMT"/>
					<outline text="When you edit settings you need to go to the database."/>
					<outline text="The like button is needed."/>
					<outline text="I want to set a title sometimes."/>
					<outline text="Preferences database."/>
					<outline text="Should the subscription list be in an outline" created="Mon, 02 May 2022 13:47:56 GMT">
						<outline text="how about this -- it's edited in a flat list, but is stored as an outline, so you can also edit in outliner" created="Mon, 02 May 2022 19:43:39 GMT"/>
						</outline>
					<outline text="Only send updates to feeds a user is subscribed to." created="Mon, 02 May 2022 13:47:12 GMT">
						<outline text="Otherwise when you reload the page you'll get back something different and it looks like the software isn't working." created="Mon, 02 May 2022 13:47:35 GMT"/>
						</outline>
					</outline>
				<outline text="5/1/22; 11:31:35 AM by DW" created="Sun, 01 May 2022 15:31:35 GMT">
					<outline text="" created="Mon, 02 May 2022 00:10:22 GMT"/>
					<outline text="lets deploy a copy of little feed reader and start setting it up to read lots more feeds" created="Mon, 02 May 2022 00:10:22 GMT">
						<outline text="" created="Mon, 02 May 2022 00:10:40 GMT"/>
						</outline>
					<outline text="" created="Mon, 02 May 2022 00:10:22 GMT"/>
					<outline text="Understanding Wordle's clipboard text">
						<outline text="They give you a way to report the result from today's Wordle in a Tweet. "/>
						<outline text="But the text of this tweet gets mangled by my software. As today's project, I'm going to figure out why, and fix it if I can."/>
						<outline text="It seems that having Wordle reports flow through the system well is an important thing. ;-)"/>
						<outline text="Posted a tweet with data. " created="Sun, 01 May 2022 15:31:42 GMT">
							<outline text="http://scripting.com/2022/05/01.html#a153217" created="Sun, 01 May 2022 15:31:47 GMT"/>
							</outline>
						</outline>
					</outline>
				<outline text="archive" created="Sun, 08 May 2022 14:25:25 GMT">
					<outline text="4/29/22; 9:26:45 AM by DW" created="Fri, 29 Apr 2022 13:26:45 GMT">
						<outline text="" created="Sat, 30 Apr 2022 16:50:39 GMT"/>
						<outline text="we have updating posts working with a cancel button that also works" created="Sat, 30 Apr 2022 16:50:39 GMT"/>
						<outline text="and we have a modular editor that hooks into the feed reader through two callbacks and that's it. " created="Sat, 30 Apr 2022 16:50:51 GMT"/>
						<outline text="tomorrow we do the settings dialog" created="Sat, 30 Apr 2022 16:51:11 GMT"/>
						<outline text="" created="Sat, 30 Apr 2022 16:50:40 GMT"/>
						<outline text="next session" created="Fri, 29 Apr 2022 16:36:52 GMT">
							<outline text="click on an item you authored to edit it" created="Fri, 29 Apr 2022 16:36:58 GMT"/>
							<outline text="settings dialog, a panel where you give the title and description of your blog" created="Sat, 30 Apr 2022 13:43:55 GMT"/>
							<outline text="how does the client know the url of the rendered page for the user" created="Sat, 30 Apr 2022 13:44:12 GMT">
								<outline text="the base url is now in appConsts" created="Sat, 30 Apr 2022 16:50:27 GMT"/>
								</outline>
							</outline>
						<outline text="you can use the editbox to create new posts, the item appears in the river after you post it. " created="Fri, 29 Apr 2022 16:36:32 GMT"/>
						</outline>
					<outline text="4/28/22; 9:31:18 AM by DW" created="Thu, 28 Apr 2022 13:31:17 GMT">
						<outline text="next session" created="Thu, 28 Apr 2022 17:28:57 GMT">
							<outline text="hook it up to the edit box" created="Thu, 28 Apr 2022 17:29:33 GMT"/>
							<outline text="short cut distribution of these posts, no need to wait for the feed to be read" created="Thu, 28 Apr 2022 22:30:46 GMT"/>
							<outline text="click on a post to edit it, the cancel button appears for this" created="Thu, 28 Apr 2022 22:31:09 GMT"/>
							</outline>
						<outline text="we generate the feed in a folder on S3" created="Thu, 28 Apr 2022 17:29:38 GMT"/>
						<outline text="the database stuff works, we can set up a feed for the user and publish items to the feed." created="Thu, 28 Apr 2022 17:29:00 GMT"/>
						<outline text="the server side of the user's outbound feed" created="Thu, 28 Apr 2022 13:31:18 GMT">
							<outline text="a server call that accepts a post and publishes it to the user's feed" created="Thu, 28 Apr 2022 13:31:37 GMT"/>
							</outline>
						<outline text="subscribe to opml files" created="Thu, 28 Apr 2022 13:37:09 GMT">
							<outline text="" created="Thu, 28 Apr 2022 13:37:16 GMT"/>
							</outline>
						</outline>
					<outline text="4/27/22; 12:13:58 PM by DW" created="Wed, 27 Apr 2022 16:13:58 GMT">
						<outline text="The editor is in, at the top of the feed reader. " created="Wed, 27 Apr 2022 16:13:59 GMT">
							<outline text="in the next session we'll hook it up to the database, and we'll be writing from the reader. " created="Wed, 27 Apr 2022 16:14:08 GMT"/>
							</outline>
						</outline>
					<outline text="4/23/22; 9:26:33 AM by DW" created="Sat, 23 Apr 2022 13:26:32 GMT">
						<outline text="todo" created="Sat, 23 Apr 2022 15:05:25 GMT">
							<outline text="merge new implementation of ask dialog with the global library" created="Sat, 23 Apr 2022 15:05:27 GMT"/>
							</outline>
						<outline text="next session" created="Sat, 23 Apr 2022 14:50:46 GMT">
							<outline text="a box with info about each feed?" created="Sat, 23 Apr 2022 14:52:05 GMT">
								<outline text="like the info box in drummer, for a file" created="Sat, 23 Apr 2022 14:52:12 GMT"/>
								</outline>
							<outline text="do a review of feeds, only include feeds that we can properly render." created="Sat, 23 Apr 2022 14:50:50 GMT"/>
							<outline text="the times are confusing -- " created="Sat, 23 Apr 2022 14:51:34 GMT">
								<outline text="they are in different formats" created="Sat, 23 Apr 2022 14:51:38 GMT"/>
								<outline text="one is the pubdate of the feed" created="Sat, 23 Apr 2022 14:51:42 GMT"/>
								<outline text="the other is the pubdate of the item" created="Sat, 23 Apr 2022 14:51:48 GMT"/>
								<outline text="maybe we don't need the pubdate of the feed" created="Sat, 23 Apr 2022 14:51:55 GMT"/>
								</outline>
							</outline>
						<outline text="done" created="Sat, 23 Apr 2022 14:51:09 GMT">
							<outline text="put a box around items, to more clearly offset them from each other when there are more than one in a section" created="Sat, 23 Apr 2022 14:51:14 GMT"/>
							<outline text="there used to be two getRiver calls, one for general rivers and one for rivers of one feed" created="Sat, 23 Apr 2022 14:05:17 GMT">
								<outline text="we now combined them, to make code duplication not an issue" created="Sat, 23 Apr 2022 14:05:44 GMT"/>
								<outline text="i was already dealing with features implemented in one and not the other" created="Sat, 23 Apr 2022 14:06:02 GMT"/>
								</outline>
							<outline text="Does LFR share space with Drummer? So you can open and edit your subscription list there? Seems to make sense." created="Sat, 23 Apr 2022 13:26:34 GMT">
								<outline text="since we're running a different server, it would be kind of impossible for it also to be Drummer, unless it was running on the same machine, and that's not a great idea." created="Sat, 23 Apr 2022 14:04:30 GMT"/>
								</outline>
							<outline text="I haven't verified that the skipping duplicates code is working properly, must do that. " created="Sat, 23 Apr 2022 13:38:59 GMT"/>
							</outline>
						</outline>
					<outline text="4/22/22; 9:06:05 AM by DW" created="Fri, 22 Apr 2022 13:06:03 GMT">
						<outline text="performance -- loading river" created="Fri, 22 Apr 2022 13:49:52 GMT"/>
						<outline text="multiple rivers -- tabs" created="Fri, 22 Apr 2022 13:23:48 GMT"/>
						<outline text="looking at items from one feed only" created="Wed, 20 Apr 2022 13:40:04 GMT"/>
						<outline text="done" created="Fri, 22 Apr 2022 15:27:28 GMT">
							<outline text="when generating a river, don't include double items" created="Fri, 22 Apr 2022 13:06:05 GMT"/>
							<outline text="be able to turn borders on object on and off" created="Fri, 22 Apr 2022 13:13:52 GMT">
								<outline text="i use this for debugging, now i want to debug with them off" created="Fri, 22 Apr 2022 13:13:59 GMT"/>
								<outline text="but i want to be able to turn them back on if/when i need them" created="Fri, 22 Apr 2022 13:14:16 GMT"/>
								<outline text="open the console and run turnOnRiverDebugging () to turn them on" created="Fri, 22 Apr 2022 15:27:52 GMT"/>
								</outline>
							<outline text="add Delete to the menu for each item" created="Fri, 22 Apr 2022 13:20:03 GMT"/>
							<outline text="it also updates the river if the item is displayed" created="Fri, 22 Apr 2022 15:27:33 GMT"/>
							</outline>
						</outline>
					<outline text="4/21/22; 9:03:46 AM by DW" created="Thu, 21 Apr 2022 13:03:46 GMT">
						<outline text="looking at items from one river only" created="Wed, 20 Apr 2022 13:40:04 GMT"/>
						<outline text="done" created="Thu, 21 Apr 2022 13:04:01 GMT">
							<outline text="more button should default to off" created="Wed, 20 Apr 2022 16:29:58 GMT"/>
							<outline text="when a new item comes in and its feed is already the top item, don't create a new senction, insert the new item in the top section" created="Thu, 21 Apr 2022 14:16:31 GMT"/>
							</outline>
						<outline text="Kevin Tofel reports problems running test app in davetwitter project. " created="Thu, 21 Apr 2022 13:03:47 GMT"/>
						</outline>
					<outline text="4/20/22; 9:39:07 AM by DW" created="Wed, 20 Apr 2022 13:39:06 GMT">
						<outline text="Continuing on the new river rendering code" created="Wed, 20 Apr 2022 13:39:07 GMT">
							<outline text="more button on new items is enabled when not needed" created="Wed, 20 Apr 2022 15:38:21 GMT"/>
							<outline text="code that runs when an object is fully loaded" created="Wed, 20 Apr 2022 14:54:56 GMT">
								<outline text="https://github.com/scripting/Scripting-News/issues/233" created="Wed, 20 Apr 2022 14:55:03 GMT"/>
								<outline text="i've used this in other places, but it's not working here." created="Wed, 20 Apr 2022 14:55:05 GMT"/>
								</outline>
							<outline text="when adding a new item to the river, see if the feed at the top of the river is the same as the one for the new item" created="Wed, 20 Apr 2022 13:40:14 GMT">
								<outline text="if so, don't create a new section, just prepend to the existing one" created="Wed, 20 Apr 2022 13:40:35 GMT"/>
								</outline>
							<outline text="looking at items from one river only" created="Wed, 20 Apr 2022 13:40:04 GMT"/>
							<outline text="done" created="Wed, 20 Apr 2022 16:46:52 GMT">
								<outline text="positioning of the MORE button" created="Wed, 20 Apr 2022 13:39:16 GMT">
									<outline text="there's a new div for the MORE button only" created="Wed, 20 Apr 2022 13:39:38 GMT">
										<outline text="" created="Wed, 20 Apr 2022 13:39:46 GMT"/>
										</outline>
									</outline>
								<outline text="the popup menu in the lower right corner of footer" created="Wed, 20 Apr 2022 13:39:25 GMT"/>
								</outline>
							</outline>
						<outline text="Yesterday" created="Wed, 20 Apr 2022 13:39:54 GMT">
							<outline text="I got realtime updating working" created="Wed, 20 Apr 2022 13:39:56 GMT"/>
							</outline>
						</outline>
					<outline text="4/18/22; 1:02:46 PM by DW" created="Mon, 18 Apr 2022 17:02:46 GMT">
						<outline text="Pick up tomorrow" created="Mon, 18 Apr 2022 20:42:42 GMT">
							<outline text="the popup menu in the lower right of each item gives you a way to see enclosure, reply to the post in your own feed, like it, or see all the data we have for it." created="Mon, 18 Apr 2022 20:42:46 GMT"/>
							<outline text="hook the river viewer to the updating mechanism." created="Mon, 18 Apr 2022 20:43:27 GMT"/>
							<outline text="conceptual question, now will the user edit more than one subscription list?" created="Mon, 18 Apr 2022 20:44:01 GMT"/>
							</outline>
						<outline text="The rebuildl is going well. " created="Mon, 18 Apr 2022 17:02:47 GMT">
							<outline text="make the MORE butotn work in new context" created="Mon, 18 Apr 2022 17:03:22 GMT">
								<outline text="not sure what the UI will be" created="Mon, 18 Apr 2022 17:03:33 GMT"/>
								</outline>
							<outline text="work out formatting differences between outlines and non-outliners in the river" created="Mon, 18 Apr 2022 17:02:53 GMT">
								<outline text="mostly colors and sizes" created="Mon, 18 Apr 2022 17:03:17 GMT"/>
								</outline>
							</outline>
						</outline>
					<outline text="4/16/22; 11:48:32 AM by DW" created="Sat, 16 Apr 2022 15:48:31 GMT">
						<outline text="direction shift" created="Sat, 16 Apr 2022 15:48:32 GMT">
							<outline text="I'm going to stop work on the chat-like interface for feed reading and leave the code here in displayChatStyleRiver in viewpost.js" created="Sat, 16 Apr 2022 15:48:39 GMT"/>
							<outline text="The new direction is less ambitious. I'm going to hook this new database code up to the time-tested river display we've been using up till now." created="Sat, 16 Apr 2022 15:49:09 GMT"/>
							<outline text="I'm going to rewrite the code to use closures, and bring in some of the new reading innovations like the MORE button. " created="Sat, 16 Apr 2022 15:49:38 GMT"/>
							<outline text="Have to figure out how to do tabs, but I think that's going to be straight outlining. " created="Sat, 16 Apr 2022 15:50:03 GMT"/>
							<outline text="There is a new file -- riverviewer.js that will display what getMyRiver returns. " created="Sat, 16 Apr 2022 15:53:01 GMT"/>
							</outline>
						</outline>
					<outline text="4/14/22; 11:53:44 AM by DW" created="Thu, 14 Apr 2022 15:53:43 GMT">
						<outline text="Here's the new direction after a week of stagnation." created="Thu, 14 Apr 2022 15:53:44 GMT">
							<outline text="I'm going to make database.js do what River6 does, generate river.js files, and no more." created="Thu, 14 Apr 2022 15:53:53 GMT"/>
							<outline text="I'm going to release a great package with database primitives people can call." created="Thu, 14 Apr 2022 15:54:22 GMT"/>
							<outline text="The feed reader I'm working on will use that interface. " created="Thu, 14 Apr 2022 15:54:37 GMT"/>
							<outline text="But I want to get something out there, and I'm stuck mentally, not wanting to do any more digging in that direction for some reason. Might be the gorgeous spring weather. " created="Thu, 14 Apr 2022 15:54:49 GMT"/>
							</outline>
						</outline>
					<outline text="4/13/22; 12:43:14 PM by DW" created="Wed, 13 Apr 2022 16:43:14 GMT">
						<outline text="Make the commands in the Feeds menu work" created="Wed, 13 Apr 2022 16:43:14 GMT">
							<outline text="done" created="Wed, 13 Apr 2022 16:43:23 GMT"/>
							</outline>
						</outline>
					<outline text="4/9/22; 10:01:06 AM by DW -- todo list here" created="Sat, 09 Apr 2022 14:01:04 GMT">
						<outline text="Rolled up todo list" created="Sat, 09 Apr 2022 14:20:47 GMT">
							<outline text="filll in functionality for remaining icons in the bottom of each message" created="Sat, 09 Apr 2022 14:21:51 GMT"/>
							<outline text="release reallySimple" created="Sat, 09 Apr 2022 14:31:07 GMT"/>
							<outline text="release River6 with the new database stuff" created="Tue, 12 Apr 2022 12:01:04 GMT">
								<outline text="make a new package for this" created="Tue, 12 Apr 2022 12:01:14 GMT"/>
								<outline text="it's much better factored than River6" created="Tue, 12 Apr 2022 12:01:21 GMT"/>
								</outline>
							<outline text="generate River6 compatible rivers" created="Tue, 12 Apr 2022 12:00:26 GMT">
								<outline text="with items grouped by the feed they came from " created="Tue, 12 Apr 2022 12:00:33 GMT"/>
								<outline text="so if there are three stories from one feed, they appear together, in a group" created="Tue, 12 Apr 2022 12:00:41 GMT"/>
								</outline>
							<outline text="daveappserver has a callback for websocket requests" created="Sat, 09 Apr 2022 14:20:53 GMT"/>
							<outline text="what does choosing a feed from the menu do?" created="Mon, 11 Apr 2022 19:30:34 GMT">
								<outline text="view items from a single feed if you choose the feed from the menu" created="Sat, 09 Apr 2022 14:24:00 GMT"/>
								</outline>
							<outline text="display Radio3 feed items properly" created="Sat, 09 Apr 2022 14:22:05 GMT"/>
							<outline text="a popup with info about the feed" created="Sun, 03 Apr 2022 20:43:31 GMT"/>
							<outline text="deploy the new ask dialog" created="Sat, 09 Apr 2022 14:22:35 GMT"/>
							<outline text="" created="Sat, 09 Apr 2022 14:22:40 GMT"/>
							<outline text="consider replacing the outline editor for the feed list" created="Sun, 03 Apr 2022 20:38:37 GMT">
								<outline text="use it as an upgrade later" created="Sun, 03 Apr 2022 20:38:54 GMT"/>
								<outline text="in the interim, use the editor from podcast.com" created="Sun, 03 Apr 2022 20:38:59 GMT"/>
								</outline>
							<outline text="in drummer a way to set the icon on a feed" created="Sat, 09 Apr 2022 14:23:14 GMT">
								<outline text="a new head element" created="Tue, 12 Apr 2022 11:59:53 GMT"/>
								</outline>
							<outline text="when you insert new items in the list," created="Sun, 03 Apr 2022 20:34:21 GMT">
								<outline text="insert not necessarily at the top of the list, it's sorted by pubDate" created="Sun, 03 Apr 2022 20:34:56 GMT"/>
								<outline text="the MORE button isn't appearing" created="Sun, 03 Apr 2022 20:35:18 GMT"/>
								</outline>
							<outline text="Change the way we do scans" created="Sat, 02 Apr 2022 13:09:16 GMT">
								<outline text="Scan every feed that hasn't been scanned in the minimum time" created="Sat, 02 Apr 2022 13:09:21 GMT"/>
								<outline text="This way when we start up we'll quickly get all the updates if restarting the server" created="Sat, 02 Apr 2022 13:09:43 GMT"/>
								<outline text="The minimum time should be larger than the scheduled time between scans" created="Sat, 02 Apr 2022 13:11:28 GMT"/>
								</outline>
							<outline text="when you subscribe to a feed, the cursor should be on that feed when the outline opens" created="Sat, 02 Apr 2022 14:54:52 GMT"/>
							<outline text="what to do about likes" created="Sat, 09 Apr 2022 14:28:24 GMT"/>
							<outline text="add an editor for the user's feed?" created="Sat, 09 Apr 2022 14:28:27 GMT">
								<outline text="hooked up to the RT button" created="Sat, 09 Apr 2022 14:28:47 GMT"/>
								</outline>
							</outline>
						<outline text="A re-think on the websockets stuff" created="Sat, 09 Apr 2022 14:01:07 GMT">
							<outline text="if we're running LFR on a publicly accessible server nothing is gained by using websockets" created="Sat, 09 Apr 2022 14:04:27 GMT"/>
							<outline text="when we do it, and we should, it will require modification of the cloud server" created="Sat, 09 Apr 2022 14:04:51 GMT"/>
							<outline text="that happens to be the one component in the RSS system that I don't have current code for, so I can't easily add it. " created="Sat, 09 Apr 2022 14:05:08 GMT"/>
							<outline text="when it's time to do it, the rsscloud server will have a new call that allows the aggregator to register for notification via websocket" created="Sat, 09 Apr 2022 14:05:34 GMT"/>
							<outline text="it'll do that if it's running behind a firewall" created="Sat, 09 Apr 2022 14:06:12 GMT"/>
							</outline>
						</outline>
					<outline text="4/7/22; 5:56:38 PM by DW" created="Thu, 07 Apr 2022 21:56:37 GMT">
						<outline text="Tomorrow" created="Thu, 07 Apr 2022 21:56:38 GMT">
							<outline text="daveappserver websockets code needs help" created="Thu, 07 Apr 2022 21:56:41 GMT">
								<outline text="it handles two calls internally, watch and user" created="Thu, 07 Apr 2022 21:56:53 GMT">
									<outline text="we need to be able to attach a callback that has a chance at the messages first" created="Thu, 07 Apr 2022 21:57:11 GMT"/>
									<outline text="littlefeedreader will want to be able to receive notifications from rsscloud" created="Thu, 07 Apr 2022 21:58:00 GMT"/>
									</outline>
								<outline text="it closes the connection if it gets a message it can't handle" created="Thu, 07 Apr 2022 21:58:43 GMT">
									<outline text="that's insane and unnecessary" created="Thu, 07 Apr 2022 21:58:53 GMT"/>
									<outline text="it's an error, nothing fatal about it" created="Thu, 07 Apr 2022 21:58:59 GMT"/>
									</outline>
								</outline>
							</outline>
						</outline>
					<outline text="4/6/22; 10:30:06 PM by DW" created="Thu, 07 Apr 2022 02:30:05 GMT">
						<outline text="people to collaborate on the reallysimple package" created="Thu, 07 Apr 2022 15:45:45 GMT">
							<outline text="matt mullenweg" created="Thu, 07 Apr 2022 15:46:59 GMT"/>
							<outline text="chuck shotton" created="Thu, 07 Apr 2022 15:47:03 GMT"/>
							<outline text="" created="Thu, 07 Apr 2022 15:47:07 GMT"/>
							</outline>
						<outline text="new rsscloud server" created="Thu, 07 Apr 2022 15:45:45 GMT">
							<outline text="an rsscloud server receives notification that this feed has updated" created="Thu, 07 Apr 2022 15:46:11 GMT"/>
							<outline text="and then sends the url of that feed out to all its subscribers" created="Thu, 07 Apr 2022 15:50:22 GMT"/>
							</outline>
						<outline text="" created="Thu, 07 Apr 2022 15:45:45 GMT"/>
						<outline text="" created="Thu, 07 Apr 2022 15:45:46 GMT"/>
						<outline text="Next up" created="Thu, 07 Apr 2022 02:30:07 GMT">
							<outline text="Prepare reallysimple package for release." created="Thu, 07 Apr 2022 02:30:10 GMT"/>
							<outline text="make the reallysimple database searchable" created="Thu, 07 Apr 2022 14:02:54 GMT"/>
							</outline>
						</outline>
					<outline text="4/6/22; 11:16:36 AM by DW" created="Wed, 06 Apr 2022 15:16:36 GMT">
						<outline text="get icons for feeds from the google service?" created="Sun, 03 Apr 2022 20:37:13 GMT">
							<outline text="&lt;img class=&quot;imgFavIcon&quot; src=&quot;http://www.google.com/s2/favicons?domain=nytimes.com&quot; width=&quot;16&quot; height=&quot;16&quot;&gt;" created="Wed, 06 Apr 2022 15:16:43 GMT"/>
							<outline text="https://t2.gstatic.com/faviconV2?client=SOCIAL&amp;type=FAVICON&amp;fallback_opts=TYPE,SIZE,URL&amp;url=http://yahoo.com&amp;size=64" created="Wed, 06 Apr 2022 17:16:05 GMT"/>
							</outline>
						<outline text="" created="Wed, 06 Apr 2022 15:16:37 GMT"/>
						</outline>
					<outline text="4/4/22; 4:17:31 PM by DW" created="Mon, 04 Apr 2022 20:17:31 GMT">
						<outline text="Next session" created="Mon, 04 Apr 2022 20:17:31 GMT">
							<outline text="design a set of icons to go in the bottom row" created="Mon, 04 Apr 2022 20:17:35 GMT">
								<outline text="do it off on the side, not in the actual software, need to start from scratch" created="Mon, 04 Apr 2022 20:18:16 GMT"/>
								</outline>
							<outline text="make it possible to run sql queries from commands in the menu" created="Mon, 04 Apr 2022 20:20:15 GMT"/>
							</outline>
						</outline>
					<outline text="4/3/22; 10:40:32 AM by DW" created="Sun, 03 Apr 2022 14:40:31 GMT">
						<outline text="next session" created="Sun, 03 Apr 2022 14:41:11 GMT">
							<outline text="the problem with Radio3 feeds is the outline embedded in the item doesn't have the link info. " created="Mon, 04 Apr 2022 03:56:55 GMT">
								<outline text="we've probably never depended on this before. " created="Mon, 04 Apr 2022 03:57:18 GMT"/>
								</outline>
							<outline text="a popup with info about the feed" created="Sun, 03 Apr 2022 20:43:31 GMT"/>
							<outline text="the ask dialog crashes intermittently" created="Sun, 03 Apr 2022 20:39:15 GMT">
								<outline text="let's rewrite it as a closure" created="Mon, 04 Apr 2022 13:30:43 GMT"/>
								</outline>
							<outline text="consider replacing the outline editor for the feed list" created="Sun, 03 Apr 2022 20:38:37 GMT">
								<outline text="use it as an upgrade later" created="Sun, 03 Apr 2022 20:38:54 GMT"/>
								<outline text="in the interim, use the editor from podcast.com" created="Sun, 03 Apr 2022 20:38:59 GMT"/>
								</outline>
							<outline text="have old school set the image in the feed using the Twitter avatar" created="Sun, 03 Apr 2022 20:37:54 GMT"/>
							<outline text="need a button to RT a news ite" created="Sun, 03 Apr 2022 20:36:35 GMT"/>
							<outline text="when you insert new items in the list," created="Sun, 03 Apr 2022 20:34:21 GMT">
								<outline text="insert not necessarily at the top of the list, it's sorted by pubDate" created="Sun, 03 Apr 2022 20:34:56 GMT"/>
								<outline text="the MORE button isn't appearing" created="Sun, 03 Apr 2022 20:35:18 GMT"/>
								</outline>
							<outline text="work on the appearance of each message in the list" created="Sun, 03 Apr 2022 17:10:13 GMT">
								<outline text="i need something relaxing with immediate results" created="Sun, 03 Apr 2022 17:10:25 GMT"/>
								<outline text="leave the database alone for awhile" created="Sun, 03 Apr 2022 17:10:34 GMT"/>
								</outline>
							</outline>
						<outline text="we need a new column in the feeds table, whenChecked" created="Sun, 03 Apr 2022 14:41:12 GMT">
							<outline text="it should be updated every time the feed is checked" created="Sun, 03 Apr 2022 14:41:32 GMT"/>
							<outline text="whenUpdated should only change when something about the feed changed" created="Sun, 03 Apr 2022 14:41:41 GMT"/>
							<outline text="" created="Sun, 03 Apr 2022 14:44:37 GMT"/>
							<outline text="alter table feeds add whenChecked datetime;" created="Sun, 03 Apr 2022 14:44:37 GMT"/>
							<outline text="" created="Sun, 03 Apr 2022 14:44:38 GMT"/>
							</outline>
						<outline text="" created="Sun, 03 Apr 2022 14:41:12 GMT"/>
						</outline>
					<outline text="4/2/22; 9:09:16 AM by DW" created="Sat, 02 Apr 2022 13:09:16 GMT">
						<outline text="Change the way we do scans" created="Sat, 02 Apr 2022 13:09:16 GMT">
							<outline text="Scan every feed that hasn't been scanned in the minimum time" created="Sat, 02 Apr 2022 13:09:21 GMT"/>
							<outline text="This way when we start up we'll quickly get all the updates if restarting the server" created="Sat, 02 Apr 2022 13:09:43 GMT"/>
							<outline text="The minimum time should be larger than the scheduled time between scans" created="Sat, 02 Apr 2022 13:11:28 GMT"/>
							</outline>
						</outline>
					<outline text="4/1/22; 10:07:23 AM by DW" created="Fri, 01 Apr 2022 14:07:22 GMT">
						<outline text="Next session" created="Fri, 01 Apr 2022 21:29:13 GMT">
							<outline text="when you subscribe to a feed, the cursor should be on that feed when the outline opens" created="Sat, 02 Apr 2022 14:54:52 GMT"/>
							<outline text="if there's a MORE link at the bottom, don't draw the border-bottom" created="Sat, 02 Apr 2022 14:12:31 GMT"/>
							<outline text="updating the river when you subscribe or unsubscribe." created="Sat, 02 Apr 2022 13:51:35 GMT"/>
							<outline text="look into linkblog feed" created="Sat, 02 Apr 2022 13:42:47 GMT">
								<outline text="lots of weird shit happening there" created="Sat, 02 Apr 2022 13:43:32 GMT"/>
								</outline>
							<outline text="in database.js -- look in checkFeedAndItems" created="Sat, 02 Apr 2022 02:10:50 GMT">
								<outline text="we call checkFeed, and I changed what it returns, but that's not right" created="Sat, 02 Apr 2022 02:11:15 GMT">
									<outline text="it needs to return what reallySimple returns" created="Sat, 02 Apr 2022 02:11:28 GMT"/>
									</outline>
								<outline text="and when checkFeedAndItems does the websocket transmission, it needs to be converted to the format we send over the API" created="Sat, 02 Apr 2022 02:11:46 GMT"/>
								</outline>
							<outline text="twitter id's aren't being transmitted" created="Fri, 01 Apr 2022 21:32:08 GMT"/>
							<outline text="the icon should come from either the image item in the feed, or the user's icon on twitter if available." created="Fri, 01 Apr 2022 21:32:16 GMT"/>
							<outline text="An array of icons at the bottom of the post, prior art == twitter. " created="Thu, 31 Mar 2022 16:45:01 GMT"/>
							<outline text="Display enclosures" created="Fri, 01 Apr 2022 21:29:23 GMT"/>
							</outline>
						<outline text="sending notification when a feed changes" created="Fri, 01 Apr 2022 14:07:23 GMT">
							<outline text="these are changes to look for" created="Fri, 01 Apr 2022 14:07:34 GMT">
								<outline text="title" created="Fri, 01 Apr 2022 14:07:53 GMT"/>
								<outline text="htmlUrl" created="Fri, 01 Apr 2022 14:07:59 GMT"/>
								<outline text="description" created="Fri, 01 Apr 2022 14:08:03 GMT"/>
								<outline text="pubDate" created="Fri, 01 Apr 2022 14:08:06 GMT"/>
								<outline text="urlCloudServer" created="Fri, 01 Apr 2022 14:08:09 GMT"/>
								<outline text="copyright"/>
								<outline text="generator"/>
								<outline text="language"/>
								<outline text="managingEditor"/>
								<outline text="webMaster"/>
								<outline text="docs"/>
								<outline text="imageUrl"/>
								<outline text="imageTitle"/>
								<outline text="imageLink"/>
								<outline text="imageWidth"/>
								<outline text="imageHeight"/>
								<outline text="imageDescription"/>
								</outline>
							</outline>
						</outline>
					<outline text="3/31/22; 12:44:18 PM by DW" created="Thu, 31 Mar 2022 16:44:18 GMT">
						<outline text="littleoutliner.com -- make it easy to transition to drummer" created="Thu, 31 Mar 2022 18:17:31 GMT"/>
						<outline text="in database.js -- send a websocket message to clients when a feed has changed." created="Thu, 31 Mar 2022 17:00:20 GMT">
							<outline text="the client then puts it in the cache and updates any items displayed that come from that feed" created="Thu, 31 Mar 2022 17:05:09 GMT"/>
							</outline>
						<outline text="When you read a feed and it has changed, shoot it over to the clients to update their cache." created="Thu, 31 Mar 2022 16:44:19 GMT"/>
						<outline text="Display enclosures." created="Thu, 31 Mar 2022 16:44:56 GMT"/>
						<outline text="An array of icons at the bottom of the post, prior art == twitter. " created="Thu, 31 Mar 2022 16:45:01 GMT"/>
						</outline>
					<outline text="3/30/22; 12:49:53 PM by DW" created="Wed, 30 Mar 2022 16:49:52 GMT">
						<outline text="Next session" created="Wed, 30 Mar 2022 16:49:53 GMT">
							<outline text="We have the river displaying on the client, now we have to get info about each of the feeds to the client so it can display the river properly." created="Wed, 30 Mar 2022 16:49:56 GMT"/>
							</outline>
						</outline>
					<outline text="3/29/22; 2:49:15 PM by DW" created="Tue, 29 Mar 2022 18:49:15 GMT">
						<outline text="Update the instant outlines repo" created="Tue, 29 Mar 2022 18:49:16 GMT">
							<outline text="huge disclaimer at the top makes me not interested in the rest" created="Tue, 29 Mar 2022 18:49:22 GMT"/>
							</outline>
						</outline>
					<outline text="3/28/22; 9:41:57 AM by DW" created="Mon, 28 Mar 2022 13:41:57 GMT">
						<outline text="next session" created="Mon, 28 Mar 2022 17:26:22 GMT">
							<outline text="we need to store a lot more info about each feed in the database" created="Mon, 28 Mar 2022 17:26:25 GMT">
								<outline text="copyright" created="Mon, 28 Mar 2022 17:26:35 GMT"/>
								<outline text="generator" created="Mon, 28 Mar 2022 17:27:02 GMT"/>
								<outline text="language" created="Mon, 28 Mar 2022 17:27:06 GMT"/>
								<outline text="pubDate" created="Mon, 28 Mar 2022 17:27:11 GMT"/>
								<outline text="twitterAccount" created="Mon, 28 Mar 2022 17:27:22 GMT"/>
								<outline text="managingEditor" created="Mon, 28 Mar 2022 17:29:02 GMT"/>
								<outline text="webMaster" created="Mon, 28 Mar 2022 17:29:07 GMT"/>
								<outline text="lastBuildDate" created="Mon, 28 Mar 2022 17:29:13 GMT"/>
								<outline text="category" created="Mon, 28 Mar 2022 17:29:29 GMT"/>
								<outline text="docs" created="Mon, 28 Mar 2022 17:29:35 GMT"/>
								<outline text="ttl" created="Mon, 28 Mar 2022 17:29:43 GMT"/>
								<outline text="image" created="Mon, 28 Mar 2022 17:29:50 GMT"/>
								<outline text="rating" created="Mon, 28 Mar 2022 17:29:58 GMT"/>
								<outline text="localtime" created="Mon, 28 Mar 2022 17:30:40 GMT"/>
								</outline>
							<outline text="then write a routine that gets a feed without reading the feed, just by getting stuff out of the database" created="Mon, 28 Mar 2022 17:31:46 GMT"/>
							<outline text="then write a routine that builds a river structure, and hook that into LFR." created="Mon, 28 Mar 2022 17:32:15 GMT"/>
							</outline>
						<outline text="display enclosures" created="Mon, 28 Mar 2022 13:41:57 GMT"/>
						<outline text="a way to view the json of the object you're looking at in the reader" created="Mon, 28 Mar 2022 13:42:02 GMT"/>
						</outline>
					<outline text="3/27/22; 12:32:18 PM by DW" created="Sun, 27 Mar 2022 16:32:18 GMT">
						<outline text="set up the database for search." created="Sun, 27 Mar 2022 20:04:48 GMT"/>
						<outline text="rsscloud" created="Mon, 28 Mar 2022 03:00:13 GMT">
							<outline text="hook LFR up to new rsscloud server that uses websockets" created="Mon, 28 Mar 2022 03:00:23 GMT"/>
							<outline text="this way servers can run on servers that are behind a firewall" created="Mon, 28 Mar 2022 03:01:39 GMT"/>
							</outline>
						<outline text="smaller font in the menu so the checkmark works properly in the feeds menu" created="Sun, 27 Mar 2022 17:36:18 GMT"/>
						<outline text="askdialog sometimes fails to load its html" created="Sun, 27 Mar 2022 17:35:04 GMT">
							<outline text="in time for the code that relies on it" created="Sun, 27 Mar 2022 17:35:14 GMT"/>
							<outline text="i'd like to just include it in the header of the app" created="Sun, 27 Mar 2022 17:35:21 GMT"/>
							</outline>
						<outline text="linkblog feed does not have a permalink" created="Sun, 27 Mar 2022 17:34:16 GMT">
							<outline text="but it does have a link. " created="Sun, 27 Mar 2022 17:34:28 GMT"/>
							<outline text="right now that is not being displayed in the reader. " created="Sun, 27 Mar 2022 17:34:33 GMT"/>
							<outline text="it's not being passed through by reallySimple." created="Sun, 27 Mar 2022 17:34:41 GMT"/>
							</outline>
						<outline text="when you add a feed, the editor isn't opening" created="Sun, 27 Mar 2022 17:16:44 GMT"/>
						<outline text="flincalendar workaround in reallysimple package" created="Sun, 27 Mar 2022 16:32:19 GMT"/>
						<outline text="in database" created="Sun, 27 Mar 2022 16:32:30 GMT">
							<outline text="ctchecks is not being maintained" created="Sun, 27 Mar 2022 16:32:32 GMT"/>
							<outline text="when we info about a feed via the api, don't read the feed, let's keep things fast" created="Sun, 27 Mar 2022 16:32:39 GMT"/>
							<outline text="code that returns a river" created="Sun, 27 Mar 2022 16:33:04 GMT"/>
							</outline>
						</outline>
					<outline text="3/26/22; 11:06:37 AM by DW" created="Sat, 26 Mar 2022 15:06:37 GMT">
						<outline text="attributes on outlines" created="Sat, 26 Mar 2022 21:31:06 GMT">
							<outline text="flincalendar doesn't need to be there" created="Sat, 26 Mar 2022 21:31:11 GMT"/>
							</outline>
						<outline text="database" created="Sat, 26 Mar 2022 15:16:49 GMT">
							<outline text="when loading a river, don't do a scan, just get data from the database" created="Sat, 26 Mar 2022 15:16:51 GMT"/>
							</outline>
						<outline text="The CSS of a feed item" created="Sat, 26 Mar 2022 15:06:38 GMT">
							<outline text="bigger font" created="Sat, 26 Mar 2022 15:06:46 GMT">
								<outline text="font-size: 18px;" created="Sat, 26 Mar 2022 15:08:37 GMT"/>
								<outline text="line-height: 150%;" created="Sat, 26 Mar 2022 15:08:49 GMT"/>
								</outline>
							<outline text="more white space in right margin" created="Sat, 26 Mar 2022 15:06:57 GMT"/>
							<outline text="bigger title" created="Sat, 26 Mar 2022 15:07:11 GMT"/>
							<outline text="less whitespace between top of title and topline." created="Sat, 26 Mar 2022 15:07:13 GMT"/>
							</outline>
						<outline text="the icon?" created="Sat, 26 Mar 2022 15:07:31 GMT">
							<outline text="if you have a twitter account attached use that icon" created="Sat, 26 Mar 2022 15:07:35 GMT"/>
							</outline>
						</outline>
					<outline text="3/25/22; 11:55:51 AM by DW" created="Fri, 25 Mar 2022 15:55:50 GMT">
						<outline text="next session start with" created="Fri, 25 Mar 2022 17:21:20 GMT">
							<outline text="max display length vertically for a post and a More button." created="Fri, 25 Mar 2022 17:21:26 GMT"/>
							<outline text="let's put an edit box at the top of the page" created="Fri, 25 Mar 2022 17:21:51 GMT"/>
							<outline text="show me items from all the feeds i subscribe to, in other words, a real river." created="Fri, 25 Mar 2022 17:21:58 GMT"/>
							</outline>
						<outline text="subscribing to a feed" created="Fri, 25 Mar 2022 15:55:57 GMT">
							<outline text="add it to the opml file" created="Fri, 25 Mar 2022 15:56:08 GMT"/>
							<outline text="save the opml file" created="Fri, 25 Mar 2022 15:56:15 GMT"/>
							<outline text="display the items in the feed" created="Fri, 25 Mar 2022 16:00:32 GMT"/>
							</outline>
						<outline text="updating an item now works" created="Fri, 25 Mar 2022 15:55:51 GMT"/>
						</outline>
					<outline text="3/24/22; 10:38:01 AM by DW" created="Thu, 24 Mar 2022 14:38:00 GMT">
						<outline text="pick up next session " created="Thu, 24 Mar 2022 17:48:30 GMT">
							<outline text="updating an item via WS" created="Thu, 24 Mar 2022 17:48:36 GMT"/>
							<outline text="using feed elements when displaying an item" created="Thu, 24 Mar 2022 17:48:48 GMT"/>
							</outline>
						<outline text="where is flincalendar coming from?" created="Thu, 24 Mar 2022 15:13:03 GMT">
							<outline text="stop exporting it from there" created="Thu, 24 Mar 2022 15:13:09 GMT"/>
							</outline>
						<outline text="client work" created="Thu, 24 Mar 2022 14:38:01 GMT">
							<outline text="when you switch feeds in the feeds menu, the checkmark isn't changing" created="Thu, 24 Mar 2022 15:16:37 GMT"/>
							<outline text="consts at top of viewFeedItem " created="Thu, 24 Mar 2022 15:01:58 GMT">
								<outline text="icon" created="Thu, 24 Mar 2022 15:02:03 GMT"/>
								<outline text="authorName" created="Thu, 24 Mar 2022 15:02:07 GMT"/>
								<outline text="etc" created="Thu, 24 Mar 2022 15:02:10 GMT"/>
								<outline text="need to come from the database not hard-coded" created="Thu, 24 Mar 2022 15:02:12 GMT"/>
								</outline>
							<outline text="Automatically upating posts." created="Thu, 24 Mar 2022 14:45:44 GMT"/>
							<outline text="More... link for long pieces." created="Thu, 24 Mar 2022 14:39:36 GMT">
								<outline text="let's set the boundary at 400 chars. " created="Thu, 24 Mar 2022 14:41:50 GMT"/>
								</outline>
							<outline text="change CSS names to apply to the river, not chat" created="Thu, 24 Mar 2022 14:39:09 GMT"/>
							<outline text="clean things up, there's a bunch of old code in there after the transition yesterday to a closure" created="Thu, 24 Mar 2022 14:39:19 GMT"/>
							</outline>
						</outline>
					<outline text="3/23/22; 10:57:26 AM by DW" created="Wed, 23 Mar 2022 14:57:26 GMT">
						<outline text="new table for likes" created="Wed, 23 Mar 2022 20:45:32 GMT">
							<outline text="create table likes (">
								<outline text="      listName varchar (255), "/>
								<outline text="      itemId int," created="Wed, 23 Mar 2022 20:46:47 GMT"/>
								<outline text="      whenCreated datetime, "/>
								<outline text="      primary key (listName, itemId)"/>
								<outline text="      );"/>
								</outline>
							</outline>
						<outline text="switch over to the client to work on how the display is put together" created="Wed, 23 Mar 2022 14:59:03 GMT">
							<outline text="what's there now is provisional, do it for real with a closure for display of each individual post" created="Wed, 23 Mar 2022 14:59:14 GMT"/>
							</outline>
						<outline text="new database routine, and api call" created="Wed, 23 Mar 2022 14:57:27 GMT">
							<outline text="getUpdatedFeed and /getrecentfeedtems" created="Wed, 23 Mar 2022 14:57:45 GMT"/>
							<outline text="one param -- url of the feed whose recent items you want" created="Wed, 23 Mar 2022 14:58:25 GMT"/>
							<outline text="limited by a config param, maxRiverItems." created="Wed, 23 Mar 2022 14:58:34 GMT"/>
							</outline>
						</outline>
					<outline text="3/22/22; 10:42:17 AM by DW" created="Tue, 22 Mar 2022 14:42:17 GMT">
						<outline text="in littlefeedreader" created="Tue, 22 Mar 2022 14:42:53 GMT">
							<outline text="next session" created="Tue, 22 Mar 2022 17:30:08 GMT">
								<outline text="when you modify a post in a feed, it changes in your reader" created="Tue, 22 Mar 2022 17:30:13 GMT"/>
								</outline>
							<outline text="the home page has a display of items from the feed" created="Tue, 22 Mar 2022 16:37:41 GMT">
								<outline text="reverse chronologic" created="Tue, 22 Mar 2022 16:37:54 GMT"/>
								<outline text="gotten by making a call to the server, which does a database query" created="Tue, 22 Mar 2022 16:37:58 GMT"/>
								<outline text="when a newItem comes in, it goes to the front of the list" created="Tue, 22 Mar 2022 16:38:09 GMT"/>
								<outline text="when an update comes in, we know what to do with that too" created="Tue, 22 Mar 2022 16:38:26 GMT"/>
								</outline>
							<outline text="rewrite the display routines to use closures" created="Tue, 22 Mar 2022 14:43:36 GMT"/>
							<outline text="test with the nytimes feeds" created="Tue, 22 Mar 2022 14:43:12 GMT"/>
							</outline>
						<outline text="scanning opml files when they change" created="Tue, 22 Mar 2022 14:42:18 GMT">
							<outline text="be sure that subscribe and unsubscribe still works after rewrite of code" created="Tue, 22 Mar 2022 14:42:31 GMT"/>
							</outline>
						</outline>
					<outline text="3/21/22; 10:31:53 AM by DW" created="Mon, 21 Mar 2022 14:31:53 GMT">
						<outline text="Next session" created="Mon, 21 Mar 2022 16:40:17 GMT">
							<outline text="periodic feed reading" created="Mon, 21 Mar 2022 16:40:21 GMT"/>
							</outline>
						<outline text="Translate an item from the database to something we transmit to the client." created="Mon, 21 Mar 2022 14:49:36 GMT">
							<outline text="All the data is the same, but it's organized differently. " created="Mon, 21 Mar 2022 14:49:53 GMT"/>
							</outline>
						<outline text="Changes to the items table" created="Mon, 21 Mar 2022 14:31:53 GMT">
							<outline text="get rid of these fields" created="Mon, 21 Mar 2022 14:32:03 GMT">
								<outline text="permaLink -- link does the same job, it's a duplicate" created="Mon, 21 Mar 2022 14:32:16 GMT"/>
								<outline text="fullDescription -- not needed, we don't truncate descriptions" created="Mon, 21 Mar 2022 14:32:31 GMT"/>
								</outline>
							<outline text="I thought about eliminating the id field, considering it redundant" created="Mon, 21 Mar 2022 14:36:42 GMT">
								<outline text="but what if, someday you want to have a URL that points to a specific item" created="Mon, 21 Mar 2022 14:36:54 GMT"/>
								<outline text="it would be a lot easier and simpler to just use the id thatn combining the feedurl and guid." created="Mon, 21 Mar 2022 14:37:07 GMT"/>
								</outline>
							</outline>
						</outline>
					<outline text="3/20/22; 12:55:57 PM by DW" created="Sun, 20 Mar 2022 16:55:56 GMT">
						<outline text="Where to pick up " created="Sun, 20 Mar 2022 23:21:20 GMT">
							<outline text="when notifying the user of a new or changed item, convert the itemRec to the same structure as an item in a reallySimple feed." created="Sun, 20 Mar 2022 23:21:24 GMT"/>
							</outline>
						<outline text="Done" created="Sun, 20 Mar 2022 16:55:57 GMT">
							<outline text="Updating items that changed" created="Sun, 20 Mar 2022 16:56:01 GMT"/>
							<outline text="Not updating items that didn't change." created="Sun, 20 Mar 2022 16:56:08 GMT"/>
							</outline>
						</outline>
					<outline text="3/19/22; 5:01:37 PM by DW" created="Sat, 19 Mar 2022 21:01:36 GMT">
						<outline text="First thing tomorrow" created="Sat, 19 Mar 2022 21:01:37 GMT">
							<outline text="periodically check for new items in a feed" created="Sat, 19 Mar 2022 21:01:41 GMT"/>
							<outline text="in reallySimple -- must process enclosure" created="Sun, 20 Mar 2022 15:31:10 GMT"/>
							</outline>
						<outline text="3/18/22; 4:43:15 PM by DW" created="Fri, 18 Mar 2022 20:43:14 GMT">
							<outline text="First thing tomorrow" created="Fri, 18 Mar 2022 20:43:15 GMT">
								<outline text="when you subscribe to a feed, make sure it's in the feeds table" created="Fri, 18 Mar 2022 20:43:19 GMT"/>
								<outline text="periodically read each feed" created="Fri, 18 Mar 2022 20:43:39 GMT"/>
								<outline text="send update messages via websocket to the clients" created="Fri, 18 Mar 2022 20:43:53 GMT"/>
								</outline>
							</outline>
						</outline>
					<outline text="3/18/22; 9:21:14 AM by DW" created="Fri, 18 Mar 2022 13:21:13 GMT">
						<outline text="Switch to the server." created="Fri, 18 Mar 2022 13:21:14 GMT">
							<outline text="set up a MySQL database, use the schema that River6 uses." created="Fri, 18 Mar 2022 13:21:18 GMT">
								<outline text="https://github.com/scripting/river6/blob/master/docs/database.md" created="Fri, 18 Mar 2022 13:22:27 GMT"/>
								<outline text="create database littlefeedreader character set utf8mb4 collate utf8mb4_unicode_ci;"/>
								</outline>
							<outline text="at startup open the database" created="Fri, 18 Mar 2022 13:38:18 GMT"/>
							<outline text="at startup loop over all the folders, read all feeds.opml files and process them." created="Fri, 18 Mar 2022 13:37:45 GMT"/>
							</outline>
						</outline>
					<outline text="3/12/22; 10:19:23 AM by DW" created="Sat, 12 Mar 2022 15:19:23 GMT">
						<outline text="todo" created="Sat, 12 Mar 2022 15:19:24 GMT">
							<outline text="test get feed url command, you should be able to change the url" created="Sat, 12 Mar 2022 15:19:26 GMT"/>
							<outline text="" created="Sat, 12 Mar 2022 15:19:38 GMT"/>
							</outline>
						</outline>
					<outline text="2/24/22; 11:31:54 AM by DW" created="Thu, 24 Feb 2022 16:31:53 GMT">
						<outline text="the code for the feed viewer is in the riverTemplates project, in the feedviewer section." created="Thu, 24 Feb 2022 16:31:54 GMT"/>
						</outline>
					</outline>
				</outline>
			<outline text="docs/rssnotes.md" isComment="true" created="Mon, 28 Mar 2022 14:28:17 GMT">
				<outline text="### Difference between link and permalink">
					<outline text="I've been doing a review of RSS in 2022, and eventually will release a Node package that reads a feed and returns a JavaScript structure that represents the information in the feed. The names in the object will track the names used in RSS, so for example, each item will have a title and description if the item has those in the feed. The name is the same. "/>
					<outline text="But a feed can have many kinds of links, but there is only one property called link. "/>
					<outline text="The link property goes all the way back to RSS 0.90. Only later did we realize we also need a permalink for the object, so it was made a possible value of the then-new guid element. I know this is confusing, we were confused at the time. In hindsight there should have been a permalink property, and its documentation would have said that it could be used as a unique identifier. That would have fit what eventually became the form in the blogosphere, which is where permalinks come up. "/>
					<outline text="Okay so now I'm sorting out the confusion. "/>
					<outline text="I thought I had it all worked out until I looked at the feed for a linkblog, for example the one for Scripting News. It can fit into the RSS model, but there is no possibility of a permalink, because the linkblog isn't like a normal publication. It uses the link element differently than, say, a NYT feed does, even though the link could be the address of a NYT article. It is not a link to something on the site that hosts the linkblog. That's a really important point. "/>
					<outline text=""/>
					</outline>
				<outline text="### There should be a reference" created="Mon, 28 Mar 2022 14:42:36 GMT">
					<outline text="We should be studying how scriptingNews format evolved into RSS 0.90 then 0.91 then 2.0. "/>
					<outline text="And why RSS 1.0 is its own thing. "/>
					<outline text="And what Atom is."/>
					<outline text="And what the differences are in all of them. "/>
					<outline text="This ought to be on a wiki somewhere, a technical reference. We all have codebases that do something with all this data, but I can't imagine that any of them do it as well as it should be done. Part of the reason for that is the reference doesn't exist. "/>
					</outline>
				</outline>
			<outline text="docs/database.md">
				<outline text="## Database structure for Little Feed Reader">
					<outline text="There are three tables in the feed reader database, &lt;i&gt;feeds, items&lt;/i&gt; and &lt;i&gt;subscriptions.&lt;/i&gt;"/>
					</outline>
				<outline text="### SQL commands to create the tables">
					<outline text="```SQL"/>
					<outline text="drop table feeds;" isComment="true"/>
					<outline text="drop table items;" isComment="true"/>
					<outline text="drop table subscriptions;" isComment="true"/>
					<outline text="use littlefeedreader;" isComment="true"/>
					<outline text="create table feeds (">
						<outline text="      feedUrl varchar (512), "/>
						<outline text="      title text, "/>
						<outline text="      htmlUrl text, "/>
						<outline text="      description text, "/>
						<outline text="      whenCreated datetime,  -- when the database record was created"/>
						<outline text="      whenUpdated datetime, "/>
						<outline text="      ctSubs int,"/>
						<outline text="      ctSecs float,"/>
						<outline text="      ctErrors int default 0, "/>
						<outline text="      ctConsecutiveErrors int default 0, "/>
						<outline text="      errorString text, "/>
						<outline text="      whenChecked datetime, "/>
						<outline text="      ctChecks int default 0, "/>
						<outline text="      whenLastError datetime, "/>
						<outline text="      urlCloudServer text, "/>
						<outline text="      whenLastCloudRenew datetime, "/>
						<outline text="      ctCloudRenews int default 0, "/>
						<outline text="      copyright text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      generator text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      language text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      twitterAccount text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      managingEditor text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      webMaster text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      pubDate datetime," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      lastBuildDate datetime," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      docs text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      ttl int," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      imageUrl text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      imageTitle text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      imageLink text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      imageWidth int default 0," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      imageHeight int default 0," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      imageDescription text," created="Tue, 29 Mar 2022 18:40:51 GMT"/>
						<outline text="      primary key (feedUrl)"/>
						<outline text="      );"/>
						</outline>
					<outline text="create table items (">
						<outline text="      feedUrl varchar (512), "/>
						<outline text="      guid varchar (255), "/>
						<outline text="      title text, "/>
						<outline text="      link text, "/>
						<outline text="      description longtext,  "/>
						<outline text="      pubDate datetime, "/>
						<outline text="      enclosureUrl text, "/>
						<outline text="      enclosureType text, "/>
						<outline text="      enclosureLength int default 0, "/>
						<outline text="      id int default 0, "/>
						<outline text="      whenCreated datetime, "/>
						<outline text="      whenUpdated datetime, "/>
						<outline text="      flDeleted boolean, "/>
						<outline text="      markdowntext longtext," created="Thu, 05 May 2022 15:00:40 GMT"/>
						<outline text="      outlineJsontext text, "/>
						<outline text="      ctLikes int default 0," created="Fri, 06 May 2022 19:02:28 GMT"/>
						<outline text="      primary key (feedUrl, guid)"/>
						<outline text="      );"/>
						</outline>
					<outline text="create table subscriptions (">
						<outline text="      listName varchar (255), "/>
						<outline text="      feedUrl varchar (512), "/>
						<outline text="      whenUpdated datetime, "/>
						<outline text="      primary key (feedUrl, listname)"/>
						<outline text="      );"/>
						</outline>
					<outline text="create table likes (">
						<outline text="      listName varchar (255), "/>
						<outline text="      itemId int," created="Wed, 23 Mar 2022 20:46:47 GMT"/>
						<outline text="      emotion int," created="Fri, 06 May 2022 16:22:32 GMT"/>
						<outline text="      whenCreated datetime, "/>
						<outline text="      primary key (listName, itemId)"/>
						<outline text="      );"/>
						</outline>
					<outline text="```"/>
					</outline>
				</outline>
			<outline text="package.json">
				<outline text="{">
					<outline text="&quot;name&quot;: &quot;littlefeedreader&quot;,"/>
					<outline text="&quot;version&quot;: &quot;0.4.0&quot;,"/>
					<outline text="&quot;author&quot;: &quot;Dave Winer &lt;dave@scripting.com&gt;&quot;,"/>
					<outline text="&quot;main&quot;: &quot;feedreader.js&quot;,"/>
					<outline text="&quot;files&quot;: [" created="Thu, 24 Feb 2022 17:55:44 GMT">
						<outline text="&quot;database.js&quot;," created="Thu, 24 Feb 2022 17:55:59 GMT"/>
						<outline text="&quot;likes.js&quot;," created="Thu, 24 Feb 2022 17:55:59 GMT"/>
						<outline text="&quot;blog.js&quot;" created="Thu, 28 Apr 2022 14:50:35 GMT"/>
						<outline text="]," created="Thu, 24 Feb 2022 17:55:50 GMT"/>
						</outline>
					<outline text="&quot;dependencies&quot; : {">
						<outline text="&quot;request&quot;: &quot;*&quot;,"/>
						<outline text="&quot;md5&quot;: &quot;*&quot;,"/>
						<outline text="&quot;marked&quot;: &quot;3.0.8&quot;,"/>
						<outline text="&quot;daveutils&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davetwitter&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daveappserver&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daverss&quot;: &quot;*&quot;,"/>
						<outline text="&quot;daves3&quot;: &quot;*&quot;,"/>
						<outline text="&quot;nodejs-websocket&quot;: &quot;*&quot;,"/>
						<outline text="&quot;davesql&quot;: &quot;*&quot;,"/>
						<outline text="&quot;reallysimple&quot;: &quot;*&quot;,"/>
						<outline text="&quot;opml&quot;: &quot;*&quot;" created="Fri, 19 Nov 2021 17:19:34 GMT"/>
						<outline text="} "/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="database.js" created="Sat, 19 Mar 2022 14:36:03 GMT">
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const md5 = require (&quot;md5&quot;);"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const davesql = require (&quot;davesql&quot;);"/>
				<outline text="const daveappserver = require (&quot;daveappserver&quot;); "/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Sat, 19 Mar 2022 14:37:27 GMT"/>
				<outline text="exports.start = start;"/>
				<outline text="exports.addSubscription = addSubscription;"/>
				<outline text="exports.deleteSubscription = deleteSubscription;"/>
				<outline text="exports.getUserSubcriptions = getUserSubcriptions;"/>
				<outline text="exports.checkFeed = checkFeed;" isComment="true"/>
				<outline text="exports.checkFeedAndItems = checkFeedAndItems;"/>
				<outline text="exports.checkOneFeed = checkOneFeed;" created="Sun, 03 Apr 2022 15:12:18 GMT"/>
				<outline text="exports.processSubscriptionList = processSubscriptionList;"/>
				<outline text="exports.updateNextFeedIfReady = updateNextFeedIfReady;"/>
				<outline text="exports.updateFeed = updateFeed;" isComment="true"/>
				<outline text="exports.getUpdatedFeed = getUpdatedFeed;"/>
				<outline text="exports.getDatabaseFeed = getDatabaseFeed;"/>
				<outline text="exports.getFeed = getFeed;"/>
				<outline text="exports.getRiver = getRiver;"/>
				<outline text="exports.getRiverFromOneFeed = getRiverFromOneFeed; //4/13/22 by DW" isComment="true" created="Wed, 13 Apr 2022 14:11:12 GMT"/>
				<outline text="exports.deleteItem = deleteItem; //4/22/22 by DW" created="Fri, 22 Apr 2022 14:03:53 GMT"/>
				<outline text="exports.saveFeed = saveFeed; //4/28/22 by DW" created="Fri, 22 Apr 2022 14:03:53 GMT"/>
				<outline text="exports.saveItem = saveItem; " created="Fri, 22 Apr 2022 14:03:53 GMT"/>
				<outline text="exports.convertDatabaseFeed = convertDatabaseFeed;" created="Thu, 28 Apr 2022 17:23:45 GMT"/>
				<outline text="exports.convertDatabaseItem = convertDatabaseItem;" created="Thu, 28 Apr 2022 17:23:45 GMT"/>
				<outline text="exports.isFeedInDatabase = isFeedInDatabase;" created="Thu, 28 Apr 2022 19:30:33 GMT"/>
				<outline text="exports.isItemInDatabase = isItemInDatabase;" created="Thu, 28 Apr 2022 19:30:33 GMT"/>
				<outline text="exports.updateSocketSubscribers = updateSocketSubscribers;" created="Fri, 29 Apr 2022 14:07:38 GMT"/>
				<outline text="exports.getNexItemtId = getNexItemtId;" created="Sat, 19 Mar 2022 14:52:26 GMT"/>
				<outline text="exports.getItemFromDatabase = getItemFromDatabase; //5/7/22 by DW" created="Sat, 19 Mar 2022 14:52:26 GMT"/>
				<outline text="" created="Tue, 03 May 2022 14:51:47 GMT"/>
				<outline text="var config = {" created="Sat, 19 Mar 2022 14:52:27 GMT">
					<outline text="maxRiverItems: 100," created="Wed, 23 Mar 2022 14:17:16 GMT"/>
					<outline text="maxFeedUrlLength: 512,"/>
					<outline text="flUpdateFeedsInBackground: true,"/>
					<outline text="maxLengthFeedTitle: 255,"/>
					<outline text="maxLengthFeedDescription: 512, "/>
					<outline text="maxFeedMetadata: 255, //copyright, generator, language, managingEditor, etc" created="Wed, 30 Mar 2022 13:53:41 GMT"/>
					<outline text="maxGuidLength: 255,"/>
					<outline text="maxListNameLength: 255,"/>
					<outline text="flSkipDuplicateTitles: true"/>
					<outline text="};" created="Sat, 19 Mar 2022 14:52:29 GMT"/>
					</outline>
				<outline text="var stats = {" created="Mon, 21 Mar 2022 14:41:26 GMT">
					<outline text="itemSerialNum: 1 "/>
					<outline text="};" created="Mon, 21 Mar 2022 14:41:30 GMT"/>
					</outline>
				<outline text="" created="Sat, 19 Mar 2022 14:38:09 GMT"/>
				<outline text="function initStats () {" created="Mon, 21 Mar 2022 16:30:12 GMT">
					<outline text="const appStats = daveappserver.getStats ();" created="Mon, 21 Mar 2022 16:30:19 GMT"/>
					<outline text="if (appStats.itemSerialNum !== undefined) {" created="Mon, 21 Mar 2022 16:31:06 GMT">
						<outline text="stats.itemSerialNum = appStats.itemSerialNum;" created="Mon, 21 Mar 2022 16:30:31 GMT"/>
						<outline text="}" created="Mon, 21 Mar 2022 16:31:12 GMT"/>
						</outline>
					<outline text="}" created="Mon, 21 Mar 2022 16:30:36 GMT"/>
					</outline>
				<outline text="function maxStringLength (theString, max) {">
					<outline text="if ((theString === undefined) || (theString === null)) {">
						<outline text="theString = &quot;&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="if (theString.length &gt; max) { //1/27/19 by DW">
						<outline text="theString = utils.stringMid (theString, 1, max);"/>
						<outline text="}"/>
						</outline>
					<outline text="return (theString);"/>
					<outline text="}"/>
					</outline>
				<outline text="function updateSocketSubscribers (verb, jstruct, callback) {" created="Sun, 20 Mar 2022 22:51:47 GMT">
					<outline text="const jsontext = utils.jsonStringify (jstruct);" created="Sun, 20 Mar 2022 22:55:09 GMT"/>
					<outline text="console.log (&quot;updateSocketSubscribers: verb == &quot; + verb + &quot;, jstruct == &quot; + utils.jsonStringify (jstruct));" created="Fri, 01 Apr 2022 15:02:52 GMT"/>
					<outline text="daveappserver.notifySocketSubscribers (verb, jsontext, true, function (conn) {">
						<outline text="return (true); //we're sending every update to every user, later we could narrow this to users who are subscribed" created="Sun, 20 Mar 2022 22:54:31 GMT"/>
						<outline text="});" created="Sat, 06 Mar 2021 20:24:58 GMT"/>
						</outline>
					<outline text="}" created="Sun, 20 Mar 2022 22:52:02 GMT"/>
					</outline>
				<outline text="function getItemGuid (item) {">
					<outline text="var guid = &quot;&quot;;" created="Sun, 20 Mar 2022 15:09:07 GMT"/>
					<outline text="function ok (val) {">
						<outline text="if (val !== undefined) {">
							<outline text="if (val != &quot;null&quot;) {">
								<outline text="return (true);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="return (false);"/>
						<outline text="}"/>
						</outline>
					<outline text="if (ok (item.guid)) {">
						<outline text="guid = item.guid;"/>
						<outline text="}"/>
						</outline>
					<outline text="else {" created="Sun, 20 Mar 2022 15:09:24 GMT">
						<outline text="if (ok (item.pubDate)) {">
							<outline text="guid += item.pubDate;"/>
							<outline text="}"/>
							</outline>
						<outline text="if (ok (item.link)) {">
							<outline text="guid += item.link;"/>
							<outline text="}"/>
							</outline>
						<outline text="if (ok (item.title)) {">
							<outline text="guid += item.title;"/>
							<outline text="}"/>
							</outline>
						<outline text="if (guid.length &gt; 0) {">
							<outline text="guid = md5 (guid);"/>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Sun, 20 Mar 2022 15:09:25 GMT"/>
						</outline>
					<outline text="guid = maxStringLength (guid, config.maxGuidLength);"/>
					<outline text="return (guid);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getDatabaseFeed (feedUrl, callback) {" created="Tue, 22 Mar 2022 15:36:36 GMT">
					<outline text="Changes" isComment="true" created="Wed, 30 Mar 2022 20:04:20 GMT">
						<outline text="3/30/22; 4:04:25 PM by DW" created="Wed, 30 Mar 2022 20:04:22 GMT">
							<outline text="Return everything we have in the database for the feed, but no items." created="Wed, 30 Mar 2022 20:04:25 GMT"/>
							</outline>
						</outline>
					<outline text="var sqltext = &quot;select * from feeds where feedUrl=&quot; + davesql.encode (feedUrl) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (result.length == 0) {">
								<outline text="callback ({&quot;message&quot;: &quot;The feed is not in the database.&quot;});"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="callback (undefined, result [0]);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Tue, 22 Mar 2022 15:36:50 GMT"/>
					</outline>
				<outline text="function changeDatabaseFeed (feedRec, callback) {" created="Tue, 22 Mar 2022 15:38:47 GMT">
					<outline text="const sqltext = &quot;replace into feeds &quot; + davesql.encodeValues (feedRec);"/>
					<outline text="davesql.runSqltext (sqltext, callback);"/>
					<outline text="}" created="Tue, 22 Mar 2022 15:41:15 GMT"/>
					</outline>
				<outline text="function isItemInDatabase (feedUrl, guid, callback) {">
					<outline text="var sqltext = &quot;select * from items where guid=&quot; + davesql.encode (guid) + &quot; and feedUrl=&quot; + davesql.encode (feedUrl) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="callback (false);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (result.length == 0) {">
								<outline text="callback (false);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="callback (true, result [0]);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function isFeedInDatabase (feedUrl, callback) {">
					<outline text="var sqltext = &quot;select * from feeds where feedUrl=&quot; + davesql.encode (feedUrl) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="callback (false);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (result.length == 0) {">
								<outline text="callback (false);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="callback (true, result [0]);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function addSubscription (screenname, feedUrl, callback) {">
					<outline text="var subsRec = {">
						<outline text="listName: maxStringLength (screenname, config.maxListNameLength),"/>
						<outline text="feedUrl: maxStringLength (feedUrl, config.maxFeedUrlLength),"/>
						<outline text="whenUpdated: new Date ()"/>
						<outline text="};"/>
						</outline>
					<outline text="var sqltext = &quot;replace into subscriptions &quot; + davesql.encodeValues (subsRec);"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (callback !== undefined) {">
							<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
								<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 18 Mar 2022 15:46:27 GMT">
								<outline text="console.log (&quot;addSubscription: screenname == &quot; + screenname + &quot;, feedUrl == &quot; + feedUrl);" created="Sat, 19 Mar 2022 14:48:47 GMT"/>
								<outline text="callback (undefined, result [0]);" created="Fri, 18 Mar 2022 15:46:28 GMT"/>
								<outline text="}" created="Fri, 18 Mar 2022 15:46:34 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function deleteSubscription (screenname, feedUrl, callback) {" created="Fri, 18 Mar 2022 15:57:47 GMT">
					<outline text="var sqltext = &quot;delete from subscriptions where listName=&quot; + davesql.encode (screenname) + &quot; and feedUrl=&quot; + davesql.encode (feedUrl) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (callback !== undefined) {">
							<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
								<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 18 Mar 2022 15:46:27 GMT">
								<outline text="console.log (&quot;deleteSubscription: screenname == &quot; + screenname + &quot;, feedUrl == &quot; + feedUrl);" created="Sat, 19 Mar 2022 14:48:47 GMT"/>
								<outline text="callback (undefined, result);" created="Fri, 18 Mar 2022 15:46:28 GMT"/>
								<outline text="}" created="Fri, 18 Mar 2022 15:46:34 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 18 Mar 2022 15:58:07 GMT"/>
					<outline text="" created="Fri, 18 Mar 2022 15:57:55 GMT"/>
					</outline>
				<outline text="function getUserSubcriptions (screenname, callback) {" created="Fri, 18 Mar 2022 15:10:14 GMT">
					<outline text="var sqltext = &quot;select * from subscriptions where listName=&quot; + davesql.encode (screenname) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;getUserSubcriptions: err.message == &quot; + err.message);"/>
							<outline text="if (callback !== undefined) {">
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="callback (undefined, result);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 18 Mar 2022 15:10:30 GMT"/>
					</outline>
				<outline text="function processSubscriptionList (screenname, theList, callback) {" created="Tue, 22 Mar 2022 14:13:09 GMT">
					<outline text="Changes" isComment="true" created="Tue, 22 Mar 2022 14:13:18 GMT">
						<outline text="3/22/22; 10:13:22 AM by DW" created="Tue, 22 Mar 2022 14:13:21 GMT">
							<outline text="theList is a flat array with each element describing a feed." created="Tue, 22 Mar 2022 14:13:22 GMT"/>
							<outline text="since the list element came from an outline, it uses the name xmlUrl where we would now use feedUrl." created="Tue, 22 Mar 2022 14:21:47 GMT"/>
							</outline>
						</outline>
					<outline text="getUserSubcriptions (screenname, function (err, subs) {" created="Fri, 18 Mar 2022 15:12:46 GMT">
						<outline text="function deleteFromSubs (feedUrl) {" created="Fri, 18 Mar 2022 15:51:01 GMT">
							<outline text="var newsubs = new Array (), fldeleted = false;" created="Fri, 18 Mar 2022 15:51:25 GMT"/>
							<outline text="subs.forEach (function (item) {" created="Fri, 18 Mar 2022 15:51:15 GMT">
								<outline text="if (item.feedUrl == feedUrl) {" created="Fri, 18 Mar 2022 15:51:40 GMT">
									<outline text="fldeleted = true;" created="Fri, 18 Mar 2022 16:03:30 GMT"/>
									<outline text="}" created="Fri, 18 Mar 2022 15:52:23 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 18 Mar 2022 16:03:28 GMT">
									<outline text="newsubs.push (item);" created="Fri, 18 Mar 2022 15:52:28 GMT"/>
									<outline text="}" created="Fri, 18 Mar 2022 16:03:33 GMT"/>
									</outline>
								<outline text="});" created="Fri, 18 Mar 2022 15:51:37 GMT"/>
								</outline>
							<outline text="subs = newsubs;" created="Fri, 18 Mar 2022 15:52:48 GMT"/>
							<outline text="return (fldeleted); //if true, you don't need to sub" created="Fri, 18 Mar 2022 16:03:54 GMT"/>
							<outline text="}" created="Fri, 18 Mar 2022 15:51:11 GMT"/>
							</outline>
						<outline text="theList.forEach (function (item) {" created="Tue, 22 Mar 2022 14:19:12 GMT">
							<outline text="if (!deleteFromSubs (item.xmlUrl)) {" created="Fri, 18 Mar 2022 15:50:20 GMT">
								<outline text="checkFeedAndItems (item.xmlUrl, function (err) {" created="Sat, 19 Mar 2022 15:17:29 GMT">
									<outline text="addSubscription (screenname, item.xmlUrl, function (err, result) {" created="Fri, 18 Mar 2022 15:36:26 GMT">
										<outline text="});" created="Fri, 18 Mar 2022 15:42:06 GMT"/>
										</outline>
									<outline text="});" created="Sat, 19 Mar 2022 15:17:43 GMT"/>
									</outline>
								<outline text="}" created="Fri, 18 Mar 2022 16:04:18 GMT"/>
								</outline>
							<outline text="});" created="Tue, 22 Mar 2022 14:19:21 GMT"/>
							</outline>
						<outline text="subs.forEach (function (item) { //each of the subscriptions that were not deleted" created="Fri, 18 Mar 2022 15:53:15 GMT">
							<outline text="deleteSubscription (screenname, item.feedUrl, function (err, result) {" created="Fri, 18 Mar 2022 16:07:04 GMT">
								<outline text="console.log (&quot;Unsubbed: &quot; + item.feedUrl);" isComment="true" created="Fri, 18 Mar 2022 15:53:47 GMT"/>
								<outline text="});" created="Fri, 18 Mar 2022 16:07:43 GMT"/>
								</outline>
							<outline text="});" created="Fri, 18 Mar 2022 15:53:34 GMT"/>
							</outline>
						<outline text="});" created="Fri, 18 Mar 2022 15:13:04 GMT"/>
						</outline>
					<outline text="theList.forEach (function (item) { //3/29/22 by DW">
						<outline text="isFeedInDatabase (item.xmlUrl, function (flInDatabase, feedRec2) {" created="Tue, 29 Mar 2022 19:29:53 GMT">
							<outline text="if (!flInDatabase) {" created="Tue, 29 Mar 2022 19:30:01 GMT">
								<outline text="checkFeedAndItems (item.xmlUrl);" created="Tue, 29 Mar 2022 19:40:39 GMT"/>
								<outline text="}" created="Tue, 29 Mar 2022 19:30:08 GMT"/>
								</outline>
							<outline text="});" created="Tue, 29 Mar 2022 19:29:54 GMT"/>
							</outline>
						<outline text="});" created="Tue, 29 Mar 2022 19:37:00 GMT"/>
						</outline>
					<outline text="}" created="Tue, 22 Mar 2022 14:14:09 GMT"/>
					</outline>
				<outline text="function getNexItemtId () { //5/3/22 by DW" created="Tue, 03 May 2022 14:50:09 GMT">
					<outline text="var theId = stats.itemSerialNum++;" created="Mon, 21 Mar 2022 14:43:56 GMT"/>
					<outline text="daveappserver.saveStats (stats);"/>
					<outline text="return (theId);" created="Tue, 03 May 2022 14:50:41 GMT"/>
					<outline text="}" created="Tue, 03 May 2022 14:50:19 GMT"/>
					</outline>
				<outline text="function saveItem (itemRec, callback) {" created="Sun, 20 Mar 2022 16:32:13 GMT">
					<outline text="Changes" isComment="true" created="Thu, 28 Apr 2022 16:43:47 GMT">
						<outline text="4/28/22; 12:43:50 PM by DW" created="Thu, 28 Apr 2022 16:43:48 GMT">
							<outline text="Check if id is defined, if not, assign it here." created="Thu, 28 Apr 2022 16:43:50 GMT"/>
							</outline>
						</outline>
					<outline text="if (itemRec.id === undefined) { //it's a new item" created="Mon, 21 Mar 2022 14:45:16 GMT">
						<outline text="itemRec.id = getNexItemtId ();" created="Mon, 21 Mar 2022 14:43:56 GMT"/>
						<outline text="}" created="Mon, 21 Mar 2022 14:45:26 GMT"/>
						</outline>
					<outline text="var sqltext = &quot;replace into items &quot; + davesql.encodeValues (itemRec);"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="if (callback !== undefined) {" created="Sat, 19 Mar 2022 16:17:31 GMT">
								<outline text="callback (err);" created="Sat, 19 Mar 2022 16:17:21 GMT"/>
								<outline text="}" created="Sat, 19 Mar 2022 16:17:36 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (undefined, result);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Sun, 20 Mar 2022 16:32:33 GMT"/>
					</outline>
				<outline text="function getItemFromDatabase (id, callback) { //5/7/22 by DW" created="Sat, 07 May 2022 14:01:29 GMT">
					<outline text="Changes" isComment="true" created="Sat, 07 May 2022 14:01:53 GMT">
						<outline text="5/7/22; 10:01:56 AM by DW" created="Sat, 07 May 2022 14:01:55 GMT">
							<outline text="Lookup an item based on its (internal) id and return all the fields in the item." created="Sat, 07 May 2022 14:01:56 GMT"/>
							</outline>
						</outline>
					<outline text="var sqltext = &quot;select * from items where id=&quot; + davesql.encode (id) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
							<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 18 Mar 2022 15:46:27 GMT">
							<outline text="if (result.length == 0) {">
								<outline text="let err = {message: &quot;Can't find the item with id == &quot; + id + &quot;.&quot;};" created="Fri, 22 Apr 2022 13:56:15 GMT"/>
								<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}"/>
								</outline>
							<outline text="else {" created="Fri, 22 Apr 2022 13:57:05 GMT">
								<outline text="callback (undefined, result [0]);" created="Sat, 07 May 2022 14:03:25 GMT"/>
								<outline text="}" created="Fri, 22 Apr 2022 13:57:08 GMT"/>
								</outline>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:34 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Sat, 07 May 2022 14:01:45 GMT"/>
					</outline>
				<outline text="function deleteItem (id, callback) { //4/22/22 by DW" created="Fri, 22 Apr 2022 13:40:51 GMT">
					<outline text="getItemFromDatabase (id, function (err, itemRec) {" created="Sat, 07 May 2022 14:04:32 GMT">
						<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
							<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 07 May 2022 14:05:01 GMT">
							<outline text="itemRec.flDeleted = true;" created="Fri, 22 Apr 2022 13:57:43 GMT"/>
							<outline text="saveItem (itemRec, function (err, data) {" created="Fri, 22 Apr 2022 13:57:52 GMT">
								<outline text="if (err) {" created="Fri, 22 Apr 2022 14:13:10 GMT">
									<outline text="callback (err);" created="Fri, 22 Apr 2022 14:13:13 GMT"/>
									<outline text="}" created="Fri, 22 Apr 2022 14:13:16 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 22 Apr 2022 14:13:17 GMT">
									<outline text="var convertedRec = convertDatabaseItem (itemRec);" created="Sat, 07 May 2022 14:06:36 GMT"/>
									<outline text="updateSocketSubscribers (&quot;deletedItem&quot;, convertedRec);" created="Sun, 20 Mar 2022 22:49:29 GMT"/>
									<outline text="callback (undefined, convertedRec);" created="Fri, 22 Apr 2022 14:13:19 GMT"/>
									<outline text="}" created="Fri, 22 Apr 2022 14:13:28 GMT"/>
									</outline>
								<outline text="});" created="Fri, 22 Apr 2022 14:13:04 GMT"/>
								</outline>
							<outline text="}" created="Sat, 07 May 2022 14:05:03 GMT"/>
							</outline>
						<outline text="});" created="Sat, 07 May 2022 14:04:44 GMT"/>
						</outline>
					<outline text="" isComment="true" created="Sat, 07 May 2022 14:04:32 GMT"/>
					<outline text="var sqltext = &quot;select * from items where id=&quot; + davesql.encode (id) + &quot;;&quot;;" isComment="true"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {" isComment="true">
						<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
							<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 18 Mar 2022 15:46:27 GMT">
							<outline text="if (result.length == 0) {">
								<outline text="let err = {message: &quot;Can't delete the item with id == &quot; + id + &quot; because it doesn't exist.&quot;};" created="Fri, 22 Apr 2022 13:56:15 GMT"/>
								<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}"/>
								</outline>
							<outline text="else {" created="Fri, 22 Apr 2022 13:57:05 GMT">
								<outline text="var itemRec = result [0];" created="Fri, 22 Apr 2022 13:57:33 GMT"/>
								<outline text="itemRec.flDeleted = true;" created="Fri, 22 Apr 2022 13:57:43 GMT"/>
								<outline text="saveItem (itemRec, function (err, data) {" created="Fri, 22 Apr 2022 13:57:52 GMT">
									<outline text="if (err) {" created="Fri, 22 Apr 2022 14:13:10 GMT">
										<outline text="callback (err);" created="Fri, 22 Apr 2022 14:13:13 GMT"/>
										<outline text="}" created="Fri, 22 Apr 2022 14:13:16 GMT"/>
										</outline>
									<outline text="else {" created="Fri, 22 Apr 2022 14:13:17 GMT">
										<outline text="updateSocketSubscribers (&quot;deletedItem&quot;, convertDatabaseItem (itemRec));" created="Sun, 20 Mar 2022 22:49:29 GMT"/>
										<outline text="callback (undefined, itemRec);" created="Fri, 22 Apr 2022 14:13:19 GMT"/>
										<outline text="}" created="Fri, 22 Apr 2022 14:13:28 GMT"/>
										</outline>
									<outline text="});" created="Fri, 22 Apr 2022 14:13:04 GMT"/>
									</outline>
								<outline text="}" created="Fri, 22 Apr 2022 13:57:08 GMT"/>
								</outline>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:34 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 22 Apr 2022 13:41:01 GMT"/>
					</outline>
				<outline text="function saveFeed (feedRec, callback) {" created="Fri, 01 Apr 2022 14:17:12 GMT">
					<outline text="const sqltext = &quot;replace into feeds &quot; + davesql.encodeValues (feedRec);"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="if (callback !== undefined) {" created="Sat, 19 Mar 2022 16:17:31 GMT">
								<outline text="callback (err);" created="Sat, 19 Mar 2022 16:17:21 GMT"/>
								<outline text="}" created="Sat, 19 Mar 2022 16:17:36 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (undefined, feedRec);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 01 Apr 2022 14:17:19 GMT"/>
					</outline>
				<outline text="function convertDatabaseItem (itemRec) { //convert database item to the item struct defined by the API" created="Mon, 21 Mar 2022 14:51:45 GMT">
					<outline text="Changes" isComment="true" created="Mon, 21 Mar 2022 14:52:33 GMT">
						<outline text="4/3/22; 11:51:32 AM by DW" created="Sun, 03 Apr 2022 15:51:32 GMT">
							<outline text="I want to know when the item was updated, it may fit into the user interface somehow, so I uncommented it." created="Sun, 03 Apr 2022 15:51:33 GMT"/>
							</outline>
						<outline text="3/30/22; 11:45:50 AM by DW" created="Wed, 30 Mar 2022 15:45:49 GMT">
							<outline text="Added feedUrl to the returned struct." created="Wed, 30 Mar 2022 15:45:50 GMT"/>
							</outline>
						<outline text="3/21/22; 10:52:37 AM by DW" created="Mon, 21 Mar 2022 14:52:36 GMT">
							<outline text="Convert database item to the item struct defined by the API." created="Mon, 21 Mar 2022 14:52:37 GMT"/>
							</outline>
						</outline>
					<outline text="function convertDate (d) {" created="Mon, 21 Mar 2022 15:07:26 GMT">
						<outline text="if ((d === undefined) || (d == null)) {" created="Wed, 23 Mar 2022 14:53:59 GMT">
							<outline text="return (undefined);" created="Wed, 23 Mar 2022 14:54:35 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:54:28 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Mar 2022 14:54:41 GMT">
							<outline text="return (new Date (d).toUTCString ());"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:54:43 GMT"/>
							</outline>
						<outline text="}" created="Mon, 21 Mar 2022 15:07:37 GMT"/>
						</outline>
					<outline text="function notNull (val) {" created="Wed, 23 Mar 2022 14:49:40 GMT">
						<outline text="if (val === undefined) {" created="Wed, 23 Mar 2022 14:49:56 GMT">
							<outline text="return (false);" created="Wed, 23 Mar 2022 14:50:04 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:50:07 GMT"/>
							</outline>
						<outline text="if (val == null) {" created="Wed, 23 Mar 2022 14:50:12 GMT">
							<outline text="return (false);" created="Wed, 23 Mar 2022 14:50:22 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:50:27 GMT"/>
							</outline>
						<outline text="return (true);" created="Wed, 23 Mar 2022 14:50:28 GMT"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:49:48 GMT"/>
						</outline>
					<outline text="function checkNull (val) {" created="Wed, 23 Mar 2022 14:51:36 GMT">
						<outline text="if (notNull (val)) {" created="Wed, 23 Mar 2022 14:51:49 GMT">
							<outline text="return (val);" created="Wed, 23 Mar 2022 14:52:03 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:51:57 GMT"/>
							</outline>
						<outline text="return (undefined);" created="Wed, 23 Mar 2022 14:52:12 GMT"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:51:45 GMT"/>
						</outline>
					<outline text="var apiRec = {" created="Mon, 21 Mar 2022 14:52:34 GMT">
						<outline text="feedUrl: itemRec.feedUrl," created="Wed, 30 Mar 2022 15:45:30 GMT"/>
						<outline text="guid: checkNull (itemRec.guid)," created="Mon, 21 Mar 2022 14:53:51 GMT"/>
						<outline text="title: checkNull (itemRec.title)," created="Mon, 21 Mar 2022 14:55:37 GMT"/>
						<outline text="link: checkNull (itemRec.link)," created="Mon, 21 Mar 2022 14:55:37 GMT"/>
						<outline text="description: checkNull (itemRec.description)," created="Mon, 21 Mar 2022 14:55:37 GMT"/>
						<outline text="id: itemRec.id," created="Mon, 21 Mar 2022 14:55:37 GMT"/>
						<outline text="ctLikes: itemRec.ctLikes, //5/6/22 by DW" created="Fri, 06 May 2022 19:06:49 GMT"/>
						<outline text="pubDate: convertDate (itemRec.pubDate)," created="Mon, 21 Mar 2022 14:55:37 GMT"/>
						<outline text="whenReceived: convertDate (itemRec.whenCreated), //when the database item was created" created="Mon, 21 Mar 2022 14:55:37 GMT"/>
						<outline text="whenUpdated: convertDate (itemRec.whenUpdated) //when the database item last changed" created="Mon, 21 Mar 2022 14:55:37 GMT"/>
						<outline text="}" created="Mon, 21 Mar 2022 14:53:37 GMT"/>
						</outline>
					<outline text="if (notNull (itemRec.enclosureUrl)) {" created="Mon, 21 Mar 2022 14:59:10 GMT">
						<outline text="var length = undefined, type = undefined;" created="Mon, 21 Mar 2022 15:03:01 GMT"/>
						<outline text="if (itemRec.enclosureLength != null) {" created="Mon, 21 Mar 2022 15:03:01 GMT">
							<outline text="try {" created="Mon, 21 Mar 2022 15:03:42 GMT">
								<outline text="length = Number (itemRec.enclosureLength);" created="Mon, 21 Mar 2022 15:03:57 GMT"/>
								<outline text="}" created="Mon, 21 Mar 2022 15:03:43 GMT"/>
								</outline>
							<outline text="catch (err) {" created="Mon, 21 Mar 2022 15:03:44 GMT">
								<outline text="}" created="Mon, 21 Mar 2022 15:03:47 GMT"/>
								</outline>
							<outline text="}" created="Mon, 21 Mar 2022 15:03:31 GMT"/>
							</outline>
						<outline text="if (itemRec.enclosureType != null) {" created="Mon, 21 Mar 2022 15:19:51 GMT">
							<outline text="type = itemRec.enclosureType;" created="Mon, 21 Mar 2022 15:20:05 GMT"/>
							<outline text="}" created="Mon, 21 Mar 2022 15:19:57 GMT"/>
							</outline>
						<outline text="apiRec.enclosure = {" created="Mon, 21 Mar 2022 15:01:10 GMT">
							<outline text="url: itemRec.enclosureUrl," created="Mon, 21 Mar 2022 14:56:29 GMT"/>
							<outline text="type," created="Mon, 21 Mar 2022 14:56:36 GMT"/>
							<outline text="length" created="Mon, 21 Mar 2022 14:56:36 GMT"/>
							<outline text="};" created="Mon, 21 Mar 2022 15:01:15 GMT"/>
							</outline>
						<outline text="}" created="Mon, 21 Mar 2022 14:59:24 GMT"/>
						</outline>
					<outline text="if (notNull (itemRec.outlineJsontext)) {" created="Mon, 21 Mar 2022 15:04:46 GMT">
						<outline text="try {" created="Mon, 21 Mar 2022 15:05:46 GMT">
							<outline text="apiRec.outline = JSON.parse (itemRec.outlineJsontext);" created="Mon, 21 Mar 2022 15:05:01 GMT"/>
							<outline text="}" created="Mon, 21 Mar 2022 15:05:48 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Mon, 21 Mar 2022 15:05:48 GMT">
							<outline text="}" created="Mon, 21 Mar 2022 15:05:52 GMT"/>
							</outline>
						<outline text="}" created="Mon, 21 Mar 2022 15:04:54 GMT"/>
						</outline>
					<outline text="if (notNull (itemRec.markdowntext)) { //5/5/22 by DW" created="Mon, 21 Mar 2022 15:04:46 GMT">
						<outline text="apiRec.markdowntext = itemRec.markdowntext;" created="Thu, 05 May 2022 15:10:51 GMT"/>
						<outline text="}" created="Mon, 21 Mar 2022 15:04:54 GMT"/>
						</outline>
					<outline text="if (apiRec.ctLikes === undefined) { //5/7/22 by DW" created="Sat, 07 May 2022 14:30:14 GMT">
						<outline text="apiRec.ctLikes = 0;" created="Sat, 07 May 2022 14:30:32 GMT"/>
						<outline text="}" created="Sat, 07 May 2022 14:30:28 GMT"/>
						</outline>
					<outline text="return (apiRec);" created="Mon, 21 Mar 2022 15:27:15 GMT"/>
					<outline text="}" created="Mon, 21 Mar 2022 14:52:00 GMT"/>
					</outline>
				<outline text="function convertDatabaseFeed (feedRec) {" created="Wed, 30 Mar 2022 20:04:58 GMT">
					<outline text="Changes" isComment="true" created="Wed, 30 Mar 2022 20:07:49 GMT">
						<outline text="3/30/22; 4:07:52 PM by DW" created="Wed, 30 Mar 2022 20:07:51 GMT">
							<outline text="Created." created="Wed, 30 Mar 2022 20:07:54 GMT"/>
							</outline>
						</outline>
					<outline text="function notNull (val) {" created="Wed, 23 Mar 2022 14:49:40 GMT">
						<outline text="if (val === undefined) {" created="Wed, 23 Mar 2022 14:49:56 GMT">
							<outline text="return (false);" created="Wed, 23 Mar 2022 14:50:04 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:50:07 GMT"/>
							</outline>
						<outline text="if (val == null) {" created="Wed, 23 Mar 2022 14:50:12 GMT">
							<outline text="return (false);" created="Wed, 23 Mar 2022 14:50:22 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:50:27 GMT"/>
							</outline>
						<outline text="return (true);" created="Wed, 23 Mar 2022 14:50:28 GMT"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:49:48 GMT"/>
						</outline>
					<outline text="function checkNull (val) {" created="Wed, 23 Mar 2022 14:51:36 GMT">
						<outline text="if (notNull (val)) {" created="Wed, 23 Mar 2022 14:51:49 GMT">
							<outline text="return (val);" created="Wed, 23 Mar 2022 14:52:03 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:51:57 GMT"/>
							</outline>
						<outline text="return (undefined);" created="Wed, 23 Mar 2022 14:52:12 GMT"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:51:45 GMT"/>
						</outline>
					<outline text="function convertDate (d) {" created="Mon, 21 Mar 2022 15:07:26 GMT">
						<outline text="if ((d === undefined) || (d == null)) {" created="Wed, 23 Mar 2022 14:53:59 GMT">
							<outline text="return (undefined);" created="Wed, 23 Mar 2022 14:54:35 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:54:28 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Mar 2022 14:54:41 GMT">
							<outline text="return (new Date (d).toUTCString ());"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:54:43 GMT"/>
							</outline>
						<outline text="}" created="Mon, 21 Mar 2022 15:07:37 GMT"/>
						</outline>
					<outline text="var apiRec = {" created="Wed, 30 Mar 2022 20:05:32 GMT">
						<outline text="feedUrl: feedRec.feedUrl," created="Wed, 30 Mar 2022 20:09:12 GMT"/>
						<outline text="title: checkNull (feedRec.title)," created="Wed, 30 Mar 2022 20:09:20 GMT"/>
						<outline text="link: checkNull (feedRec.htmlUrl)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="description: checkNull (feedRec.description)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="pubDate: convertDate (feedRec.pubDate)," created="Wed, 30 Mar 2022 20:11:44 GMT"/>
						<outline text="whenCreated: convertDate (feedRec.whenCreated)," created="Wed, 30 Mar 2022 20:11:44 GMT"/>
						<outline text="whenUpdated: convertDate (feedRec.whenUpdated)," created="Wed, 30 Mar 2022 20:11:44 GMT"/>
						<outline text="ctSubs: checkNull (feedRec.ctSubs)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="ctSecs: checkNull (feedRec.ctSecs)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="ctErrors: checkNull (feedRec.ctErrors)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="ctConsecutiveErrors: checkNull (feedRec.ctConsecutiveErrors)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="errorString: checkNull (feedRec.errorString)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="whenChecked: convertDate (feedRec.whenChecked), //4/3/22 by DW" created="Wed, 30 Mar 2022 20:11:44 GMT"/>
						<outline text="ctChecks: checkNull (feedRec.ctChecks)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="whenLastError: convertDate (feedRec.whenLastError)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="urlCloudServer: checkNull (feedRec.urlCloudServer)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="whenLastCloudRenew: convertDate (feedRec.whenLastCloudRenew)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="ctCloudRenews: checkNull (feedRec.ctCloudRenews)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="copyright: checkNull (feedRec.copyright)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="generator: checkNull (feedRec.generator)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="language: checkNull (feedRec.language)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="twitterAccount: checkNull (feedRec.twitterAccount)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="managingEditor: checkNull (feedRec.managingEditor)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="webMaster: checkNull (feedRec.webMaster)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="lastBuildDate: convertDate (feedRec.lastBuildDate)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="docs: checkNull (feedRec.docs)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="ttl: checkNull (feedRec.ttl)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="imageUrl: checkNull (feedRec.imageUrl)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="imageTitle: checkNull (feedRec.imageTitle)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="imageLink: checkNull (feedRec.imageLink)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="imageWidth: checkNull (feedRec.imageWidth)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="imageHeight: checkNull (feedRec.imageHeight)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="imageDescription: checkNull (feedRec.imageDescription)," created="Wed, 30 Mar 2022 20:10:37 GMT"/>
						<outline text="};" created="Wed, 30 Mar 2022 20:05:37 GMT"/>
						</outline>
					<outline text="return (apiRec);" created="Mon, 21 Mar 2022 15:27:15 GMT"/>
					<outline text="}" created="Wed, 30 Mar 2022 20:05:08 GMT"/>
					</outline>
				<outline text="function convertItemList (queryResult) {" created="Wed, 30 Mar 2022 15:37:34 GMT">
					<outline text="var itemList = new Array ();" created="Wed, 30 Mar 2022 15:38:07 GMT"/>
					<outline text="queryResult.forEach (function (item) {" created="Wed, 23 Mar 2022 14:31:40 GMT">
						<outline text="itemList.push (convertDatabaseItem (item));" created="Wed, 23 Mar 2022 14:31:51 GMT"/>
						<outline text="});" created="Wed, 23 Mar 2022 14:31:47 GMT"/>
						</outline>
					<outline text="return (itemList);" created="Wed, 30 Mar 2022 15:38:52 GMT"/>
					<outline text="}" created="Wed, 30 Mar 2022 15:37:59 GMT"/>
					</outline>
				<outline text="function countSubsForFeed (feedUrl, callback) {">
					<outline text="var sqltext = &quot;select count(*) as theCount from subscriptions where feedUrl = &quot; + davesql.encode (feedUrl) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;countSubsForFeed: result == &quot; + utils.jsonStringify (result));" isComment="true"/>
							<outline text="callback (undefined, result [0].theCount);"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getUpdatedFeed (feedUrl, callback) {" created="Wed, 23 Mar 2022 14:15:32 GMT">
					<outline text="checkFeedAndItems (feedUrl, function (err, theFeed, feedRec) {" created="Wed, 23 Mar 2022 18:31:03 GMT">
						<outline text="if (err) {" created="Fri, 25 Mar 2022 15:47:47 GMT">
							<outline text="callback (err);" created="Fri, 25 Mar 2022 15:48:02 GMT"/>
							<outline text="}" created="Fri, 25 Mar 2022 15:47:53 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 25 Mar 2022 15:47:53 GMT">
							<outline text="const sqltext = &quot;select * from items where flDeleted=false and feedUrl=&quot; + davesql.encode (feedUrl) + &quot; order by pubDate desc limit &quot; + config.maxRiverItems + &quot;;&quot;;" created="Wed, 23 Mar 2022 14:22:51 GMT"/>
							<outline text="davesql.runSqltext (sqltext, function (err, result) {">
								<outline text="if (err) {">
									<outline text="callback (err);" created="Sat, 19 Mar 2022 16:17:21 GMT"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="theFeed.items = convertItemList (result);" created="Thu, 24 Mar 2022 15:38:13 GMT"/>
									<outline text="callback (undefined, convertDatabaseFeed (theFeed));"/>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Fri, 25 Mar 2022 15:47:55 GMT"/>
							</outline>
						<outline text="});" created="Wed, 23 Mar 2022 18:31:04 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Mar 2022 14:15:46 GMT"/>
					</outline>
				<outline text="function recordFeedError (feedUrl, err) { //4/28/22 by DW" created="Thu, 28 Apr 2022 17:05:06 GMT">
					<outline text="isFeedInDatabase (feedUrl, function (flInDatabase, feedRec) {" created="Thu, 28 Apr 2022 17:05:43 GMT">
						<outline text="feedRec.whenChecked = new Date ();" created="Thu, 28 Apr 2022 17:05:57 GMT"/>
						<outline text="feedRec.ctChecks++;" created="Thu, 28 Apr 2022 17:06:19 GMT"/>
						<outline text="feedRec.ctErrors++;" created="Thu, 28 Apr 2022 17:09:47 GMT"/>
						<outline text="feedRec.ctConsecutiveErrors++;" created="Thu, 28 Apr 2022 17:09:47 GMT"/>
						<outline text="feedRec.errorString = err.message;" created="Thu, 28 Apr 2022 17:09:47 GMT"/>
						<outline text="saveFeed (feedRec);" created="Fri, 01 Apr 2022 14:17:29 GMT"/>
						<outline text="});" created="Thu, 28 Apr 2022 17:05:46 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 17:05:13 GMT"/>
					</outline>
				<outline text="function checkFeed (feedUrl, callback) { " created="Sat, 19 Mar 2022 15:13:43 GMT">
					<outline text="Changes" isComment="true" created="Sat, 19 Mar 2022 20:51:08 GMT">
						<outline text="4/28/22; 1:07:47 PM by DW" created="Thu, 28 Apr 2022 17:07:47 GMT">
							<outline text="If there's an error reading the feed, still set whenChecked and ctChecks." created="Thu, 28 Apr 2022 17:07:48 GMT"/>
							</outline>
						<outline text="4/3/22; 12:53:15 PM by DW" created="Sun, 03 Apr 2022 16:53:15 GMT">
							<outline text="Add twitterAccount to each record." created="Sun, 03 Apr 2022 16:53:15 GMT"/>
							</outline>
						<outline text="4/2/22; 9:18:33 AM by DW" created="Sat, 02 Apr 2022 13:18:32 GMT">
							<outline text="Undid yesterday's change and then added it back. We need to return both the feed we read through the reallysimple package and the feed as read from the database (feedRec), which is what we will return through the API." created="Sat, 02 Apr 2022 13:18:41 GMT"/>
							</outline>
						<outline text="4/1/22; 5:24:15 PM by DW" created="Fri, 01 Apr 2022 21:24:15 GMT">
							<outline text="In the callback we were sending back the feed as read from reallysimple. " created="Fri, 01 Apr 2022 21:24:16 GMT"/>
							<outline text="What we really need to do is to return the feedrec as processed by convertDatabaseFeed. " created="Fri, 01 Apr 2022 21:24:35 GMT"/>
							<outline text="That the format that we always send back through the API." created="Fri, 01 Apr 2022 21:24:55 GMT"/>
							</outline>
						<outline text="3/19/22; 4:51:11 PM by DW" created="Sat, 19 Mar 2022 20:51:10 GMT">
							<outline text="the central feed reading routine." created="Sat, 19 Mar 2022 20:51:11 GMT"/>
							<outline text="reads feed, adds to database or updates the record in database if it was already there, calls back with the feed contents." created="Tue, 22 Mar 2022 16:58:54 GMT"/>
							<outline text="options struct allows you to control details. " created="Tue, 22 Mar 2022 16:58:59 GMT"/>
							</outline>
						<outline text="What this does" isComment="true" created="Sat, 02 Apr 2022 13:45:22 GMT">
							<outline text="This is a central routine." created="Sat, 02 Apr 2022 13:45:25 GMT"/>
							<outline text="We read the feed from the source and from the database." created="Sat, 02 Apr 2022 13:45:47 GMT"/>
							<outline text="If the feed isn't in the database, we update." created="Sat, 02 Apr 2022 13:46:04 GMT"/>
							<outline text="If there's a difference between the feed we read and the feed in the database, we integrate the changes and update the database." created="Sat, 02 Apr 2022 13:46:23 GMT"/>
							<outline text="The callback gets two struct as params:" created="Sat, 02 Apr 2022 13:46:49 GMT">
								<outline text="theFeed -- which is what we read from the feed through the reallysimple package" created="Sat, 02 Apr 2022 13:47:00 GMT"/>
								<outline text="feedRec -- the database record we updated." created="Sat, 02 Apr 2022 13:47:20 GMT"/>
								</outline>
							<outline text="It's only called from one place -- checkFeedAndItems." created="Sat, 02 Apr 2022 13:54:44 GMT"/>
							</outline>
						</outline>
					<outline text="function callbackWithError (message) {" created="Wed, 30 Mar 2022 14:06:33 GMT">
						<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 16:21:44 GMT">
							<outline text="callback ({message});" created="Sat, 19 Mar 2022 15:15:16 GMT"/>
							<outline text="}" created="Tue, 22 Mar 2022 16:21:50 GMT"/>
							</outline>
						<outline text="}" created="Wed, 30 Mar 2022 14:06:46 GMT"/>
						</outline>
					<outline text="const whenstart = new Date ();" created="Sat, 19 Mar 2022 16:01:20 GMT"/>
					<outline text="if (feedUrl === undefined) {" created="Wed, 30 Mar 2022 14:04:08 GMT">
						<outline text="callbackWithError (&quot;Can't check the feed because the URL is undefined.&quot;);" created="Wed, 30 Mar 2022 14:04:48 GMT"/>
						<outline text="return;" created="Wed, 30 Mar 2022 14:05:15 GMT"/>
						<outline text="}" created="Wed, 30 Mar 2022 14:04:42 GMT"/>
						</outline>
					<outline text="if (feedUrl.length &gt; config.maxFeedUrlLength) {" created="Wed, 30 Mar 2022 14:04:08 GMT">
						<outline text="callbackWithError (&quot;Can't check the feed because the URL is too long, max length is &quot; + config.maxFeedUrlLength + &quot;.&quot;);" created="Wed, 30 Mar 2022 14:04:48 GMT"/>
						<outline text="return;" created="Wed, 30 Mar 2022 14:05:15 GMT"/>
						<outline text="}" created="Wed, 30 Mar 2022 14:04:42 GMT"/>
						</outline>
					<outline text="reallysimple.readFeed (feedUrl, function (err, theFeed) {" created="Sat, 19 Mar 2022 15:14:01 GMT">
						<outline text="if (err) {" created="Sat, 19 Mar 2022 15:15:11 GMT">
							<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 16:21:44 GMT">
								<outline text="recordFeedError (feedUrl, err); //4/28/22 by DW" created="Thu, 28 Apr 2022 17:04:35 GMT"/>
								<outline text="callback (err);" created="Sat, 19 Mar 2022 15:15:16 GMT"/>
								<outline text="}" created="Tue, 22 Mar 2022 16:21:50 GMT"/>
								</outline>
							<outline text="}" created="Sat, 19 Mar 2022 15:15:20 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 19 Mar 2022 15:15:21 GMT">
							<outline text="const titlestring = maxStringLength (theFeed.title, config.maxLengthFeedTitle);"/>
							<outline text="const descriptionstring = maxStringLength (theFeed.description, config.maxLengthFeedDescription);"/>
							<outline text="const ctSecs = utils.secondsSince (whenstart);" created="Sat, 19 Mar 2022 16:02:14 GMT"/>
							<outline text="" created="Wed, 30 Mar 2022 14:15:36 GMT"/>
							<outline text="function getUrlCloudServer (theFeed) {" created="Sat, 19 Mar 2022 16:03:57 GMT">
								<outline text="var url = undefined;" created="Sat, 19 Mar 2022 16:05:12 GMT"/>
								<outline text="if ((theFeed.cloud !== undefined) &amp;&amp; (theFeed.cloud.type == &quot;rsscloud&quot;)) {">
									<outline text="url = &quot;http://&quot; + theFeed.cloud.domain + &quot;:&quot; + theFeed.cloud.port + theFeed.cloud.path;"/>
									<outline text="}"/>
									</outline>
								<outline text="return (url);" created="Sat, 19 Mar 2022 16:05:18 GMT"/>
								<outline text="}" created="Sat, 19 Mar 2022 16:04:05 GMT"/>
								</outline>
							<outline text="function getTwitterScreenname () {" created="Sun, 03 Apr 2022 16:49:04 GMT">
								<outline text="var screenname = undefined;" created="Sun, 03 Apr 2022 16:49:36 GMT"/>
								<outline text="if (theFeed.accounts !== undefined) {" created="Sun, 03 Apr 2022 16:49:36 GMT">
									<outline text="if (theFeed.accounts.twitter !== undefined) {" created="Sun, 03 Apr 2022 16:49:36 GMT">
										<outline text="screenname = theFeed.accounts.twitter;" created="Sun, 03 Apr 2022 16:50:17 GMT"/>
										<outline text="}" created="Sun, 03 Apr 2022 16:49:58 GMT"/>
										</outline>
									<outline text="}" created="Sun, 03 Apr 2022 16:49:58 GMT"/>
									</outline>
								<outline text="return (screenname);" created="Sun, 03 Apr 2022 16:51:09 GMT"/>
								<outline text="}" created="Sun, 03 Apr 2022 16:49:16 GMT"/>
								</outline>
							<outline text="function getFeedMetadataString (theString) {" created="Wed, 30 Mar 2022 13:58:15 GMT">
								<outline text="if (theString === undefined) {" created="Wed, 30 Mar 2022 14:30:02 GMT">
									<outline text="return (undefined);" created="Wed, 30 Mar 2022 14:30:18 GMT"/>
									<outline text="}" created="Wed, 30 Mar 2022 14:30:08 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 30 Mar 2022 14:30:38 GMT">
									<outline text="return (maxStringLength (theString, config.maxFeedMetadata));" created="Wed, 30 Mar 2022 13:58:33 GMT"/>
									<outline text="}" created="Wed, 30 Mar 2022 14:30:41 GMT"/>
									</outline>
								<outline text="}" created="Wed, 30 Mar 2022 13:58:25 GMT"/>
								</outline>
							<outline text="function getFeedMetadataLink (url) {" created="Wed, 30 Mar 2022 13:58:15 GMT">
								<outline text="if (url === undefined) {" created="Wed, 30 Mar 2022 14:30:02 GMT">
									<outline text="return (undefined);" created="Wed, 30 Mar 2022 14:30:18 GMT"/>
									<outline text="}" created="Wed, 30 Mar 2022 14:30:08 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 30 Mar 2022 14:30:09 GMT">
									<outline text="return (maxStringLength (url, config.maxFeedUrlLength));" created="Wed, 30 Mar 2022 13:58:33 GMT"/>
									<outline text="}" created="Wed, 30 Mar 2022 14:30:11 GMT"/>
									</outline>
								<outline text="}" created="Wed, 30 Mar 2022 13:58:25 GMT"/>
								</outline>
							<outline text="function getFeedDate (theDate) {" created="Wed, 30 Mar 2022 13:58:15 GMT">
								<outline text="var d = new Date (theDate);" created="Wed, 30 Mar 2022 14:23:12 GMT"/>
								<outline text="if (d == &quot;Invalid Date&quot;) {" created="Wed, 30 Mar 2022 14:23:29 GMT">
									<outline text="d = undefined;" created="Wed, 30 Mar 2022 14:23:42 GMT"/>
									<outline text="}" created="Wed, 30 Mar 2022 14:23:38 GMT"/>
									</outline>
								<outline text="return (d);" created="Wed, 30 Mar 2022 14:23:52 GMT"/>
								<outline text="}" created="Wed, 30 Mar 2022 13:58:25 GMT"/>
								</outline>
							<outline text="function getFeedMetadataNumber (theNumber) {" created="Wed, 30 Mar 2022 14:27:42 GMT">
								<outline text="var n = Number (theNumber);" created="Wed, 30 Mar 2022 14:28:22 GMT"/>
								<outline text="if (isNaN (n)) {" created="Wed, 30 Mar 2022 14:23:29 GMT">
									<outline text="n = undefined;" created="Wed, 30 Mar 2022 14:23:42 GMT"/>
									<outline text="}" created="Wed, 30 Mar 2022 14:23:38 GMT"/>
									</outline>
								<outline text="return (n);" created="Wed, 30 Mar 2022 14:29:14 GMT"/>
								<outline text="}" created="Wed, 30 Mar 2022 14:27:51 GMT"/>
								</outline>
							<outline text="var feedRec = {">
								<outline text="feedUrl: feedUrl,"/>
								<outline text="" created="Wed, 30 Mar 2022 14:08:14 GMT"/>
								<outline text="title: getFeedMetadataString (theFeed.title),"/>
								<outline text="htmlUrl: getFeedMetadataLink (theFeed.link),"/>
								<outline text="description: getFeedMetadataString (theFeed.description),"/>
								<outline text="" created="Wed, 30 Mar 2022 14:15:06 GMT"/>
								<outline text="pubDate: getFeedDate (theFeed.pubDate)," created="Wed, 30 Mar 2022 14:16:48 GMT"/>
								<outline text="" created="Wed, 30 Mar 2022 14:17:21 GMT"/>
								<outline text="whenCreated: whenstart,"/>
								<outline text="whenUpdated: whenstart,"/>
								<outline text="" created="Wed, 30 Mar 2022 14:15:04 GMT"/>
								<outline text="ctSubs: 0," created="Sat, 19 Mar 2022 16:28:52 GMT"/>
								<outline text="ctSecs: ctSecs,"/>
								<outline text="" created="Wed, 30 Mar 2022 14:15:01 GMT"/>
								<outline text="ctErrors: 0,"/>
								<outline text="ctConsecutiveErrors: 0," created="Sat, 19 Mar 2022 16:00:24 GMT"/>
								<outline text="errorString: &quot;&quot;," created="Sat, 19 Mar 2022 16:00:36 GMT"/>
								<outline text="whenChecked: whenstart, //4/3/22 by DW"/>
								<outline text="ctChecks: 1, "/>
								<outline text="whenLastError: new Date (0),"/>
								<outline text="" created="Wed, 30 Mar 2022 14:14:57 GMT"/>
								<outline text="urlCloudServer: getUrlCloudServer (theFeed)," created="Sat, 19 Mar 2022 16:00:53 GMT"/>
								<outline text="whenLastCloudRenew: utils.dateYesterday (whenstart),"/>
								<outline text="ctCloudRenews: 0,"/>
								<outline text="" created="Wed, 30 Mar 2022 13:57:15 GMT"/>
								<outline text="copyright: getFeedMetadataString (theFeed.copyright)," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="generator: getFeedMetadataString (theFeed.generator)," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="language: getFeedMetadataString (theFeed.language)," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="managingEditor: getFeedMetadataString (theFeed.managingEditor)," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="webMaster: getFeedMetadataString (theFeed.webMaster)," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="twitterAccount: getTwitterScreenname (), //4/3/22 by DW" created="Sun, 03 Apr 2022 16:51:41 GMT"/>
								<outline text="docs: getFeedMetadataString (theFeed.docs)," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="" created="Wed, 30 Mar 2022 14:02:31 GMT"/>
								<outline text="imageUrl: getFeedMetadataLink (theFeed.imageUrl), //points to the img"/>
								<outline text="imageTitle: getFeedMetadataString (theFeed.imageTitle)," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="imageLink: getFeedMetadataLink (theFeed.imageLink),"/>
								<outline text="imageWidth: getFeedMetadataNumber (theFeed.imageWidth)," created="Wed, 30 Mar 2022 14:12:51 GMT"/>
								<outline text="imageHeight: getFeedMetadataNumber (theFeed.imageHeight)," created="Wed, 30 Mar 2022 14:12:51 GMT"/>
								<outline text="imageDescription: getFeedMetadataString (theFeed.imageDescription)" created="Wed, 30 Mar 2022 13:57:16 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="" created="Sat, 19 Mar 2022 16:38:27 GMT"/>
							<outline text="isFeedInDatabase (feedUrl, function (flInDatabase, feedRec2) {" created="Sat, 19 Mar 2022 16:38:28 GMT">
								<outline text="var flChanged = !flInDatabase;" created="Sun, 20 Mar 2022 17:05:37 GMT"/>
								<outline text="if (flInDatabase) {" created="Sat, 19 Mar 2022 16:39:44 GMT">
									<outline text="feedRec.whenCreated = feedRec2.whenCreated;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.whenUpdated = feedRec2.whenUpdated;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.ctErrors = feedRec2.ctErrors;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.ctConsecutiveErrors = feedRec2.ctConsecutiveErrors;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.errorString = feedRec2.errorString;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.whenChecked = new Date (); //4/3/22 by DW" created="Sun, 03 Apr 2022 14:56:44 GMT"/>
									<outline text="feedRec.ctChecks = feedRec2.ctChecks;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.whenLastError = feedRec2.whenLastError;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.whenLastCloudRenew = feedRec2.whenLastCloudRenew;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="feedRec.ctCloudRenews = feedRec2.ctCloudRenews;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="" created="Fri, 01 Apr 2022 14:12:39 GMT"/>
									<outline text="function checkChange (name, flDateType=false) {" created="Sun, 20 Mar 2022 17:05:44 GMT">
										<outline text="if (flDateType) {" created="Sun, 20 Mar 2022 17:15:19 GMT">
											<outline text="function convert (d) {" created="Sun, 20 Mar 2022 17:16:33 GMT">
												<outline text="return (new Date (d).toUTCString ());" created="Sun, 20 Mar 2022 17:16:46 GMT"/>
												<outline text="}" created="Sun, 20 Mar 2022 17:16:56 GMT"/>
												</outline>
											<outline text="if (convert (feedRec [name]) != convert (feedRec2 [name])) {" created="Sun, 20 Mar 2022 17:06:12 GMT">
												<outline text="console.log (name + &quot; changed.&quot;);" created="Sun, 20 Mar 2022 17:13:54 GMT"/>
												<outline text="flChanged = true;" created="Sun, 20 Mar 2022 17:05:37 GMT"/>
												<outline text="}" created="Sun, 20 Mar 2022 17:06:39 GMT"/>
												</outline>
											<outline text="}" created="Sun, 20 Mar 2022 17:15:23 GMT"/>
											</outline>
										<outline text="else {" created="Sun, 20 Mar 2022 17:15:24 GMT">
											<outline text="if (feedRec [name] != feedRec2 [name]) {" created="Sun, 20 Mar 2022 17:06:12 GMT">
												<outline text="console.log (name + &quot; changed.&quot;);" created="Sun, 20 Mar 2022 17:13:54 GMT"/>
												<outline text="flChanged = true;" created="Sun, 20 Mar 2022 17:05:37 GMT"/>
												<outline text="}" created="Sun, 20 Mar 2022 17:06:39 GMT"/>
												</outline>
											<outline text="}" created="Sun, 20 Mar 2022 17:15:27 GMT"/>
											</outline>
										<outline text="}" created="Sun, 20 Mar 2022 17:06:07 GMT"/>
										</outline>
									<outline text="checkChange (&quot;title&quot;);" created="Fri, 01 Apr 2022 14:07:53 GMT"/>
									<outline text="checkChange (&quot;htmlUrl&quot;);" created="Fri, 01 Apr 2022 14:07:59 GMT"/>
									<outline text="checkChange (&quot;description&quot;);" created="Fri, 01 Apr 2022 14:08:03 GMT"/>
									<outline text="checkChange (&quot;pubDate&quot;, true);" created="Fri, 01 Apr 2022 14:08:06 GMT"/>
									<outline text="checkChange (&quot;urlCloudServer&quot;);" created="Fri, 01 Apr 2022 14:08:09 GMT"/>
									<outline text="checkChange (&quot;copyright&quot;);"/>
									<outline text="checkChange (&quot;generator&quot;);"/>
									<outline text="checkChange (&quot;language&quot;);"/>
									<outline text="checkChange (&quot;managingEditor&quot;);"/>
									<outline text="checkChange (&quot;webMaster&quot;);"/>
									<outline text="checkChange (&quot;docs&quot;);"/>
									<outline text="checkChange (&quot;imageUrl&quot;);"/>
									<outline text="checkChange (&quot;imageTitle&quot;);"/>
									<outline text="checkChange (&quot;imageLink&quot;);"/>
									<outline text="checkChange (&quot;imageWidth&quot;);"/>
									<outline text="checkChange (&quot;imageHeight&quot;);"/>
									<outline text="checkChange (&quot;imageDescription&quot;);"/>
									<outline text="}" created="Sat, 19 Mar 2022 16:39:48 GMT"/>
									</outline>
								<outline text="if (flChanged) {" created="Fri, 01 Apr 2022 14:15:41 GMT">
									<outline text="if (!flInDatabase) {" created="Mon, 04 Apr 2022 16:20:03 GMT">
										<outline text="console.log (&quot;checkFeed: new feed == &quot; + feedUrl);" created="Mon, 04 Apr 2022 16:20:13 GMT"/>
										<outline text="}" created="Mon, 04 Apr 2022 16:20:43 GMT"/>
										</outline>
									<outline text="feedRec.whenUpdated = new Date (); //4/3/22 by DW" created="Sun, 03 Apr 2022 14:56:44 GMT"/>
									<outline text="saveFeed (feedRec);" created="Fri, 01 Apr 2022 14:17:29 GMT"/>
									<outline text="updateSocketSubscribers (&quot;updatedFeed&quot;, convertDatabaseFeed (feedRec));" created="Sun, 20 Mar 2022 22:49:29 GMT"/>
									<outline text="}" created="Fri, 01 Apr 2022 14:15:44 GMT"/>
									</outline>
								<outline text="else { //4/3/22 by DW" created="Sun, 03 Apr 2022 15:16:45 GMT">
									<outline text="feedRec.whenChecked = whenstart;" created="Sun, 03 Apr 2022 14:56:44 GMT"/>
									<outline text="feedRec.ctChecks++;" created="Sat, 19 Mar 2022 16:40:05 GMT"/>
									<outline text="saveFeed (feedRec);" created="Fri, 01 Apr 2022 14:17:29 GMT"/>
									<outline text="}" created="Sun, 03 Apr 2022 15:16:48 GMT"/>
									</outline>
								<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 16:21:44 GMT">
									<outline text="callback (undefined, theFeed, feedRec);" created="Tue, 22 Mar 2022 16:21:35 GMT"/>
									<outline text="}" created="Tue, 22 Mar 2022 16:21:50 GMT"/>
									</outline>
								<outline text="});" created="Sat, 19 Mar 2022 16:38:53 GMT"/>
								</outline>
							<outline text="}" created="Sat, 19 Mar 2022 15:15:23 GMT"/>
							</outline>
						<outline text="});" created="Sat, 19 Mar 2022 15:15:01 GMT"/>
						</outline>
					<outline text="}" created="Sat, 19 Mar 2022 15:14:00 GMT"/>
					</outline>
				<outline text="function checkFeedAndItems (feedUrl, callback) {" created="Sat, 19 Mar 2022 20:39:23 GMT">
					<outline text="Changes" isComment="true" created="Sat, 19 Mar 2022 20:56:35 GMT">
						<outline text="5/7/22; 11:19:53 AM by DW" created="Sat, 07 May 2022 15:19:53 GMT">
							<outline text="When checking for changes, only look at values that come from the feed, not internal values." created="Sat, 07 May 2022 15:19:54 GMT"/>
							<outline text="I wasn't thinking clearly when I added a check for a change in ctLikes. The feed has no concept of likes, so the value will always appear to change!" created="Sat, 07 May 2022 15:20:08 GMT"/>
							<outline text="Took the check out." created="Sat, 07 May 2022 15:20:38 GMT"/>
							</outline>
						<outline text="4/28/22; 12:44:42 PM by DW" created="Thu, 28 Apr 2022 16:44:41 GMT">
							<outline text="Depend on saveItem to set the id if it's not defined. " created="Thu, 28 Apr 2022 16:44:42 GMT"/>
							</outline>
						<outline text="3/24/22; 12:19:58 PM by DW" created="Thu, 24 Mar 2022 16:19:57 GMT">
							<outline text="When updating over the WS connection, include the metadata about the feed as part of the package." created="Thu, 24 Mar 2022 16:19:58 GMT"/>
							</outline>
						<outline text="3/19/22; 4:56:38 PM by DW" created="Sat, 19 Mar 2022 20:56:37 GMT">
							<outline text="Check the feed, look through all the items, if there are any new ones, add them to the items table. Also record changes in title, description, etc." created="Sat, 19 Mar 2022 20:56:39 GMT"/>
							<outline text="fields of item that are going away" created="Sun, 20 Mar 2022 15:24:32 GMT">
								<outline text="permaLink -- guid returned by reallySimple is a permalink." created="Sun, 20 Mar 2022 15:24:40 GMT"/>
								<outline text="fullDescription" created="Sun, 20 Mar 2022 15:29:11 GMT"/>
								</outline>
							</outline>
						</outline>
					<outline text="const whenstart = new Date ();"/>
					<outline text="console.log (&quot;checkFeedAndItems at &quot; + new Date ().toLocaleTimeString () + &quot;: feedUrl == &quot; + feedUrl);" created="Tue, 22 Mar 2022 15:16:31 GMT"/>
					<outline text="checkFeed (feedUrl, function (err, theFeed, feedRec) {" created="Sat, 19 Mar 2022 16:38:28 GMT">
						<outline text="if (err) {" created="Sat, 19 Mar 2022 20:52:14 GMT">
							<outline text="if (callback !== undefined) {" created="Sat, 19 Mar 2022 20:52:19 GMT">
								<outline text="callback (err);" created="Sat, 19 Mar 2022 20:52:36 GMT"/>
								<outline text="}" created="Sat, 19 Mar 2022 20:52:28 GMT"/>
								</outline>
							<outline text="}" created="Sat, 19 Mar 2022 20:52:29 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 19 Mar 2022 20:52:42 GMT">
							<outline text="var itemlessFeed = new Object ();" created="Thu, 24 Mar 2022 16:18:11 GMT"/>
							<outline text="for (var x in theFeed) {" created="Thu, 24 Mar 2022 16:18:24 GMT">
								<outline text="if (x != &quot;items&quot;) {" created="Thu, 24 Mar 2022 16:43:15 GMT">
									<outline text="itemlessFeed [x] = theFeed [x];" created="Thu, 24 Mar 2022 16:18:36 GMT"/>
									<outline text="}" created="Thu, 24 Mar 2022 16:43:23 GMT"/>
									</outline>
								<outline text="}" created="Thu, 24 Mar 2022 16:18:30 GMT"/>
								</outline>
							<outline text="theFeed.items.forEach (function (item) {" created="Sat, 19 Mar 2022 20:57:11 GMT">
								<outline text="var guid = getItemGuid (item);"/>
								<outline text="var outlineJsontext = undefined, markdowntext = undefined;" created="Sun, 20 Mar 2022 16:48:34 GMT"/>
								<outline text="var enclosureUrl = undefined, enclosureType = undefined, enclosureLength = undefined;" created="Sun, 20 Mar 2022 15:37:54 GMT"/>
								<outline text="if (item.enclosure !== undefined) {" created="Sun, 20 Mar 2022 16:47:01 GMT">
									<outline text="enclosureUrl = item.enclosure.url;" created="Sun, 20 Mar 2022 15:54:12 GMT"/>
									<outline text="enclosureType = item.enclosure.type;" created="Sun, 20 Mar 2022 15:54:12 GMT"/>
									<outline text="enclosureLength = item.enclosure.length;" created="Sun, 20 Mar 2022 15:54:12 GMT"/>
									<outline text="}" created="Sun, 20 Mar 2022 16:47:26 GMT"/>
									</outline>
								<outline text="if (item.outline !== undefined) {" created="Sun, 20 Mar 2022 15:36:22 GMT">
									<outline text="outlineJsontext = utils.jsonStringify (item.outline);" created="Sun, 20 Mar 2022 15:36:49 GMT"/>
									<outline text="}" created="Sun, 20 Mar 2022 15:36:31 GMT"/>
									</outline>
								<outline text="if (item.markdowntext !== undefined) { //5/5/22 by DW" created="Sun, 20 Mar 2022 15:36:22 GMT">
									<outline text="markdowntext = item.markdowntext;" created="Sun, 20 Mar 2022 15:36:49 GMT"/>
									<outline text="}" created="Sun, 20 Mar 2022 15:36:31 GMT"/>
									</outline>
								<outline text="var itemRec = {" created="Sun, 20 Mar 2022 15:17:03 GMT">
									<outline text="feedUrl," created="Sun, 20 Mar 2022 15:17:25 GMT"/>
									<outline text="guid," created="Sun, 20 Mar 2022 15:17:27 GMT"/>
									<outline text="title: item.title," created="Sun, 20 Mar 2022 16:53:25 GMT"/>
									<outline text="link: item.link," created="Sun, 20 Mar 2022 15:20:55 GMT"/>
									<outline text="description: item.description," created="Sun, 20 Mar 2022 15:21:09 GMT"/>
									<outline text="pubDate: item.pubDate," created="Sun, 20 Mar 2022 15:21:09 GMT"/>
									<outline text="enclosureUrl, "/>
									<outline text="enclosureType, "/>
									<outline text="enclosureLength, "/>
									<outline text="id: undefined, //will be defined when saving" created="Mon, 21 Mar 2022 14:44:51 GMT"/>
									<outline text="whenCreated: whenstart," created="Sun, 20 Mar 2022 15:21:21 GMT"/>
									<outline text="whenUpdated: whenstart," created="Sun, 20 Mar 2022 15:35:32 GMT"/>
									<outline text="flDeleted: false," created="Sun, 20 Mar 2022 15:35:45 GMT"/>
									<outline text="outlineJsontext," created="Sun, 20 Mar 2022 15:35:54 GMT"/>
									<outline text="markdowntext //5/5/22 by DW" created="Thu, 05 May 2022 15:11:47 GMT"/>
									<outline text="};" created="Sun, 20 Mar 2022 15:17:16 GMT"/>
									</outline>
								<outline text="isItemInDatabase (feedUrl, guid, function (flThere, dbItem) {" created="Sun, 20 Mar 2022 15:15:05 GMT">
									<outline text="var flChanged = !flThere;" created="Sun, 20 Mar 2022 17:05:37 GMT"/>
									<outline text="if (flThere) {" created="Sun, 20 Mar 2022 15:17:02 GMT">
										<outline text="function checkChange (name, flDateType=false) {" created="Sun, 20 Mar 2022 17:05:44 GMT">
											<outline text="if (flDateType) {" created="Sun, 20 Mar 2022 17:15:19 GMT">
												<outline text="function convert (d) {" created="Sun, 20 Mar 2022 17:16:33 GMT">
													<outline text="return (new Date (d).toUTCString ());" created="Sun, 20 Mar 2022 17:16:46 GMT"/>
													<outline text="}" created="Sun, 20 Mar 2022 17:16:56 GMT"/>
													</outline>
												<outline text="if (convert (itemRec [name]) != convert (dbItem [name])) {" created="Sun, 20 Mar 2022 17:06:12 GMT">
													<outline text="console.log (name + &quot; changed.&quot;);" created="Sun, 20 Mar 2022 17:13:54 GMT"/>
													<outline text="flChanged = true;" created="Sun, 20 Mar 2022 17:05:37 GMT"/>
													<outline text="}" created="Sun, 20 Mar 2022 17:06:39 GMT"/>
													</outline>
												<outline text="}" created="Sun, 20 Mar 2022 17:15:23 GMT"/>
												</outline>
											<outline text="else {" created="Sun, 20 Mar 2022 17:15:24 GMT">
												<outline text="if (itemRec [name] != dbItem [name]) {" created="Sun, 20 Mar 2022 17:06:12 GMT">
													<outline text="console.log (name + &quot; changed.&quot;);" created="Sun, 20 Mar 2022 17:13:54 GMT"/>
													<outline text="flChanged = true;" created="Sun, 20 Mar 2022 17:05:37 GMT"/>
													<outline text="}" created="Sun, 20 Mar 2022 17:06:39 GMT"/>
													</outline>
												<outline text="}" created="Sun, 20 Mar 2022 17:15:27 GMT"/>
												</outline>
											<outline text="}" created="Sun, 20 Mar 2022 17:06:07 GMT"/>
											</outline>
										<outline text="checkChange (&quot;title&quot;);" created="Sun, 20 Mar 2022 17:07:54 GMT"/>
										<outline text="checkChange (&quot;link&quot;);" created="Sun, 20 Mar 2022 17:07:54 GMT"/>
										<outline text="checkChange (&quot;description&quot;);" created="Sun, 20 Mar 2022 17:07:54 GMT"/>
										<outline text="checkChange (&quot;pubDate&quot;, true);" created="Sun, 20 Mar 2022 17:07:54 GMT"/>
										<outline text="checkChange (&quot;enclosureUrl&quot;);" created="Sun, 20 Mar 2022 17:07:54 GMT"/>
										<outline text="checkChange (&quot;enclosureLength&quot;);" created="Sun, 20 Mar 2022 17:07:54 GMT"/>
										<outline text="checkChange (&quot;flDeleted&quot;); //4/22/22 by DW" created="Sun, 20 Mar 2022 17:07:54 GMT"/>
										<outline text="itemRec.id = dbItem.id; //must preserve this value" created="Sun, 20 Mar 2022 17:11:38 GMT"/>
										<outline text="itemRec.whenCreated = dbItem.whenCreated; //must preserve this value" created="Sun, 20 Mar 2022 17:11:38 GMT"/>
										<outline text="}" created="Sun, 20 Mar 2022 16:29:47 GMT"/>
										</outline>
									<outline text="if (flChanged) {" created="Sun, 20 Mar 2022 17:10:57 GMT">
										<outline text="console.log (((flThere) ? &quot;Updating&quot; : &quot;Adding&quot;) + &quot;: guid == &quot; + guid);" created="Sun, 20 Mar 2022 16:52:06 GMT"/>
										<outline text="" created="Mon, 21 Mar 2022 14:45:16 GMT"/>
										<outline text="if (itemRec.id === undefined) { //it's a new item" isComment="true" created="Mon, 21 Mar 2022 14:45:16 GMT">
											<outline text="itemRec.id = stats.itemSerialNum++;" created="Mon, 21 Mar 2022 14:43:56 GMT"/>
											<outline text="daveappserver.saveStats (stats);"/>
											<outline text="}" created="Mon, 21 Mar 2022 14:45:26 GMT"/>
											</outline>
										<outline text="" created="Mon, 21 Mar 2022 14:45:17 GMT"/>
										<outline text="saveItem (itemRec);" created="Sun, 20 Mar 2022 16:30:31 GMT"/>
										<outline text="" created="Sun, 20 Mar 2022 23:18:53 GMT"/>
										<outline text="const verb = ((flThere) ? &quot;updated&quot; : &quot;new&quot;) + &quot;Item&quot;;" created="Sun, 20 Mar 2022 23:18:53 GMT"/>
										<outline text="var jstruct = {" created="Thu, 24 Mar 2022 16:19:01 GMT">
											<outline text="item: convertDatabaseItem (itemRec)," created="Thu, 24 Mar 2022 16:19:22 GMT"/>
											<outline text="theFeed: convertDatabaseFeed (feedRec)" created="Thu, 24 Mar 2022 16:19:28 GMT"/>
											<outline text="}" created="Thu, 24 Mar 2022 16:19:15 GMT"/>
											</outline>
										<outline text="updateSocketSubscribers (verb, jstruct);" created="Sun, 20 Mar 2022 22:49:29 GMT"/>
										<outline text="}" created="Sun, 20 Mar 2022 17:11:00 GMT"/>
										</outline>
									<outline text="});" created="Sun, 20 Mar 2022 15:16:04 GMT"/>
									</outline>
								<outline text="});" created="Sun, 20 Mar 2022 15:15:27 GMT"/>
								</outline>
							<outline text="if (callback !== undefined) {" created="Sat, 19 Mar 2022 20:52:19 GMT">
								<outline text="callback (undefined, theFeed, feedRec);" created="Sat, 19 Mar 2022 20:52:36 GMT"/>
								<outline text="}" created="Sat, 19 Mar 2022 20:52:28 GMT"/>
								</outline>
							<outline text="}" created="Sat, 19 Mar 2022 20:52:43 GMT"/>
							</outline>
						<outline text="});" created="Sat, 19 Mar 2022 16:38:53 GMT"/>
						</outline>
					<outline text="}" created="Sat, 19 Mar 2022 20:39:42 GMT"/>
					</outline>
				<outline text="function checkOneFeed (feedUrl, callback) {" created="Sun, 03 Apr 2022 15:07:43 GMT">
					<outline text="checkFeedAndItems (feedUrl, function (err, theFeed, feedRec) {" created="Tue, 22 Mar 2022 15:11:43 GMT">
						<outline text="if (err) {" created="Sun, 03 Apr 2022 15:06:18 GMT">
							<outline text="if (callback !== undefined) {" created="Sun, 03 Apr 2022 15:10:18 GMT">
								<outline text="callback (err);" created="Sun, 03 Apr 2022 15:06:46 GMT"/>
								<outline text="}" created="Sun, 03 Apr 2022 15:10:24 GMT"/>
								</outline>
							<outline text="}" created="Sun, 03 Apr 2022 15:06:35 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 03 Apr 2022 15:06:35 GMT">
							<outline text="if (callback !== undefined) {" created="Sun, 03 Apr 2022 15:10:18 GMT">
								<outline text="callback (undefined, convertDatabaseFeed (feedRec));" created="Sun, 03 Apr 2022 15:06:58 GMT"/>
								<outline text="}" created="Sun, 03 Apr 2022 15:10:24 GMT"/>
								</outline>
							<outline text="}" created="Sun, 03 Apr 2022 15:06:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 22 Mar 2022 15:12:09 GMT"/>
						</outline>
					<outline text="}" created="Sun, 03 Apr 2022 15:08:04 GMT"/>
					</outline>
				<outline text="function findLeastRecentlyCheckedFeed (callback) { ">
					<outline text="Changes" isComment="true">
						<outline text="3/21/22; 12:38:18 PM by DW" created="Mon, 21 Mar 2022 16:38:16 GMT">
							<outline text="Find  least recently updated feed with 1 or more subscribers."/>
							</outline>
						</outline>
					<outline text="var sqltext = &quot;select * from feeds order by whenChecked asc limit 1;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (result.length &gt; 0) {">
								<outline text="callback (undefined, result [0]);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function updateNextFeedIfReady (callback) {">
					<outline text="if (config.flUpdateFeedsInBackground) {">
						<outline text="var whenstart = new Date ();"/>
						<outline text="findLeastRecentlyCheckedFeed (function (err, feedRec) {">
							<outline text="if (!err) {">
								<outline text="checkOneFeed (feedRec.feedUrl, callback);" created="Tue, 22 Mar 2022 15:34:38 GMT"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getFeed (feedUrl, callback) {" created="Wed, 30 Mar 2022 20:24:47 GMT">
					<outline text="getDatabaseFeed (feedUrl, function (err, feedRec) {" created="Tue, 22 Mar 2022 15:38:46 GMT">
						<outline text="if (err) {" created="Tue, 22 Mar 2022 15:39:17 GMT">
							<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 15:39:21 GMT">
								<outline text="callback (err);" created="Tue, 22 Mar 2022 15:39:47 GMT"/>
								<outline text="}" created="Tue, 22 Mar 2022 15:39:33 GMT"/>
								</outline>
							<outline text="}" created="Tue, 22 Mar 2022 15:39:34 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 22 Mar 2022 15:39:37 GMT">
							<outline text="callback (undefined, convertDatabaseFeed (feedRec));" created="Wed, 30 Mar 2022 20:25:37 GMT"/>
							<outline text="}" created="Tue, 22 Mar 2022 15:39:44 GMT"/>
							</outline>
						<outline text="});" created="Tue, 22 Mar 2022 15:39:06 GMT"/>
						</outline>
					<outline text="}" created="Wed, 30 Mar 2022 20:25:00 GMT"/>
					</outline>
				<outline text="function getRiverFromOneFeed (feedUrl, callback) {" isComment="true" created="Wed, 13 Apr 2022 14:09:14 GMT">
					<outline text="Changes" isComment="true" created="Wed, 13 Apr 2022 14:10:36 GMT">
						<outline text="4/13/22; 10:10:38 AM by DW" created="Wed, 13 Apr 2022 14:10:37 GMT">
							<outline text="Get the latest stories from a specific feed." created="Wed, 13 Apr 2022 14:10:39 GMT"/>
							</outline>
						</outline>
					<outline text="const sqltext = &quot;select * from items where flDeleted=false and feedUrl=&quot; + davesql.encode (feedUrl) + &quot; order by pubDate desc limit &quot; + config.maxRiverItems + &quot;;&quot;; "/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (undefined, convertItemList (result));"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Wed, 13 Apr 2022 14:09:28 GMT"/>
					</outline>
				<outline text="function getRiver (feedUrl, screenname, callback) {" created="Wed, 30 Mar 2022 15:22:55 GMT">
					<outline text="Changes" isComment="true" created="Wed, 30 Mar 2022 15:23:30 GMT">
						<outline text="4/23/22; 9:53:34 AM by DW" created="Sat, 23 Apr 2022 13:53:34 GMT">
							<outline text="Add feedUrl parameter, if not undefined, all the returned items come from one feed. " created="Sat, 23 Apr 2022 13:53:35 GMT"/>
							<outline text="It was better to have all river-getting code flow through one routine so we wouldn't have to implement the returned data structure twice." created="Sat, 23 Apr 2022 13:59:32 GMT"/>
							</outline>
						<outline text="4/16/22; 9:35:34 AM by DW" created="Sat, 16 Apr 2022 13:35:34 GMT">
							<outline text="We now sort the river, adding another level of structure, so that the new items are grouped by feed, river-style." created="Sat, 16 Apr 2022 13:35:34 GMT"/>
							<outline text="The items still appear in the same order when the structure is flattened, but if two conseutive items come from the same feed, they are part of the same array." created="Sat, 16 Apr 2022 13:36:06 GMT"/>
							</outline>
						<outline text="4/3/22; 1:12:34 PM by DW" created="Sun, 03 Apr 2022 17:12:33 GMT">
							<outline text="Changed from ordering by whenCreated to pubDate. Consider when you add a feed and we read it, you don't want to get a shitload of posts at the top of the list from three weeks ago." created="Sun, 03 Apr 2022 17:12:34 GMT"/>
							</outline>
						<outline text="3/30/22; 11:23:33 AM by DW" created="Wed, 30 Mar 2022 15:23:32 GMT">
							<outline text="Returns a river for the user whose list is named." created="Wed, 30 Mar 2022 15:23:33 GMT"/>
							</outline>
						</outline>
					<outline text="function getFeedClause () {" created="Sat, 23 Apr 2022 13:54:03 GMT">
						<outline text="var feedClause;" created="Sat, 23 Apr 2022 13:54:22 GMT"/>
						<outline text="if (feedUrl === undefined) {" created="Sat, 23 Apr 2022 13:54:03 GMT">
							<outline text="feedClause = &quot;feedurl in (select feedUrl from subscriptions where listName='&quot; + screenname + &quot;')&quot;;" created="Sat, 23 Apr 2022 13:55:06 GMT"/>
							<outline text="}" created="Sat, 23 Apr 2022 13:54:16 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 23 Apr 2022 13:54:17 GMT">
							<outline text="feedClause = &quot;feedurl=&quot; + davesql.encode (feedUrl);" created="Sat, 23 Apr 2022 13:55:32 GMT"/>
							<outline text="}" created="Sat, 23 Apr 2022 13:54:19 GMT"/>
							</outline>
						<outline text="return (feedClause);" created="Sat, 23 Apr 2022 13:57:43 GMT"/>
						<outline text="}" created="Sat, 23 Apr 2022 13:57:32 GMT"/>
						</outline>
					<outline text="function sortRiver (theFlatArray) {" created="Sat, 16 Apr 2022 13:23:27 GMT">
						<outline text="var titles = new Object (), ctDuplicatesSkipped = 0;" created="Fri, 22 Apr 2022 15:33:04 GMT"/>
						<outline text="var theRiver = {" created="Sat, 16 Apr 2022 13:23:47 GMT">
							<outline text="feeds: new Array ()" created="Sat, 16 Apr 2022 13:23:57 GMT"/>
							<outline text="};" created="Sat, 16 Apr 2022 13:23:52 GMT"/>
							</outline>
						<outline text="var lastFeedUrl = undefined, itemsForThisFeed;" created="Sat, 16 Apr 2022 13:25:25 GMT"/>
						<outline text="theFlatArray.forEach (function (item) {" created="Sat, 16 Apr 2022 13:25:00 GMT">
							<outline text="var flskip = false;"/>
							<outline text="if (config.flSkipDuplicateTitles) {">
								<outline text="function checkForNull (value) {">
									<outline text="if (value == null) {">
										<outline text="value = &quot;&quot;;"/>
										<outline text="}"/>
										</outline>
									<outline text="return (value);"/>
									<outline text="}"/>
									</outline>
								<outline text="var reducedtitle = utils.trimWhitespace (utils.stringLower (checkForNull (item.title)));"/>
								<outline text="if (reducedtitle.length &gt; 0) {">
									<outline text="if (titles [reducedtitle] !== undefined) { //duplicate">
										<outline text="ctDuplicatesSkipped++;"/>
										<outline text="titles [reducedtitle]++;" created="Sat, 23 Apr 2022 14:32:37 GMT"/>
										<outline text="flskip = true;"/>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Fri, 22 Apr 2022 15:35:45 GMT">
										<outline text="titles [reducedtitle] = 1;"/>
										<outline text="}" created="Fri, 22 Apr 2022 15:35:48 GMT"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="if (!flskip) {" created="Fri, 22 Apr 2022 15:34:31 GMT">
								<outline text="if (item.feedUrl !== lastFeedUrl) {" created="Sat, 16 Apr 2022 13:30:29 GMT">
									<outline text="itemsForThisFeed = {" created="Sat, 16 Apr 2022 15:18:56 GMT">
										<outline text="feedUrl: item.feedUrl," created="Sat, 16 Apr 2022 15:18:28 GMT"/>
										<outline text="items: new Array ()" created="Sat, 16 Apr 2022 13:32:24 GMT"/>
										<outline text="};" created="Sat, 16 Apr 2022 15:19:07 GMT"/>
										</outline>
									<outline text="theRiver.feeds.push (itemsForThisFeed);" created="Sat, 16 Apr 2022 13:30:57 GMT"/>
									<outline text="lastFeedUrl = item.feedUrl;" created="Sat, 16 Apr 2022 13:30:48 GMT"/>
									<outline text="}" created="Sat, 16 Apr 2022 13:30:41 GMT"/>
									</outline>
								<outline text="itemsForThisFeed.items.push (item);" created="Sat, 16 Apr 2022 13:35:03 GMT"/>
								<outline text="}" created="Fri, 22 Apr 2022 15:34:37 GMT"/>
								</outline>
							<outline text="});" created="Sat, 16 Apr 2022 13:25:13 GMT"/>
							</outline>
						<outline text="" created="Sat, 23 Apr 2022 13:34:45 GMT"/>
						<outline text="if (ctDuplicatesSkipped &gt; 0) {" created="Sat, 23 Apr 2022 13:34:45 GMT">
							<outline text="console.log (&quot;sortRiver: ctDuplicatesSkipped == &quot; + ctDuplicatesSkipped);" created="Sat, 23 Apr 2022 13:34:51 GMT"/>
							<outline text="for (var x in titles) {" created="Sat, 23 Apr 2022 14:25:37 GMT">
								<outline text="if (titles [x] &gt; 1) {" created="Sat, 23 Apr 2022 14:32:48 GMT">
									<outline text="console.log (utils.padWithZeros (titles [x], 3) + &quot;: &quot; + x);" created="Sat, 23 Apr 2022 14:29:03 GMT"/>
									<outline text="}" created="Sat, 23 Apr 2022 14:32:55 GMT"/>
									</outline>
								<outline text="}" created="Sat, 23 Apr 2022 14:29:20 GMT"/>
								</outline>
							<outline text="}" created="Sat, 23 Apr 2022 13:35:01 GMT"/>
							</outline>
						<outline text="" created="Sat, 23 Apr 2022 13:34:45 GMT"/>
						<outline text="return (theRiver);" created="Sat, 16 Apr 2022 13:35:24 GMT"/>
						<outline text="}" created="Sat, 16 Apr 2022 13:23:41 GMT"/>
						</outline>
					<outline text="const sqltext = &quot;select * from items where flDeleted=false and &quot; + getFeedClause () + &quot; order by pubDate desc limit &quot; + config.maxRiverItems + &quot;;&quot;; "/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (err);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (callback !== undefined) {">
								<outline text="callback (undefined, sortRiver (convertItemList (result)));"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Wed, 30 Mar 2022 15:23:18 GMT"/>
					</outline>
				<outline text="function start (options, callback) {" created="Sat, 19 Mar 2022 14:51:04 GMT">
					<outline text="initStats ();" created="Mon, 21 Mar 2022 16:29:48 GMT"/>
					<outline text="if (options !== undefined) {" created="Sat, 19 Mar 2022 14:51:26 GMT">
						<outline text="for (var x in options) {" created="Sat, 19 Mar 2022 14:51:52 GMT">
							<outline text="config [x] = options [x];" created="Sat, 19 Mar 2022 14:52:06 GMT"/>
							<outline text="}" created="Sat, 19 Mar 2022 14:52:21 GMT"/>
							</outline>
						<outline text="}" created="Sat, 19 Mar 2022 14:51:51 GMT"/>
						</outline>
					<outline text="if (callback !== undefined) {" created="Sat, 19 Mar 2022 14:51:26 GMT">
						<outline text="callback (undefined);" created="Sat, 19 Mar 2022 14:51:32 GMT"/>
						<outline text="}" created="Sat, 19 Mar 2022 14:51:35 GMT"/>
						</outline>
					<outline text="}" created="Sat, 19 Mar 2022 14:51:13 GMT"/>
					</outline>
				</outline>
			<outline text="blog.js" created="Thu, 28 Apr 2022 14:03:06 GMT">
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const marked = require (&quot;marked&quot;); "/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const rss = require (&quot;daverss&quot;);"/>
				<outline text="const s3 = require (&quot;daves3&quot;);"/>
				<outline text="const davesql = require (&quot;davesql&quot;);"/>
				<outline text="const database = require (&quot;./database.js&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Thu, 28 Apr 2022 14:03:49 GMT"/>
				<outline text="exports.updateBlogSettings = updateBlogSettings;"/>
				<outline text="exports.newPost = newPost;"/>
				<outline text="exports.updatePost = updatePost;"/>
				<outline text="exports.getBlogUrl = getBlogUrl;"/>
				<outline text="exports.start = start;"/>
				<outline text="" created="Thu, 28 Apr 2022 14:04:45 GMT"/>
				<outline text="var config = {" created="Thu, 28 Apr 2022 14:04:45 GMT">
					<outline text="urlForFeeds: &quot;http://scripting.com/userfeeds/&quot;," isComment="true" created="Thu, 28 Apr 2022 14:05:11 GMT"/>
					<outline text="s3PathForFeeds: &quot;/scripting.com/userfeeds/&quot;," isComment="true" created="Thu, 28 Apr 2022 22:13:41 GMT"/>
					<outline text="localRssPath: &quot;data/feeds/&quot;," isComment="true" created="Thu, 28 Apr 2022 19:21:20 GMT"/>
					<outline text="generatorForFeed: &quot;Little Blog Editor v0.40&quot;," isComment="true" created="Thu, 28 Apr 2022 14:29:15 GMT"/>
					<outline text="docsForFeed: &quot;https://cyber.harvard.edu/rss/rss.html&quot;," isComment="true" created="Thu, 28 Apr 2022 14:29:50 GMT"/>
					<outline text="maxFeedItems: 50" isComment="true" created="Thu, 28 Apr 2022 19:08:16 GMT"/>
					<outline text="};" created="Thu, 28 Apr 2022 14:05:06 GMT"/>
					</outline>
				<outline text="" created="Thu, 28 Apr 2022 14:03:52 GMT"/>
				<outline text="function markdownProcess (s, flGenerateHtmlParagraphs=false) {">
					<outline text="Changes" isComment="true" created="Fri, 19 Nov 2021 21:33:11 GMT">
						<outline text="11/21/21; 9:55:49 AM by DW" created="Sun, 21 Nov 2021 14:55:49 GMT">
							<outline text="New optional param, flGenerateHtmlParagraphs. " created="Sun, 21 Nov 2021 14:55:50 GMT"/>
							</outline>
						<outline text="11/19/21; 4:33:14 PM by DW" created="Fri, 19 Nov 2021 21:33:13 GMT">
							<outline text="Commented out the renderer that neutered paragraphs. I don't know why it was doing this, but it made no sense. And it explained why we were screwing up paragraphs. " created="Fri, 19 Nov 2021 21:33:14 GMT"/>
							</outline>
						</outline>
					<outline text="var renderer = new marked.Renderer ();"/>
					<outline text="var options = {">
						<outline text="renderer: renderer"/>
						<outline text="};"/>
						</outline>
					<outline text="if (flGenerateHtmlParagraphs) {" created="Sun, 21 Nov 2021 14:57:36 GMT">
						<outline text="return (marked (s, options));"/>
						<outline text="}" created="Sun, 21 Nov 2021 14:57:44 GMT"/>
						</outline>
					<outline text="else {" created="Sun, 21 Nov 2021 14:57:45 GMT">
						<outline text="renderer.paragraph = function (s) {">
							<outline text="return (s);"/>
							<outline text="};"/>
							</outline>
						<outline text="return (marked (s, options));"/>
						<outline text="}" created="Sun, 21 Nov 2021 14:57:48 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function getBlogUrl (screenname) {" created="Thu, 28 Apr 2022 14:13:48 GMT">
					<outline text="var urlfeed = config.urlForFeeds + screenname + &quot;.xml&quot;, jstruct;" created="Thu, 28 Apr 2022 14:08:19 GMT"/>
					<outline text="return (urlfeed);" created="Thu, 28 Apr 2022 14:14:06 GMT"/>
					<outline text="}" created="Thu, 28 Apr 2022 14:13:58 GMT"/>
					</outline>
				<outline text="function buildRss (screenname, callback) {">
					<outline text="Changes" isComment="true" created="Tue, 03 May 2022 15:50:32 GMT">
						<outline text="5/3/22; 11:50:34 AM by DW" created="Tue, 03 May 2022 15:50:33 GMT">
							<outline text="Since we're using Medium Editor at the top level to edit posts, we check as the text is about to leave the system, we check for the quirks and normalize them. " created="Tue, 03 May 2022 15:50:35 GMT"/>
							</outline>
						</outline>
					<outline text="const feedUrl = getBlogUrl (screenname), whenstart = new Date ();" created="Thu, 28 Apr 2022 14:08:19 GMT"/>
					<outline text="function notNull (val) {" created="Wed, 23 Mar 2022 14:49:40 GMT">
						<outline text="if (val === undefined) {" created="Wed, 23 Mar 2022 14:49:56 GMT">
							<outline text="return (false);" created="Wed, 23 Mar 2022 14:50:04 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:50:07 GMT"/>
							</outline>
						<outline text="if (val == null) {" created="Wed, 23 Mar 2022 14:50:12 GMT">
							<outline text="return (false);" created="Wed, 23 Mar 2022 14:50:22 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:50:27 GMT"/>
							</outline>
						<outline text="return (true);" created="Wed, 23 Mar 2022 14:50:28 GMT"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:49:48 GMT"/>
						</outline>
					<outline text="function checkNull (val) {" created="Wed, 23 Mar 2022 14:51:36 GMT">
						<outline text="if (notNull (val)) {" created="Wed, 23 Mar 2022 14:51:49 GMT">
							<outline text="return (val);" created="Wed, 23 Mar 2022 14:52:03 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 14:51:57 GMT"/>
							</outline>
						<outline text="return (undefined);" created="Wed, 23 Mar 2022 14:52:12 GMT"/>
						<outline text="}" created="Wed, 23 Mar 2022 14:51:45 GMT"/>
						</outline>
					<outline text="function fixMediumEditorQuirks (theText) {" created="Tue, 03 May 2022 15:21:45 GMT">
						<outline text="Changes" isComment="true" created="Tue, 03 May 2022 15:22:00 GMT">
							<outline text="5/3/22; 11:22:02 AM by DW" created="Tue, 03 May 2022 15:22:01 GMT">
								<outline text="if there's only one paragraph get rid of the &lt;p&gt; and &lt;/p&gt;." created="Tue, 03 May 2022 15:22:03 GMT"/>
								</outline>
							</outline>
						<outline text="var splits = theText.split (&quot;&lt;p&gt;&quot;);" created="Tue, 03 May 2022 15:26:58 GMT"/>
						<outline text="if (splits.length == 2) {" created="Tue, 03 May 2022 15:30:37 GMT">
							<outline text="if (utils.beginsWith (theText, &quot;&lt;p&gt;&quot;) &amp;&amp; utils.endsWith (theText, &quot;&lt;/p&gt;&quot;)) {" created="Tue, 03 May 2022 15:22:46 GMT">
								<outline text="theText = utils.stringDelete (theText, 1, 3);" created="Tue, 03 May 2022 15:31:41 GMT"/>
								<outline text="theText = utils.stringMid (theText, 1, theText.length - 4);" created="Tue, 03 May 2022 15:31:41 GMT"/>
								<outline text="}" created="Tue, 03 May 2022 15:23:56 GMT"/>
								</outline>
							<outline text="}" created="Tue, 03 May 2022 15:30:45 GMT"/>
							</outline>
						<outline text="return (theText);" created="Tue, 03 May 2022 15:33:18 GMT"/>
						<outline text="}" created="Tue, 03 May 2022 15:21:54 GMT"/>
						</outline>
					<outline text="database.isFeedInDatabase (feedUrl, function (flInDatabase, feedRec) {" created="Thu, 28 Apr 2022 17:05:43 GMT">
						<outline text="if (flInDatabase) {" created="Thu, 28 Apr 2022 19:14:19 GMT">
							<outline text="var headElements = {" created="Thu, 28 Apr 2022 19:16:40 GMT">
								<outline text="title: checkNull (feedRec.title),"/>
								<outline text="link: checkNull (feedRec.link),"/>
								<outline text="description: checkNull (feedRec.description),"/>
								<outline text="language: checkNull (feedRec.language),"/>
								<outline text="generator: checkNull (feedRec.generator),"/>
								<outline text="docs: checkNull (feedRec.docs),"/>
								<outline text="twitterScreenName: checkNull (feedRec.twitterAccount),"/>
								<outline text="maxFeedItems: config.maxFeedItems,"/>
								<outline text="flRssCloudEnabled: false, //to be turned on later"/>
								<outline text="rssCloudDomain: &quot;rpc.rsscloud.io&quot;,"/>
								<outline text="rssCloudPort: 5337,"/>
								<outline text="rssCloudPath: &quot;/pleaseNotify&quot;,"/>
								<outline text="rssCloudRegisterProcedure: &quot;&quot;,"/>
								<outline text="rssCloudProtocol: &quot;http-post&quot;"/>
								<outline text="};" created="Thu, 28 Apr 2022 19:16:45 GMT"/>
								</outline>
							<outline text="const sqltext = &quot;select * from items where flDeleted=false and feedUrl=&quot; + davesql.encode (feedUrl) + &quot; order by pubDate desc limit &quot; + config.maxFeedItems + &quot;;&quot;; "/>
							<outline text="davesql.runSqltext (sqltext, function (err, result) {">
								<outline text="if (err) {">
									<outline text="callback (err);"/>
									<outline text="}"/>
									</outline>
								<outline text="else {">
									<outline text="var historyArray = new Array ();" created="Thu, 28 Apr 2022 19:09:38 GMT"/>
									<outline text="result.forEach (function (item) {" created="Thu, 28 Apr 2022 19:09:38 GMT">
										<outline text="var description = checkNull (item.description); //5/3/22 by DW" created="Tue, 03 May 2022 15:49:10 GMT"/>
										<outline text="if (description !== undefined) {" created="Tue, 03 May 2022 15:49:22 GMT">
											<outline text="description = fixMediumEditorQuirks (description);" created="Tue, 03 May 2022 15:49:29 GMT"/>
											<outline text="}" created="Tue, 03 May 2022 15:49:36 GMT"/>
											</outline>
										<outline text="historyArray.push ({">
											<outline text="title: checkNull (item.title),"/>
											<outline text="text: description,"/>
											<outline text="markdowntext: checkNull (item.markdowntext), //5/5/22 by DW" created="Thu, 05 May 2022 15:36:12 GMT"/>
											<outline text="link: undefined," created="Thu, 06 May 2021 13:33:40 GMT"/>
											<outline text="when: item.pubDate,"/>
											<outline text="guid: {">
												<outline text="flPermalink: false,"/>
												<outline text="value: item.id"/>
												<outline text="}"/>
												</outline>
											<outline text="});"/>
											</outline>
										<outline text="});" created="Thu, 28 Apr 2022 19:09:57 GMT"/>
										</outline>
									<outline text="console.log (&quot;buildRss: historyArray == &quot; + utils.jsonStringify (historyArray));" isComment="true" created="Thu, 28 Apr 2022 22:01:30 GMT"/>
									<outline text="" created="Thu, 28 Apr 2022 22:15:02 GMT"/>
									<outline text="var xmltext = rss.buildRssFeed (headElements, historyArray); "/>
									<outline text="var s3Path = config.s3PathForFeeds + screenname + &quot;.xml&quot;;" created="Thu, 28 Apr 2022 22:12:52 GMT"/>
									<outline text="s3.newObject (s3Path, xmltext, &quot;text/xml&quot;, &quot;public-read&quot;, function (err, data) {">
										<outline text="if (err) {">
											<outline text="console.log (&quot;buildRss: s3Path == &quot; + s3Path + &quot;, err.message == &quot; + err.message);"/>
											<outline text="callback (err);" created="Fri, 29 Apr 2022 14:15:42 GMT"/>
											<outline text="}"/>
											</outline>
										<outline text="else {">
											<outline text="console.log (&quot;buildRss: &quot; + utils.secondsSince (whenstart) + &quot; secs.&quot;);" isComment="true"/>
											<outline text="rss.cloudPing (undefined, config.rssFeedUrl);" isComment="true"/>
											<outline text="callback (undefined, feedRec);"/>
											<outline text="}"/>
											</outline>
										<outline text="});"/>
										</outline>
									<outline text="" created="Thu, 28 Apr 2022 19:21:45 GMT"/>
									<outline text="var f = config.localRssPath + screenname + &quot;.xml&quot;;" created="Thu, 28 Apr 2022 19:21:45 GMT"/>
									<outline text="utils.sureFilePath (f, function () {" created="Thu, 28 Apr 2022 19:21:45 GMT">
										<outline text="fs.writeFile (f, xmltext, function (err) {">
											<outline text="if (err) {">
												<outline text="console.log (&quot;buildRss: err.message == &quot; + err.message);"/>
												<outline text="}"/>
												</outline>
											<outline text="});"/>
											</outline>
										<outline text="});" created="Thu, 28 Apr 2022 19:22:46 GMT"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="}" created="Thu, 28 Apr 2022 19:14:29 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 28 Apr 2022 19:14:30 GMT">
							<outline text="console.log (&quot;blog.buildRss: feedUrl == &quot; + feedUrl + &quot; is not in the database.&quot;);" created="Sun, 08 May 2022 15:30:25 GMT"/>
							<outline text="callback ({message: &quot;Can't build the feed because it's not in the database.&quot;});" created="Thu, 28 Apr 2022 19:14:39 GMT"/>
							<outline text="}" created="Thu, 28 Apr 2022 19:14:36 GMT"/>
							</outline>
						<outline text="});" created="Thu, 28 Apr 2022 17:05:46 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function updateBlogSettings (jsontext, screenname, callback) {" created="Thu, 28 Apr 2022 14:11:36 GMT">
					<outline text="Changes" isComment="true" created="Thu, 28 Apr 2022 14:32:05 GMT">
						<outline text="4/28/22; 10:32:08 AM by DW" created="Thu, 28 Apr 2022 14:32:07 GMT">
							<outline text="Add the feed to the database, as if it were any other feed." created="Thu, 28 Apr 2022 14:32:08 GMT"/>
							</outline>
						</outline>
					<outline text="var feedUrl = getBlogUrl (screenname), whenstart = new Date (), feedRecFromClient;" created="Thu, 28 Apr 2022 14:08:19 GMT"/>
					<outline text="var feedRec = {">
						<outline text="feedUrl,"/>
						<outline text="title: screenname + &quot;'s feed&quot;,"/>
						<outline text="pubDate: whenstart," created="Wed, 30 Mar 2022 14:16:48 GMT"/>
						<outline text="whenCreated: whenstart,"/>
						<outline text="whenUpdated: whenstart,"/>
						<outline text="twitterAccount: screenname, " created="Sun, 03 Apr 2022 16:51:41 GMT"/>
						<outline text="generator: config.generatorForFeed," created="Wed, 30 Mar 2022 13:57:16 GMT"/>
						<outline text="docs: config.docsForFeed," created="Thu, 28 Apr 2022 14:29:36 GMT"/>
						<outline text="" created="Thu, 28 Apr 2022 15:20:51 GMT"/>
						<outline text="ctErrors: 0,"/>
						<outline text="ctConsecutiveErrors: 0," created="Sat, 19 Mar 2022 16:00:24 GMT"/>
						<outline text="errorString: &quot;&quot;," created="Sat, 19 Mar 2022 16:00:36 GMT"/>
						<outline text="whenChecked: whenstart, "/>
						<outline text="ctChecks: 0, "/>
						<outline text="whenLastError: new Date (0)"/>
						<outline text="};"/>
						</outline>
					<outline text="try {" created="Thu, 28 Apr 2022 14:01:41 GMT">
						<outline text="feedRecFromClient = JSON.parse (jsontext);" created="Thu, 28 Apr 2022 14:01:26 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:51:34 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Thu, 28 Apr 2022 14:01:54 GMT">
						<outline text="callback (err);" created="Thu, 28 Apr 2022 14:02:02 GMT"/>
						<outline text="return;" created="Thu, 28 Apr 2022 14:02:18 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:01:57 GMT"/>
						</outline>
					<outline text="for (var x in feedRecFromClient) {" created="Thu, 28 Apr 2022 14:31:27 GMT">
						<outline text="feedRec [x] = feedRecFromClient [x];" created="Thu, 28 Apr 2022 14:31:40 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:31:34 GMT"/>
						</outline>
					<outline text="console.log (&quot;updateBlogSettings: feedRec == &quot; + utils.jsonStringify (feedRec));" created="Thu, 28 Apr 2022 14:49:23 GMT"/>
					<outline text="database.saveFeed (feedRec, function (err, data) {" created="Fri, 01 Apr 2022 14:17:29 GMT">
						<outline text="if (err) {" created="Thu, 28 Apr 2022 14:54:55 GMT">
							<outline text="callback (err);" created="Thu, 28 Apr 2022 14:55:06 GMT"/>
							<outline text="}" created="Thu, 28 Apr 2022 14:54:57 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 28 Apr 2022 14:54:58 GMT">
							<outline text="callback (undefined, database.convertDatabaseFeed (feedRec));" created="Thu, 28 Apr 2022 14:54:12 GMT"/>
							<outline text="}" created="Thu, 28 Apr 2022 14:55:00 GMT"/>
							</outline>
						<outline text="});" created="Thu, 28 Apr 2022 14:54:51 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 14:12:27 GMT"/>
					</outline>
				<outline text="" created="Sun, 08 May 2022 15:40:38 GMT"/>
				<outline text="function addFeedIfNecessary (screenname, callback) { //5/8/22 by DW" created="Sun, 08 May 2022 15:40:39 GMT">
					<outline text="var feedUrl = getBlogUrl (screenname);" created="Thu, 28 Apr 2022 14:08:19 GMT"/>
					<outline text="database.isFeedInDatabase (feedUrl, function (flInDatabase, feedRec) {" created="Tue, 29 Mar 2022 19:29:53 GMT">
						<outline text="if (flInDatabase) {" created="Tue, 29 Mar 2022 19:30:01 GMT">
							<outline text="callback (undefined, feedRec);" created="Tue, 29 Mar 2022 19:40:39 GMT"/>
							<outline text="}" created="Tue, 29 Mar 2022 19:30:08 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 May 2022 15:42:29 GMT">
							<outline text="updateBlogSettings (&quot;{}&quot;, screenname, callback);"/>
							<outline text="}" created="Sun, 08 May 2022 15:42:31 GMT"/>
							</outline>
						<outline text="});" created="Tue, 29 Mar 2022 19:29:54 GMT"/>
						</outline>
					<outline text="}" created="Sun, 08 May 2022 15:40:53 GMT"/>
					</outline>
				<outline text="" created="Sun, 08 May 2022 15:40:39 GMT"/>
				<outline text="function newPost (jsontext, screenname, callback) {">
					<outline text="Changes" isComment="true" created="Thu, 28 Apr 2022 13:44:26 GMT">
						<outline text="5/5/22; 10:40:21 AM by DW" created="Thu, 05 May 2022 14:40:21 GMT">
							<outline text="The jsontext struct could contain description or markdowntext." created="Thu, 05 May 2022 14:40:21 GMT">
								<outline text="If description, it goes straight to the feed as the description element of the item." created="Thu, 05 May 2022 14:40:35 GMT"/>
								<outline text="if markdowntext, we render the markdowntext and that goes into the description element, and we save the markdown in a &lt;source:markdown&gt; element. " created="Thu, 05 May 2022 14:40:57 GMT"/>
								</outline>
							</outline>
						<outline text="5/3/22; 10:52:44 AM by DW" created="Tue, 03 May 2022 14:52:44 GMT">
							<outline text="We set the id here, instead of relying on saveItem to do it. Because we want the id and the guid to agree. " created="Tue, 03 May 2022 14:52:44 GMT"/>
							</outline>
						<outline text="4/28/22; 9:44:30 AM by DW" created="Thu, 28 Apr 2022 13:44:29 GMT">
							<outline text="Add a new post for the indicated user." created="Thu, 28 Apr 2022 13:44:30 GMT"/>
							</outline>
						</outline>
					<outline text="var feedUrl = getBlogUrl (screenname), itemRecFromClient, whenstart = new Date ();" created="Thu, 28 Apr 2022 14:08:19 GMT"/>
					<outline text="var theId = database.getNexItemtId (); //5/3/22 by DW" created="Tue, 03 May 2022 14:52:09 GMT"/>
					<outline text="var itemRec = {" created="Thu, 28 Apr 2022 16:35:50 GMT">
						<outline text="feedUrl," created="Thu, 28 Apr 2022 16:37:48 GMT"/>
						<outline text="guid: theId, " created="Thu, 28 Apr 2022 16:46:40 GMT"/>
						<outline text="pubDate: whenstart," created="Thu, 28 Apr 2022 16:37:50 GMT"/>
						<outline text="id: theId, //used to be undefined -- 5/3/22 by DW" created="Thu, 28 Apr 2022 16:38:48 GMT"/>
						<outline text="whenCreated: whenstart," created="Sun, 20 Mar 2022 15:21:21 GMT"/>
						<outline text="whenUpdated: whenstart," created="Sun, 20 Mar 2022 15:35:32 GMT"/>
						<outline text="flDeleted: false," created="Sun, 20 Mar 2022 15:35:45 GMT"/>
						<outline text="outlineJsontext: undefined," created="Thu, 28 Apr 2022 16:38:52 GMT"/>
						<outline text="markdowntext: undefined" created="Thu, 05 May 2022 15:13:45 GMT"/>
						<outline text="};" created="Thu, 28 Apr 2022 16:35:54 GMT"/>
						</outline>
					<outline text="try {" created="Thu, 28 Apr 2022 14:01:41 GMT">
						<outline text="itemRecFromClient = JSON.parse (jsontext);" created="Thu, 28 Apr 2022 14:01:26 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:51:39 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Thu, 28 Apr 2022 14:01:54 GMT">
						<outline text="callback (err);" created="Thu, 28 Apr 2022 14:02:02 GMT"/>
						<outline text="return;" created="Thu, 28 Apr 2022 14:02:18 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:01:57 GMT"/>
						</outline>
					<outline text="" created="Thu, 05 May 2022 14:41:46 GMT"/>
					<outline text="if (itemRecFromClient.markdowntext !== undefined) { //5/5/22 by DW" created="Thu, 05 May 2022 14:41:46 GMT">
						<outline text="itemRecFromClient.description = markdownProcess (itemRecFromClient.markdowntext, true);" created="Thu, 05 May 2022 14:42:34 GMT"/>
						<outline text="}" created="Thu, 05 May 2022 14:42:21 GMT"/>
						</outline>
					<outline text="" created="Thu, 05 May 2022 14:41:47 GMT"/>
					<outline text="for (var x in itemRecFromClient) {" created="Thu, 28 Apr 2022 14:31:27 GMT">
						<outline text="itemRec [x] = itemRecFromClient [x];" created="Thu, 28 Apr 2022 14:31:40 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:31:34 GMT"/>
						</outline>
					<outline text="database.saveItem (itemRec, function (err, feedRec) {" created="Sun, 20 Mar 2022 16:30:31 GMT">
						<outline text="if (err) {" created="Thu, 28 Apr 2022 14:54:55 GMT">
							<outline text="callback (err);" created="Thu, 28 Apr 2022 14:55:06 GMT"/>
							<outline text="}" created="Thu, 28 Apr 2022 14:54:57 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 28 Apr 2022 14:54:58 GMT">
							<outline text="addFeedIfNecessary (screenname, function (err, feedRec) { //make sure the feed is in the database" created="Sun, 08 May 2022 15:49:04 GMT">
								<outline text="buildRss (screenname, function (err, feedRec) {" created="Thu, 28 Apr 2022 19:24:12 GMT">
									<outline text="var jstruct = {" created="Thu, 24 Mar 2022 16:19:01 GMT">
										<outline text="item: database.convertDatabaseItem (itemRec)," created="Thu, 24 Mar 2022 16:19:22 GMT"/>
										<outline text="theFeed: database.convertDatabaseFeed (feedRec)" created="Thu, 24 Mar 2022 16:19:28 GMT"/>
										<outline text="}" created="Thu, 24 Mar 2022 16:19:15 GMT"/>
										</outline>
									<outline text="database.updateSocketSubscribers (&quot;newItem&quot;, jstruct);" created="Sun, 20 Mar 2022 22:49:29 GMT"/>
									<outline text="callback (undefined, database.convertDatabaseItem (itemRec));" created="Thu, 28 Apr 2022 14:54:12 GMT"/>
									<outline text="database.checkOneFeed (feedUrl);" isComment="true" created="Fri, 29 Apr 2022 14:09:57 GMT"/>
									<outline text="});" created="Thu, 28 Apr 2022 19:24:33 GMT"/>
									</outline>
								<outline text="});" created="Sun, 08 May 2022 15:49:15 GMT"/>
								</outline>
							<outline text="}" created="Thu, 28 Apr 2022 14:55:00 GMT"/>
							</outline>
						<outline text="});" created="Thu, 28 Apr 2022 16:41:56 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 13:44:25 GMT"/>
					</outline>
				<outline text="function updatePost (jsontext, screenname, callback) {">
					<outline text="Changes" isComment="true" created="Thu, 28 Apr 2022 13:44:26 GMT">
						<outline text="5/5/22; 11:45:38 AM by DW" created="Thu, 05 May 2022 15:45:37 GMT">
							<outline text="As with new posts, if there's a markdowntext value in the object, we render it and put the result into description. the markdowntext is added to the feed item and the RSS item. " created="Thu, 05 May 2022 15:45:38 GMT"/>
							</outline>
						<outline text="4/30/22; 12:24:44 PM by DW" created="Thu, 28 Apr 2022 13:44:29 GMT">
							<outline text="We get the guid and description from the object the client sends us. For now we ignore all the rest. " created="Sat, 30 Apr 2022 16:24:53 GMT"/>
							</outline>
						</outline>
					<outline text="var feedUrl = getBlogUrl (screenname), itemRecFromClient, whenstart = new Date ();" created="Thu, 28 Apr 2022 14:08:19 GMT"/>
					<outline text="try {" created="Thu, 28 Apr 2022 14:01:41 GMT">
						<outline text="itemRecFromClient = JSON.parse (jsontext);" created="Thu, 28 Apr 2022 14:01:26 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:51:39 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Thu, 28 Apr 2022 14:01:54 GMT">
						<outline text="callback (err);" created="Thu, 28 Apr 2022 14:02:02 GMT"/>
						<outline text="return;" created="Thu, 28 Apr 2022 14:02:18 GMT"/>
						<outline text="}" created="Thu, 28 Apr 2022 14:01:57 GMT"/>
						</outline>
					<outline text="if (itemRecFromClient.markdowntext !== undefined) { //5/5/22 by DW" created="Thu, 05 May 2022 14:41:46 GMT">
						<outline text="itemRecFromClient.description = markdownProcess (itemRecFromClient.markdowntext, true);" created="Thu, 05 May 2022 14:42:34 GMT"/>
						<outline text="}" created="Thu, 05 May 2022 14:42:21 GMT"/>
						</outline>
					<outline text="database.isItemInDatabase (feedUrl, itemRecFromClient.guid, function (flThere, itemRec) {" created="Sun, 20 Mar 2022 15:15:05 GMT">
						<outline text="if (flThere) {" created="Sat, 30 Apr 2022 16:25:48 GMT">
							<outline text="if (itemRecFromClient.markdowntext !== undefined) { //5/5/22 by DW" created="Thu, 05 May 2022 15:49:17 GMT">
								<outline text="itemRec.markdowntext = itemRecFromClient.markdowntext;" created="Thu, 05 May 2022 15:49:28 GMT"/>
								<outline text="}" created="Thu, 05 May 2022 15:49:19 GMT"/>
								</outline>
							<outline text="itemRec.description = itemRecFromClient.description;" created="Sat, 30 Apr 2022 16:26:57 GMT"/>
							<outline text="database.saveItem (itemRec, function (err, feedRec) {" created="Sun, 20 Mar 2022 16:30:31 GMT">
								<outline text="if (err) {" created="Thu, 28 Apr 2022 14:54:55 GMT">
									<outline text="callback (err);" created="Thu, 28 Apr 2022 14:55:06 GMT"/>
									<outline text="}" created="Thu, 28 Apr 2022 14:54:57 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 28 Apr 2022 14:54:58 GMT">
									<outline text="buildRss (screenname, function (err, feedRec) {" created="Thu, 28 Apr 2022 19:24:12 GMT">
										<outline text="var jstruct = {" created="Thu, 24 Mar 2022 16:19:01 GMT">
											<outline text="item: database.convertDatabaseItem (itemRec)," created="Thu, 24 Mar 2022 16:19:22 GMT"/>
											<outline text="theFeed: database.convertDatabaseFeed (feedRec)" created="Thu, 24 Mar 2022 16:19:28 GMT"/>
											<outline text="}" created="Thu, 24 Mar 2022 16:19:15 GMT"/>
											</outline>
										<outline text="database.updateSocketSubscribers (&quot;updatedItem&quot;, jstruct);" created="Sun, 20 Mar 2022 22:49:29 GMT"/>
										<outline text="callback (undefined, database.convertDatabaseItem (itemRec));" created="Thu, 28 Apr 2022 14:54:12 GMT"/>
										<outline text="});" created="Thu, 28 Apr 2022 19:24:33 GMT"/>
										</outline>
									<outline text="}" created="Thu, 28 Apr 2022 14:55:00 GMT"/>
									</outline>
								<outline text="});" created="Thu, 28 Apr 2022 16:41:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 30 Apr 2022 16:25:54 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 30 Apr 2022 16:25:54 GMT">
							<outline text="callback ({message: &quot;Can't update the item because it isn't in the database.&quot;});" created="Thu, 28 Apr 2022 14:02:02 GMT"/>
							<outline text="}" created="Sat, 30 Apr 2022 16:25:57 GMT"/>
							</outline>
						<outline text="});" created="Sun, 20 Mar 2022 15:16:04 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 13:44:25 GMT"/>
					</outline>
				<outline text="function start (options, callback) {" created="Sat, 19 Mar 2022 14:51:04 GMT">
					<outline text="if (options !== undefined) {" created="Sat, 19 Mar 2022 14:51:26 GMT">
						<outline text="for (var x in options) {" created="Sat, 19 Mar 2022 14:51:52 GMT">
							<outline text="config [x] = options [x];" created="Sat, 19 Mar 2022 14:52:06 GMT"/>
							<outline text="}" created="Sat, 19 Mar 2022 14:52:21 GMT"/>
							</outline>
						<outline text="}" created="Sat, 19 Mar 2022 14:51:51 GMT"/>
						</outline>
					<outline text="if (callback !== undefined) {" created="Sat, 19 Mar 2022 14:51:26 GMT">
						<outline text="callback (undefined);" created="Sat, 19 Mar 2022 14:51:32 GMT"/>
						<outline text="}" created="Sat, 19 Mar 2022 14:51:35 GMT"/>
						</outline>
					<outline text="}" created="Sat, 19 Mar 2022 14:51:13 GMT"/>
					</outline>
				</outline>
			<outline text="likes.js" created="Fri, 06 May 2022 14:27:14 GMT">
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const davesql = require (&quot;davesql&quot;);"/>
				<outline text="const database = require (&quot;./database.js&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Fri, 06 May 2022 14:27:42 GMT"/>
				<outline text="exports.isLiked = isLiked;"/>
				<outline text="exports.toggleItemLike = toggleItemLike;"/>
				<outline text="exports.getLikes = getLikes;"/>
				<outline text="exports.getALotOLikes = getALotOLikes;"/>
				<outline text="" created="Fri, 06 May 2022 14:27:42 GMT"/>
				<outline text="function getALotOLikes (arrayOfIds, callback) {" created="Fri, 06 May 2022 17:10:22 GMT">
					<outline text="var allMyLikes = new Array ();" created="Fri, 06 May 2022 17:10:56 GMT"/>
					<outline text="function doNext (ix) {" created="Fri, 06 May 2022 17:11:03 GMT">
						<outline text="if (ix &gt;= arrayOfIds.length) {" created="Fri, 06 May 2022 17:11:13 GMT">
							<outline text="callback (undefined, allMyLikes);" created="Fri, 06 May 2022 17:11:21 GMT"/>
							<outline text="}" created="Fri, 06 May 2022 17:11:31 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 06 May 2022 17:11:33 GMT">
							<outline text="getLikes (arrayOfIds [ix], function (err, theLikes) {" created="Fri, 06 May 2022 17:12:02 GMT">
								<outline text="if (err) {" created="Fri, 06 May 2022 17:12:32 GMT">
									<outline text="callback (err);" created="Fri, 06 May 2022 17:12:40 GMT"/>
									<outline text="}" created="Fri, 06 May 2022 17:12:45 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 06 May 2022 17:12:46 GMT">
									<outline text="allMyLikes.push (theLikes);" created="Fri, 06 May 2022 17:12:58 GMT"/>
									<outline text="doNext (ix + 1);" created="Fri, 06 May 2022 17:13:08 GMT"/>
									<outline text="}" created="Fri, 06 May 2022 17:12:49 GMT"/>
									</outline>
								<outline text="});" created="Fri, 06 May 2022 17:12:27 GMT"/>
								</outline>
							<outline text="}" created="Fri, 06 May 2022 17:11:35 GMT"/>
							</outline>
						<outline text="}" created="Fri, 06 May 2022 17:11:12 GMT"/>
						</outline>
					<outline text="doNext (0);" created="Fri, 06 May 2022 17:10:57 GMT"/>
					<outline text="}" created="Fri, 06 May 2022 17:10:45 GMT"/>
					</outline>
				<outline text="function isLiked (listName, itemId, callback) {" created="Fri, 06 May 2022 14:34:46 GMT">
					<outline text="var sqltext = &quot;select * from likes where listName=&quot; + davesql.encode (listName) + &quot; and itemId=&quot; + davesql.encode (itemId) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {">
							<outline text="callback (false);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (result.length == 0) {">
								<outline text="callback (false);"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="callback (true, result [0]);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 06 May 2022 14:35:35 GMT"/>
					</outline>
				<outline text="function bumpItemLikedCount (itemId, flLiked, callback) { " created="Sat, 07 May 2022 13:58:48 GMT">
					<outline text="Changes" isComment="true" created="Sat, 07 May 2022 14:14:04 GMT">
						<outline text="5/7/22; 11:00:48 AM by DW" created="Sat, 07 May 2022 15:00:48 GMT">
							<outline text="Note we don't send the feed along with the socket update, because we don't have it, and the client doesn't even use it, so leave it undefined. " created="Sat, 07 May 2022 15:00:48 GMT"/>
							</outline>
						<outline text="5/7/22; 10:14:08 AM by DW" created="Sat, 07 May 2022 14:14:07 GMT">
							<outline text="Increment or decrement the item's ctLiked value. flLiked is true the item is liked and it wasn't liked before." created="Sat, 07 May 2022 14:14:09 GMT"/>
							</outline>
						</outline>
					<outline text="database.getItemFromDatabase (itemId, function (err, itemRec) {" created="Sat, 07 May 2022 14:04:32 GMT">
						<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
							<outline text="if (callback !== undefined) {" created="Sat, 07 May 2022 14:23:48 GMT">
								<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}" created="Sat, 07 May 2022 14:23:55 GMT"/>
								</outline>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 07 May 2022 14:05:01 GMT">
							<outline text="if (flLiked) {" created="Sat, 07 May 2022 14:09:39 GMT">
								<outline text="itemRec.ctLikes++;" created="Sat, 07 May 2022 14:10:01 GMT"/>
								<outline text="}" created="Sat, 07 May 2022 14:09:43 GMT"/>
								</outline>
							<outline text="else {" created="Sat, 07 May 2022 14:09:44 GMT">
								<outline text="if (itemRec.ctLikes &gt; 0) {" created="Sat, 07 May 2022 14:10:25 GMT">
									<outline text="itemRec.ctLikes--;" created="Sat, 07 May 2022 14:10:01 GMT"/>
									<outline text="}" created="Sat, 07 May 2022 14:10:29 GMT"/>
									</outline>
								<outline text="}" created="Sat, 07 May 2022 14:09:46 GMT"/>
								</outline>
							<outline text="database.saveItem (itemRec, function (err, data) {" created="Fri, 22 Apr 2022 13:57:52 GMT">
								<outline text="if (err) {" created="Fri, 22 Apr 2022 14:13:10 GMT">
									<outline text="if (callback !== undefined) {" created="Sat, 07 May 2022 14:23:48 GMT">
										<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
										<outline text="}" created="Sat, 07 May 2022 14:23:55 GMT"/>
										</outline>
									<outline text="}" created="Fri, 22 Apr 2022 14:13:16 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 22 Apr 2022 14:13:17 GMT">
									<outline text="var convertedRec = database.convertDatabaseItem (itemRec);" created="Sat, 07 May 2022 14:06:36 GMT"/>
									<outline text="var jstruct = {" created="Thu, 24 Mar 2022 16:19:01 GMT">
										<outline text="item: convertedRec," created="Thu, 24 Mar 2022 16:19:22 GMT"/>
										<outline text="theFeed: undefined" created="Thu, 24 Mar 2022 16:19:28 GMT"/>
										<outline text="}" created="Thu, 24 Mar 2022 16:19:15 GMT"/>
										</outline>
									<outline text="database.updateSocketSubscribers (&quot;updatedItem&quot;, jstruct);" created="Sun, 20 Mar 2022 22:49:29 GMT"/>
									<outline text="if (callback !== undefined) {" created="Sat, 07 May 2022 14:23:48 GMT">
										<outline text="callback (undefined, convertedRec);" created="Fri, 22 Apr 2022 14:13:19 GMT"/>
										<outline text="}" created="Sat, 07 May 2022 14:23:55 GMT"/>
										</outline>
									<outline text="}" created="Fri, 22 Apr 2022 14:13:28 GMT"/>
									</outline>
								<outline text="});" created="Fri, 22 Apr 2022 14:13:04 GMT"/>
								</outline>
							<outline text="}" created="Sat, 07 May 2022 14:05:03 GMT"/>
							</outline>
						<outline text="});" created="Sat, 07 May 2022 14:04:44 GMT"/>
						</outline>
					<outline text="}" created="Sat, 07 May 2022 13:59:03 GMT"/>
					</outline>
				<outline text="function toggleItemLike (listName, itemId, callback) {" created="Fri, 06 May 2022 14:27:42 GMT">
					<outline text="Changes" isComment="true" created="Sat, 07 May 2022 13:55:25 GMT">
						<outline text="5/7/22; 9:55:27 AM by DW" created="Sat, 07 May 2022 13:55:26 GMT">
							<outline text="Toggle the liked state of an item for one user. listName == the user's id, there's one list per user. " created="Sat, 07 May 2022 13:55:28 GMT"/>
							<outline text="We maintail the likes table and the ctLikes column in the items table. " created="Sat, 07 May 2022 13:56:14 GMT"/>
							</outline>
						</outline>
					<outline text="isLiked (listName, itemId, function (flLiked, likeRec) {" created="Fri, 06 May 2022 14:36:46 GMT">
						<outline text="var sqltext, likesRec;" created="Fri, 06 May 2022 14:40:07 GMT"/>
						<outline text="if (flLiked) {" created="Fri, 06 May 2022 14:38:36 GMT">
							<outline text="sqltext = &quot;delete from likes where listName=&quot; + davesql.encode (listName) + &quot; and itemId=&quot; + davesql.encode (itemId) + &quot;;&quot;;"/>
							<outline text="likesRec = new Object (); //return an empty object" created="Fri, 06 May 2022 16:45:28 GMT"/>
							<outline text="}" created="Fri, 06 May 2022 14:38:38 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 06 May 2022 14:38:39 GMT">
							<outline text="likesRec = {">
								<outline text="listName,"/>
								<outline text="itemId," created="Fri, 06 May 2022 14:32:14 GMT"/>
								<outline text="emotion: 1, //the default, just plain like" created="Fri, 06 May 2022 16:26:23 GMT"/>
								<outline text="whenCreated: new Date ()"/>
								<outline text="};"/>
								</outline>
							<outline text="sqltext = &quot;replace into likes &quot; + davesql.encodeValues (likesRec);"/>
							<outline text="}" created="Fri, 06 May 2022 14:38:41 GMT"/>
							</outline>
						<outline text="davesql.runSqltext (sqltext, function (err, result) {">
							<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
								<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
								<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 18 Mar 2022 15:46:27 GMT">
								<outline text="console.log (&quot;toggleItemLike: listName == &quot; + listName + &quot;, itemId == &quot; + itemId);" created="Sat, 19 Mar 2022 14:48:47 GMT"/>
								<outline text="bumpItemLikedCount (itemId, !flLiked);" created="Sat, 07 May 2022 13:57:58 GMT"/>
								<outline text="callback (undefined, likesRec);" created="Fri, 18 Mar 2022 15:46:28 GMT"/>
								<outline text="}" created="Fri, 18 Mar 2022 15:46:34 GMT"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="});" created="Fri, 06 May 2022 14:38:29 GMT"/>
						</outline>
					<outline text="}" created="Fri, 06 May 2022 14:28:52 GMT"/>
					</outline>
				<outline text="function getLikes (itemId, callback) {" created="Fri, 06 May 2022 16:04:08 GMT">
					<outline text="var sqltext = &quot;select * from likes where itemId=&quot; + davesql.encode (itemId) + &quot;;&quot;;"/>
					<outline text="davesql.runSqltext (sqltext, function (err, result) {">
						<outline text="if (err) {" created="Fri, 18 Mar 2022 15:46:18 GMT">
							<outline text="callback (err);" created="Fri, 18 Mar 2022 15:46:22 GMT"/>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:25 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 18 Mar 2022 15:46:27 GMT">
							<outline text="var theLikes = new Array ();" created="Fri, 06 May 2022 16:15:17 GMT"/>
							<outline text="result.forEach (function (aLike) {" created="Fri, 06 May 2022 16:15:18 GMT">
								<outline text="theLikes.push ({" created="Fri, 06 May 2022 16:15:49 GMT">
									<outline text="who: aLike.listName" created="Fri, 06 May 2022 16:15:59 GMT"/>
									<outline text="});" created="Fri, 06 May 2022 16:15:53 GMT"/>
									</outline>
								<outline text="});" created="Fri, 06 May 2022 16:15:32 GMT"/>
								</outline>
							<outline text="callback (undefined, theLikes);" created="Fri, 18 Mar 2022 15:46:28 GMT"/>
							<outline text="}" created="Fri, 18 Mar 2022 15:46:34 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Fri, 06 May 2022 16:04:22 GMT"/>
					</outline>
				</outline>
			<outline text="notifications.js" isComment="true" created="Fri, 08 Apr 2022 13:47:01 GMT">
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const websocket = require (&quot;nodejs-websocket&quot;); "/>
				<outline text="const database = require (&quot;./database.js&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Fri, 08 Apr 2022 14:27:41 GMT"/>
				<outline text="exports.connectWithCloudServers = connectWithCloudServers;" created="Fri, 08 Apr 2022 14:27:42 GMT"/>
				<outline text="" created="Fri, 08 Apr 2022 13:57:18 GMT"/>
				<outline text="function connectWithCloudServers () {" created="Fri, 08 Apr 2022 13:47:05 GMT">
					<outline text="Changes" isComment="true" created="Fri, 08 Apr 2022 13:47:55 GMT">
						<outline text="4/8/22; 9:47:58 AM by DW" created="Fri, 08 Apr 2022 13:47:58 GMT">
							<outline text="Try to open a ws connection to cloud servers that are used by feeds that are subscribed to." created="Fri, 08 Apr 2022 13:47:59 GMT"/>
							<outline text="Initial version, just connect to the test server." created="Fri, 08 Apr 2022 13:47:55 GMT"/>
							</outline>
						</outline>
					<outline text="const theServers = [&quot;ws://localhost:1424/&quot;];" created="Fri, 08 Apr 2022 13:47:55 GMT"/>
					<outline text="theServers.forEach (function (urlSocketServer) {" created="Fri, 08 Apr 2022 13:50:25 GMT">
						<outline text="websocket.connect (urlSocketServer, function () {" created="Fri, 08 Apr 2022 14:15:58 GMT">
							<outline text="console.log (&quot;wsConnectWithCloudServers: connected with: &quot; + urlSocketServer);" created="Fri, 08 Apr 2022 14:24:37 GMT"/>
							<outline text="this.on (&quot;text&quot;, function (theText) {">
								<outline text="function getPayload (jsontext) {" created="Mon, 21 Mar 2022 15:32:01 GMT">
									<outline text="var thePayload = undefined;" created="Mon, 21 Mar 2022 15:37:20 GMT"/>
									<outline text="try {" created="Mon, 21 Mar 2022 15:37:20 GMT">
										<outline text="thePayload = JSON.parse (jsontext);" created="Mon, 21 Mar 2022 15:37:23 GMT"/>
										<outline text="}" created="Mon, 21 Mar 2022 15:37:39 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Mon, 21 Mar 2022 15:37:40 GMT">
										<outline text="}" created="Mon, 21 Mar 2022 15:37:44 GMT"/>
										</outline>
									<outline text="return (thePayload);" created="Mon, 21 Mar 2022 15:33:05 GMT"/>
									<outline text="}" created="Mon, 21 Mar 2022 15:32:14 GMT"/>
									</outline>
								<outline text="var theCommand = utils.stringNthField (theText, &quot;\r&quot;, 1);" created="Mon, 21 Mar 2022 15:34:02 GMT"/>
								<outline text="var jsontext = utils.stringDelete (theText, 1, theCommand.length + 1);" created="Mon, 21 Mar 2022 15:35:15 GMT"/>
								<outline text="var thePayload = getPayload (jsontext);" created="Mon, 21 Mar 2022 15:35:39 GMT"/>
								<outline text="console.log (&quot;urlSocketServer: &quot; + urlSocketServer + &quot;, theCommand == &quot; + theCommand + &quot;, thePayload == &quot; + utils.jsonStringify (thePayload));"/>
								<outline text="switch (theCommand) {" created="Mon, 20 Dec 2021 16:38:54 GMT">
									<outline text="case &quot;changed&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
										<outline text="console.log (thePayload.feedUrl + &quot; changed.&quot;);" created="Thu, 24 Mar 2022 17:24:08 GMT"/>
										<outline text="database.checkOneFeed (thePayload.feedUrl);"/>
										<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
										</outline>
									<outline text="}" created="Mon, 20 Dec 2021 16:38:58 GMT"/>
									</outline>
								<outline text="});" created="Fri, 08 Apr 2022 14:27:09 GMT"/>
								</outline>
							<outline text="});" created="Fri, 08 Apr 2022 14:16:11 GMT"/>
							</outline>
						<outline text="});" created="Fri, 08 Apr 2022 13:50:36 GMT"/>
						</outline>
					<outline text="}" created="Fri, 08 Apr 2022 13:47:51 GMT"/>
					</outline>
				</outline>
			<outline text="feedreader.js" created="Thu, 17 Feb 2022 14:26:38 GMT">
				<outline text="const myVersion = &quot;0.4.0&quot;, myProductName = &quot;littlefeedreader&quot;; " created="Mon, 03 Feb 2014 03:21:03 GMT" pgfnum="36831"/>
				<outline text="" created="Wed, 24 Nov 2021 15:06:21 GMT"/>
				<outline text="const fs = require (&quot;fs&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const request = require (&quot;request&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const utils = require (&quot;daveutils&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const daveappserver = require (&quot;daveappserver&quot;); "/>
				<outline text="const davetwitter = require (&quot;davetwitter&quot;); "/>
				<outline text="const davesql = require (&quot;davesql&quot;);"/>
				<outline text="const reallysimple = require (&quot;reallysimple&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const opml = require (&quot;./opmlpackage.js&quot;);"/>
				<outline text="const opml = require (&quot;opml&quot;);" isComment="true" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const database = require (&quot;./database.js&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const notifications = require (&quot;./notifications.js&quot;);" isComment="true" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const blog = require (&quot;./blog.js&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="const likes = require (&quot;./likes.js&quot;);" created="Sat, 20 Feb 2021 22:03:12 GMT"/>
				<outline text="" created="Fri, 08 Apr 2022 14:28:29 GMT"/>
				<outline text="var config = {" created="Mon, 29 Nov 2021 15:52:16 GMT">
					<outline text="urlForFeeds: &quot;http://scripting.com/userfeeds/&quot;," created="Thu, 28 Apr 2022 14:05:11 GMT"/>
					<outline text="s3PathForFeeds: &quot;/scripting.com/userfeeds/&quot;," created="Thu, 28 Apr 2022 22:13:41 GMT"/>
					<outline text="localRssPath: &quot;data/feeds/&quot;," created="Thu, 28 Apr 2022 19:21:20 GMT"/>
					<outline text="generatorForFeed: &quot;Little Blog Editor v0.40&quot;," created="Thu, 28 Apr 2022 14:29:15 GMT"/>
					<outline text="docsForFeed: &quot;https://cyber.harvard.edu/rss/rss.html&quot;," created="Thu, 28 Apr 2022 14:29:50 GMT"/>
					<outline text="maxFeedItems: 50" created="Thu, 28 Apr 2022 19:08:16 GMT"/>
					<outline text="};" created="Mon, 29 Nov 2021 15:52:19 GMT"/>
					</outline>
				<outline text="" created="Thu, 17 Feb 2022 14:36:27 GMT"/>
				<outline text="var whenLastDayRollover = new Date ();" created="Thu, 17 Feb 2022 14:36:28 GMT"/>
				<outline text="" created="Fri, 18 Mar 2022 15:09:20 GMT"/>
				<outline text="function notComment (item) { //return true if the outline element is not a comment">
					<outline text="return (!utils.getBoolean (item.isComment));"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sat, 19 Mar 2022 14:34:52 GMT"/>
				<outline text="function publishFileCallback (f, screenname, relpath, type, flprivate, filetext, url) {">
					<outline text="Changes" isComment="true" created="Fri, 18 Mar 2022 15:09:42 GMT">
						<outline text="3/18/22; 11:09:44 AM by DW" created="Fri, 18 Mar 2022 15:09:43 GMT">
							<outline text="Called when a file is published." created="Fri, 18 Mar 2022 15:09:45 GMT"/>
							<outline text="If it's feeds.opml, build a flat list of subscriptions, and call the database routine." created="Fri, 18 Mar 2022 15:11:53 GMT"/>
							</outline>
						</outline>
					<outline text="if (relpath == &quot;feeds.opml&quot;) {">
						<outline text="var sublist = new Array ();"/>
						<outline text="opml.parse (filetext, function (err, theOutline) {">
							<outline text="if (!err) {">
								<outline text="opml.expandIncludes (theOutline, function (theNewOutline) {" created="Wed, 11 May 2022 15:32:00 GMT">
									<outline text="opml.visitAll (theNewOutline, function (theNode) {">
										<outline text="if (notComment (theNode)) {">
											<outline text="if (theNode.type == &quot;rss&quot;) {">
												<outline text="if (theNode.xmlUrl !== undefined) {">
													<outline text="console.log (theNode.xmlUrl);" created="Wed, 11 May 2022 16:16:30 GMT"/>
													<outline text="sublist.push (theNode);"/>
													<outline text="}"/>
													</outline>
												<outline text="}"/>
												</outline>
											<outline text="}"/>
											</outline>
										<outline text="return (true);"/>
										<outline text="});"/>
										</outline>
									<outline text="console.log (&quot;publishFileCallback: sublist == &quot; + utils.jsonStringify (sublist));" created="Wed, 11 May 2022 15:40:06 GMT"/>
									<outline text="database.processSubscriptionList (screenname, sublist);"/>
									<outline text="});" created="Wed, 11 May 2022 15:32:16 GMT"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 17 Feb 2022 14:36:37 GMT"/>
				<outline text="function handleHttpRequest (theRequest) {" created="Sat, 06 Nov 2021 20:25:05 GMT">
					<outline text="var now = new Date ();"/>
					<outline text="const params = theRequest.params;"/>
					<outline text="const token = params.oauth_token;"/>
					<outline text="const secret = params.oauth_token_secret;"/>
					<outline text="function returnPlainText (s) {">
						<outline text="theRequest.httpReturn (200, &quot;text/plain&quot;, s.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnData (jstruct) {">
						<outline text="if (jstruct === undefined) {">
							<outline text="jstruct = {};"/>
							<outline text="}"/>
							</outline>
						<outline text="theRequest.httpReturn (200, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function returnError (jstruct) {">
						<outline text="theRequest.httpReturn (500, &quot;application/json&quot;, utils.jsonStringify (jstruct));"/>
						<outline text="}"/>
						</outline>
					<outline text="function httpReturn (err, jstruct) {">
						<outline text="if (err) {">
							<outline text="returnError (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="returnData (jstruct);"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="function callWithScreenname (callback) {">
						<outline text="davetwitter.getScreenName (token, secret, function (screenname) {" created="Wed, 09 Jul 2014 23:57:16 GMT" pgfnum="42784">
							<outline text="if (screenname === undefined) {" created="Thu, 10 Jul 2014 00:53:00 GMT" pgfnum="42793">
								<outline text="returnError ({message: &quot;Can't do the thing you want because the accessToken is not valid.&quot;});    "/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:11 GMT" pgfnum="42797"/>
								</outline>
							<outline text="else {" created="Thu, 10 Jul 2014 00:53:12 GMT" pgfnum="42798">
								<outline text="callback (screenname);"/>
								<outline text="}" created="Thu, 10 Jul 2014 00:53:14 GMT" pgfnum="42799"/>
								</outline>
							<outline text="});" created="Wed, 09 Jul 2014 23:57:25 GMT" pgfnum="42785"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="switch (theRequest.lowerpath) {">
						<outline text="case &quot;/returnjson&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="reallysimple.readFeed (theRequest.params.url, httpReturn);"/>
							<outline text="return (true); //we handled it" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/returnopml&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="reallysimple.readFeed (theRequest.params.url, function (err, theFeed) {">
								<outline text="if (err) {" created="Fri, 19 Nov 2021 17:09:41 GMT">
									<outline text="returnError (err);" created="Fri, 19 Nov 2021 17:09:44 GMT"/>
									<outline text="}" created="Fri, 19 Nov 2021 17:09:48 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 19 Nov 2021 17:09:49 GMT">
									<outline text="returnOpml (reallysimple.convertToOpml (theFeed));" created="Fri, 19 Nov 2021 17:10:05 GMT"/>
									<outline text="}" created="Fri, 19 Nov 2021 17:09:51 GMT"/>
									</outline>
								<outline text="});" created="Fri, 19 Nov 2021 17:09:36 GMT"/>
								</outline>
							<outline text="return (true); //we handled it" created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/checkfeednow&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="database.checkOneFeed (theRequest.params.url, httpReturn);"/>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/getupdatedfeed&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="database.getUpdatedFeed (theRequest.params.url, httpReturn);"/>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/getfeedrec&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="database.getDatabaseFeed (theRequest.params.url, httpReturn);"/>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/getfeed&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="database.getFeed (theRequest.params.url, httpReturn);"/>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/getriver&quot;:" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="callWithScreenname (function (screenname) {">
								<outline text="database.getRiver (theRequest.params.url, screenname, httpReturn);"/>
								<outline text="});"/>
								</outline>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/getriverfromonefeed&quot;: //4/13/22 by DW" isComment="true" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="database.getRiverFromOneFeed (theRequest.params.url, httpReturn);"/>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/deleteitem&quot;: //4/22/22 by DW" created="Fri, 19 Nov 2021 15:43:41 GMT">
							<outline text="database.deleteItem (theRequest.params.id, httpReturn);"/>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/updateblogsettings&quot;: //4/28/22 by DW" created="Thu, 28 Apr 2022 13:42:12 GMT">
							<outline text="callWithScreenname (function (screenname) {">
								<outline text="blog.updateBlogSettings (theRequest.params.jsontext, screenname, httpReturn);"/>
								<outline text="});"/>
								</outline>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/newblogpost&quot;: //4/28/22 by DW" created="Thu, 28 Apr 2022 13:42:12 GMT">
							<outline text="callWithScreenname (function (screenname) {">
								<outline text="blog.newPost (theRequest.params.jsontext, screenname, httpReturn);"/>
								<outline text="});"/>
								</outline>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/updateblogpost&quot;: //4/30/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
							<outline text="callWithScreenname (function (screenname) {">
								<outline text="blog.updatePost (theRequest.params.jsontext, screenname, httpReturn);"/>
								<outline text="});"/>
								</outline>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/togglelike&quot;: //5/6/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
							<outline text="callWithScreenname (function (screenname) {">
								<outline text="likes.toggleItemLike (screenname, theRequest.params.id, httpReturn);"/>
								<outline text="});"/>
								</outline>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/getlikes&quot;: //5/6/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
							<outline text="callWithScreenname (function (screenname) {">
								<outline text="likes.getLikes (theRequest.params.id, httpReturn);"/>
								<outline text="});"/>
								</outline>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="case &quot;/getalotoflikes&quot;: //5/6/22 by DW" created="Sat, 30 Apr 2022 16:19:41 GMT">
							<outline text="callWithScreenname (function (screenname) {">
								<outline text="likes.getALotOLikes (theRequest.params.idarray, httpReturn);"/>
								<outline text="});"/>
								</outline>
							<outline text="return (true); " created="Wed, 22 Jan 2014 15:18:30 GMT" pgfnum="36266"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (false); //not consumed"/>
					<outline text="}" created="Sat, 06 Nov 2021 20:25:18 GMT"/>
					</outline>
				<outline text="" created="Tue, 30 Nov 2021 16:45:54 GMT"/>
				<outline text="function addMacroToPagetable (pagetable) {" created="Tue, 14 Dec 2021 16:13:25 GMT">
					<outline text="pagetable.urlForFeeds = config.urlForFeeds;" created="Tue, 14 Dec 2021 16:18:32 GMT"/>
					<outline text="console.log (&quot;addMacroToPagetable: pagetable == &quot; + utils.jsonStringify (pagetable));" isComment="true" created="Sat, 30 Apr 2022 14:09:04 GMT"/>
					<outline text="}" created="Tue, 14 Dec 2021 16:13:29 GMT"/>
					</outline>
				<outline text="function everyMinute () {" created="Sat, 06 Nov 2021 20:26:21 GMT">
					<outline text="database.updateNextFeedIfReady ();" created="Tue, 22 Mar 2022 15:15:25 GMT"/>
					<outline text="}" created="Sat, 06 Nov 2021 20:26:26 GMT"/>
					</outline>
				<outline text="function everySecond () {" created="Sat, 06 Nov 2021 20:26:21 GMT">
					<outline text="var now = new Date ();" created="Thu, 09 Dec 2021 20:28:56 GMT"/>
					<outline text="if (!utils.sameDay (now, whenLastDayRollover)) {" created="Thu, 09 Dec 2021 20:28:32 GMT">
						<outline text="whenLastDayRollover = now;" created="Thu, 09 Dec 2021 20:29:25 GMT"/>
						<outline text="}" created="Thu, 09 Dec 2021 20:28:50 GMT"/>
						</outline>
					<outline text="}" created="Sat, 06 Nov 2021 20:26:26 GMT"/>
					</outline>
				<outline text="" created="Thu, 17 Feb 2022 14:29:36 GMT"/>
				<outline text="notifications.connectWithCloudServers (); //testing -- 4/8/22 by DW" isComment="true" created="Fri, 08 Apr 2022 14:28:29 GMT"/>
				<outline text="" created="Fri, 08 Apr 2022 14:29:05 GMT"/>
				<outline text="var options = {">
					<outline text="everySecond,"/>
					<outline text="everyMinute,"/>
					<outline text="httpRequest: handleHttpRequest, "/>
					<outline text="publishFile: publishFileCallback, //3/18/22 by DW" created="Fri, 18 Mar 2022 14:27:34 GMT"/>
					<outline text="addMacroToPagetable //4/30/22 by DW" created="Tue, 14 Dec 2021 16:13:11 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="daveappserver.start (options, function (appConfig) {">
					<outline text="for (var x in appConfig) {" created="Mon, 29 Nov 2021 15:51:41 GMT">
						<outline text="config [x] = appConfig [x];" created="Mon, 29 Nov 2021 15:51:48 GMT"/>
						<outline text="}" created="Mon, 29 Nov 2021 15:51:53 GMT"/>
						</outline>
					<outline text="blog.start (config, function () {" created="Sat, 30 Apr 2022 14:36:38 GMT">
						<outline text="davesql.start (config.database, function () {">
							<outline text="database.start (config, function () {" created="Sat, 19 Mar 2022 14:53:24 GMT">
								<outline text="database.feedRec (&quot;https://github.com/scripting/tweets.opml.org/raw/main/users/davewiner/rss.xml&quot;, function (err, data) {" isComment="true" created="Sun, 20 Mar 2022 16:35:22 GMT">
									<outline text="});" created="Sun, 20 Mar 2022 16:35:48 GMT"/>
									</outline>
								<outline text="setTimeout (function () { //give the client time to re-establish broken connection" isComment="true">
									<outline text="http://oldschool.scripting.com/cluelessnewbie/rss.xml" isComment="true" created="Fri, 25 Mar 2022 17:12:09 GMT"/>
									<outline text="http://scripting.com/rss.xml" isComment="true" created="Fri, 25 Mar 2022 17:12:09 GMT"/>
									<outline text="database.checkFeedAndItems (&quot;http://scripting.com/rss.xml&quot;, function (err, data) {" created="Sun, 20 Mar 2022 16:35:22 GMT">
										<outline text="});" created="Sun, 20 Mar 2022 16:35:48 GMT"/>
										</outline>
									<outline text="}, 1000);"/>
									</outline>
								<outline text="});" created="Sat, 19 Mar 2022 14:53:34 GMT"/>
								</outline>
							<outline text="});" created="Wed, 14 Jul 2021 13:51:16 GMT"/>
							</outline>
						<outline text="});" created="Sat, 30 Apr 2022 14:36:40 GMT"/>
						</outline>
					<outline text="});" created="Sat, 06 Nov 2021 17:09:03 GMT"/>
					</outline>
				</outline>
			<outline text="" created="Fri, 18 Mar 2022 13:17:32 GMT"/>
			<outline text="readme.md" created="Fri, 18 Feb 2022 17:03:39 GMT">
				<outline text="# littleFeedReader">
					<outline text="A feed reader for testing feed stuff. "/>
					</outline>
				</outline>
			<outline text="" created="Mon, 04 Apr 2022 14:42:41 GMT"/>
			<outline text="settings.opml">
				<outline text="Feed" created="Sun, 08 Jun 2014 15:19:57 GMT" pgfnum="42039">
					<outline text="&lt;p&gt;You can set the title and description for the RSS feed that we maintain for you.&lt;/p&gt;"/>
					<outline text="&lt;%prefs.stringPref (&quot;Title&quot;, &quot;myFeedTitle&quot;, &quot;The &amp;lt;title&gt; element for the feed.&quot;)%&gt;"/>
					<outline text="&lt;%prefs.textAreaPref (&quot;Description&quot;, &quot;myFeedDescription&quot;, &quot;The &amp;lt;description&gt; element for the feed.&quot;, rows:3)%&gt;"/>
					</outline>
				</outline>
			<outline text="misc.js" created="Mon, 04 Apr 2022 14:42:41 GMT">
				<outline text="function myAskDialog (prompt, defaultvalue, placeholder, askcallback, typeparam) {" created="Mon, 04 Apr 2022 14:42:43 GMT">
					<outline text="Changes" isComment="true" created="Mon, 04 Apr 2022 14:48:27 GMT">
						<outline text="4/4/22; 10:55:51 AM by DW" created="Mon, 04 Apr 2022 14:55:50 GMT">
							<outline text="The ask dialog as a closure. Here's the HTML we construct (at start)." created="Mon, 04 Apr 2022 14:55:52 GMT">
								<outline text="&lt;div class=&quot;divAskDialog&quot; style=&quot;left: 50%; width: 570px;&quot;&gt;" isComment="true">
									<outline text="&lt;div id=&quot;idAskDialog&quot; class=&quot;modal hide fade&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-labelledby=&quot;windowTitleLabel&quot; aria-hidden=&quot;true&quot;&gt;">
										<outline text="&lt;div class=&quot;modal-header&quot;&gt;">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;close&quot; data-dismiss=&quot;modal&quot;&gt;&amp;times;&lt;/a&gt;"/>
											<outline text="&lt;h3 id=&quot;idAskDialogPrompt&quot; style=&quot;font-size: 18px;&quot;&gt;&lt;/h3&gt;"/>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;div class=&quot;modal-body&quot;&gt;">
											<outline text="&lt;input class=&quot;xlarge&quot; id=&quot;idAskDialogInput&quot; name=&quot;xlInput&quot; type=&quot;text&quot; style=&quot;font-size: 17px; padding: 3px; height: auto; width: 515px;&quot; /&gt;"/>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;div class=&quot;modal-footer&quot;&gt;">
											<outline text="&lt;a href=&quot;#&quot; class=&quot;btn&quot; onclick=&quot;cancelAskDialog ();&quot; style=&quot;width: 80px; margin-left: 5px;&quot;&gt;Cancel&lt;/a&gt;"/>
											<outline text="&lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot; onclick=&quot;okAskDialog ();&quot; style=&quot;width: 80px; margin-left: 5px;&quot;&gt;OK&lt;/a&gt;"/>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								</outline>
							</outline>
						</outline>
					<outline text="function closeDialog () {" created="Mon, 04 Apr 2022 15:31:40 GMT">
						<outline text="$(theDialog).modal (&quot;hide&quot;); "/>
						<outline text="$(theDialog).on (&quot;hidden.bs.modal&quot;, function () { //code that runs when dialog has finished being hidden" created="Fri, 30 Jul 2021 13:06:21 GMT">
							<outline text="$(theDialogContainer).remove ();" created="Mon, 04 Apr 2022 15:17:26 GMT"/>
							<outline text="});" created="Fri, 30 Jul 2021 13:10:10 GMT"/>
							</outline>
						<outline text="}" created="Mon, 04 Apr 2022 15:31:45 GMT"/>
						</outline>
					<outline text="function cancelDialog () {" created="Mon, 04 Apr 2022 15:14:41 GMT">
						<outline text="if (askcallback !== undefined) {" created="Mon, 04 Apr 2022 15:20:19 GMT">
							<outline text="askcallback (&quot;&quot;, true); " created="Mon, 04 Apr 2022 15:20:30 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 15:20:26 GMT"/>
							</outline>
						<outline text="closeDialog ();"/>
						<outline text="}" created="Mon, 04 Apr 2022 15:14:45 GMT"/>
						</outline>
					<outline text="function okDialog () { //ok button was clicked" created="Mon, 04 Apr 2022 15:28:55 GMT">
						<outline text="if (askcallback !== undefined) {" created="Mon, 04 Apr 2022 15:20:19 GMT">
							<outline text="var val = theInputElement.val ();" created="Mon, 04 Apr 2022 15:30:54 GMT"/>
							<outline text="askcallback (val, false); " created="Mon, 04 Apr 2022 15:20:30 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 15:20:26 GMT"/>
							</outline>
						<outline text="closeDialog ();"/>
						<outline text="}" created="Mon, 04 Apr 2022 15:29:01 GMT"/>
						</outline>
					<outline text="function getCloseIcon () {" created="Mon, 04 Apr 2022 14:48:27 GMT">
						<outline text="var theIcon = $(&quot;&lt;a href=\&quot;#\&quot; class=\&quot;close\&quot; data-dismiss=\&quot;modal\&quot;&gt;&amp;times;&lt;/a&gt;&quot;);" created="Mon, 04 Apr 2022 14:48:41 GMT"/>
						<outline text="$(theIcon).click (cancelDialog);" created="Mon, 04 Apr 2022 15:14:01 GMT"/>
						<outline text="return (theIcon);" created="Mon, 04 Apr 2022 14:49:12 GMT"/>
						<outline text="}" created="Mon, 04 Apr 2022 14:48:32 GMT"/>
						</outline>
					<outline text="function getPrompt () {" created="Mon, 04 Apr 2022 14:48:27 GMT">
						<outline text="var promptText = &quot;&quot;;" created="Mon, 04 Apr 2022 15:07:32 GMT"/>
						<outline text="if (prompt !== undefined) {" created="Mon, 04 Apr 2022 15:07:44 GMT">
							<outline text="promptText = prompt;" created="Mon, 04 Apr 2022 15:07:52 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 15:07:59 GMT"/>
							</outline>
						<outline text="var thePrompt = $(&quot;&lt;h3 style=\&quot;font-size: 18px;\&quot;&gt;&quot; + promptText + &quot;&lt;/h3&gt;&quot;);" created="Mon, 04 Apr 2022 14:48:41 GMT"/>
						<outline text="return (thePrompt);" created="Mon, 04 Apr 2022 14:49:12 GMT"/>
						<outline text="}" created="Mon, 04 Apr 2022 14:48:32 GMT"/>
						</outline>
					<outline text="function getInputElement () {" created="Mon, 04 Apr 2022 14:48:27 GMT">
						<outline text="var valueatt = &quot;&quot;;" created="Mon, 04 Apr 2022 15:05:45 GMT"/>
						<outline text="if (defaultvalue !== undefined) {" created="Mon, 04 Apr 2022 15:01:57 GMT">
							<outline text="valueatt = &quot;value=\&quot;&quot; + defaultvalue + &quot;\&quot;&quot;;" created="Mon, 04 Apr 2022 15:02:27 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 15:02:19 GMT"/>
							</outline>
						<outline text="" created="Mon, 04 Apr 2022 15:12:35 GMT"/>
						<outline text="var placeholderAtt = &quot;&quot;;" created="Mon, 04 Apr 2022 15:12:36 GMT"/>
						<outline text="if (placeholder !== undefined) {" created="Mon, 04 Apr 2022 15:01:57 GMT">
							<outline text="placeholderAtt = &quot;placeholder=\&quot;&quot; + placeholder + &quot;\&quot;&quot;;" created="Mon, 04 Apr 2022 15:02:27 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 15:02:19 GMT"/>
							</outline>
						<outline text="" created="Mon, 04 Apr 2022 16:06:33 GMT"/>
						<outline text="var typeatt = &quot;type=\&quot;text\&quot;&quot;;" created="Mon, 04 Apr 2022 16:07:12 GMT"/>
						<outline text="if (typeparam !== undefined) {" created="Mon, 04 Apr 2022 16:06:33 GMT">
							<outline text="typeatt = &quot;type=\&quot;&quot; + typeparam + &quot;\&quot;&quot;;" created="Mon, 04 Apr 2022 16:06:59 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 16:06:43 GMT"/>
							</outline>
						<outline text="" created="Mon, 04 Apr 2022 15:12:37 GMT"/>
						<outline text="var theElement = $(&quot;&lt;input class=\&quot;xlarge\&quot; &quot; + valueatt + placeholderAtt + typeatt + &quot; name=\&quot;xlInput\&quot; style=\&quot;font-size: 17px; padding: 3px; height: auto; width: 515px;\&quot; /&gt;&quot;);" created="Mon, 04 Apr 2022 14:48:41 GMT"/>
						<outline text="" created="Mon, 04 Apr 2022 15:13:27 GMT"/>
						<outline text="return (theElement);" created="Mon, 04 Apr 2022 14:49:12 GMT"/>
						<outline text="}" created="Mon, 04 Apr 2022 14:48:32 GMT"/>
						</outline>
					<outline text="function getCancelButton () {" created="Mon, 04 Apr 2022 14:48:27 GMT">
						<outline text="var theButton = $(&quot;&lt;a href=\&quot;#\&quot; class=\&quot;btn\&quot; style=\&quot;width: 80px; margin-left: 5px;\&quot;&gt;Cancel&lt;/a&gt;&quot;);" created="Mon, 04 Apr 2022 14:48:41 GMT"/>
						<outline text="$(theButton).click (cancelDialog);" created="Mon, 04 Apr 2022 15:14:01 GMT"/>
						<outline text="return (theButton);" created="Mon, 04 Apr 2022 14:49:12 GMT"/>
						<outline text="}" created="Mon, 04 Apr 2022 14:48:32 GMT"/>
						</outline>
					<outline text="function getOkButton () {" created="Mon, 04 Apr 2022 14:48:27 GMT">
						<outline text="var theButton = $(&quot;&lt;a href=\&quot;#\&quot; class=\&quot;btn btn-primary\&quot; style=\&quot;width: 80px; margin-left: 5px;\&quot;&gt;OK&lt;/a&gt;&quot;);" created="Mon, 04 Apr 2022 14:48:41 GMT"/>
						<outline text="$(theButton).click (okDialog);" created="Mon, 04 Apr 2022 15:14:01 GMT"/>
						<outline text="return (theButton);" created="Mon, 04 Apr 2022 14:49:12 GMT"/>
						<outline text="}" created="Mon, 04 Apr 2022 14:48:32 GMT"/>
						</outline>
					<outline text="" created="Mon, 04 Apr 2022 14:43:50 GMT"/>
					<outline text="var theDialogContainer = $(&quot;&lt;div class=\&quot;divAskDialog\&quot; style=\&quot;left: 50%; width: 570px;\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 04 Apr 2022 14:43:51 GMT"/>
					<outline text="var theDialog = $(&quot;&lt;div class=\&quot;modal hide fade\&quot; tabindex=\&quot;-1\&quot; role=\&quot;dialog\&quot; aria-labelledby=\&quot;windowTitleLabel\&quot; aria-hidden=\&quot;true\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 04 Apr 2022 14:45:39 GMT"/>
					<outline text="" created="Mon, 04 Apr 2022 14:48:06 GMT"/>
					<outline text="var theHeader = $(&quot;&lt;div class=\&quot;modal-header\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 04 Apr 2022 14:47:09 GMT"/>
					<outline text="$(theHeader).append (getCloseIcon ());" created="Mon, 04 Apr 2022 14:49:23 GMT"/>
					<outline text="$(theHeader).append (getPrompt ());" created="Mon, 04 Apr 2022 14:49:23 GMT"/>
					<outline text="$(theDialog).append (theHeader);" created="Mon, 04 Apr 2022 14:43:51 GMT"/>
					<outline text="" created="Mon, 04 Apr 2022 14:50:44 GMT"/>
					<outline text="var theBody = $(&quot;&lt;div class=\&quot;modal-body\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 04 Apr 2022 14:50:45 GMT"/>
					<outline text="var theInputElement = getInputElement (); " created="Mon, 04 Apr 2022 15:30:23 GMT"/>
					<outline text="theBody.append (theInputElement);" created="Mon, 04 Apr 2022 14:51:24 GMT"/>
					<outline text="$(theDialog).append (theBody);" created="Mon, 04 Apr 2022 14:43:51 GMT"/>
					<outline text="" created="Mon, 04 Apr 2022 14:48:16 GMT"/>
					<outline text="var theFooter = $(&quot;&lt;div class=\&quot;modal-footer\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 04 Apr 2022 14:48:03 GMT"/>
					<outline text="$(theFooter).append (getCancelButton ());" created="Mon, 04 Apr 2022 14:43:51 GMT"/>
					<outline text="$(theFooter).append (getOkButton ());" created="Mon, 04 Apr 2022 14:43:51 GMT"/>
					<outline text="$(theDialog).append (theFooter);" created="Mon, 04 Apr 2022 14:43:51 GMT"/>
					<outline text="" created="Mon, 04 Apr 2022 14:56:39 GMT"/>
					<outline text="$(theDialogContainer).append (theDialog);" created="Mon, 04 Apr 2022 14:43:51 GMT"/>
					<outline text="$(&quot;body&quot;).prepend (theDialogContainer);" created="Mon, 04 Apr 2022 14:56:59 GMT"/>
					<outline text="$(theDialog).modal (&quot;show&quot;);"/>
					<outline text="" created="Mon, 04 Apr 2022 15:51:02 GMT"/>
					<outline text="$(theDialog).on (&quot;shown&quot;, function () {">
						<outline text="console.log (&quot;shown event&quot;);" created="Mon, 04 Apr 2022 15:54:41 GMT"/>
						<outline text="theInputElement.focus ();"/>
						<outline text="theInputElement.select ();"/>
						<outline text="});"/>
						</outline>
					<outline text="$(theDialog).on (&quot;keydown&quot;, function (ev) { ">
						<outline text="if (ev.which == 13) {" created="Wed, 09 Jan 2013 14:30:41 GMT" pgfnum="16921">
							<outline text="console.log (&quot;you pressed return&quot;);" created="Mon, 04 Apr 2022 15:54:41 GMT"/>
							<outline text="okDialog ();" created="Wed, 09 Jan 2013 16:03:12 GMT" pgfnum="16941"/>
							<outline text="}" created="Wed, 09 Jan 2013 14:31:27 GMT" pgfnum="16924"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Mon, 04 Apr 2022 14:42:54 GMT"/>
					</outline>
				<outline text="function viewDataDialog (title=&quot;&quot;, theData) {" created="Mon, 28 Mar 2022 15:00:05 GMT">
					<outline text="function afterOpenCallback () {" created="Mon, 28 Mar 2022 15:01:24 GMT">
						<outline text="opInsertObject (&quot;&quot;, theData, down);" created="Mon, 28 Mar 2022 15:09:25 GMT"/>
						<outline text="opGo (up, 1);" created="Mon, 28 Mar 2022 15:21:48 GMT"/>
						<outline text="opDeleteLine ();" created="Mon, 28 Mar 2022 15:21:54 GMT"/>
						<outline text="opExpandEverything ();" created="Mon, 28 Mar 2022 15:22:01 GMT"/>
						<outline text="}" created="Mon, 28 Mar 2022 15:08:12 GMT"/>
						</outline>
					<outline text="const styles = &quot;.divOutlineDialog {width: 45%; left: 50%;}&quot;;"/>
					<outline text="flEnableBackgroundTasks = false;"/>
					<outline text="appPrefs.outlineFontSize = 15;"/>
					<outline text="appPrefs.outlineLineHeight = 22;"/>
					<outline text="outlineDialog (title, initialOpmltext, true, function (flSave, opmltext) {">
						<outline text="flEnableBackgroundTasks = true;"/>
						<outline text="console.log (&quot;editFeedsMenu: flSave == &quot; + flSave + &quot; , opmltext.length == &quot; + opmltext.length);" isComment="true"/>
						<outline text="if (flSave) {">
							<outline text="theFeedMenuOutline = getFeedsMenuStruct (opmltext); //set global" isComment="true" created="Fri, 11 Mar 2022 17:12:23 GMT"/>
							<outline text="buildFeedsMenu (); " isComment="true"/>
							<outline text="uploadFeedsOpml (opmltext);" isComment="true"/>
							<outline text="}"/>
							</outline>
						<outline text="}, afterOpenCallback, undefined, undefined, styles);"/>
						</outline>
					<outline text="}" created="Mon, 28 Mar 2022 15:00:08 GMT"/>
					</outline>
				<outline text="function testMyAskDialog () {" created="Mon, 04 Apr 2022 15:03:32 GMT">
					<outline text="myAskDialog (&quot;What's for dinner?&quot;, &quot;Soup&quot;, &quot;Enter your dinner preference here.&quot;, function (val, flcancel) {" created="Mon, 04 Apr 2022 15:03:51 GMT">
						<outline text="if (flcancel) {" created="Mon, 04 Apr 2022 15:32:36 GMT">
							<outline text="console.log (&quot;cancelled&quot;);" created="Mon, 04 Apr 2022 15:32:39 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 15:32:45 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 04 Apr 2022 15:32:47 GMT">
							<outline text="console.log (val);" created="Mon, 04 Apr 2022 15:32:39 GMT"/>
							<outline text="}" created="Mon, 04 Apr 2022 15:32:49 GMT"/>
							</outline>
						<outline text="});" created="Mon, 04 Apr 2022 15:04:29 GMT"/>
						</outline>
					<outline text="}" created="Mon, 04 Apr 2022 15:03:44 GMT"/>
					</outline>
				</outline>
			<outline text="editbox.css" created="Thu, 14 Apr 2022 14:29:56 GMT">
				<outline text=".divEditorSection {">
					<outline text="width: 530px;"/>
					<outline text="margin-left: auto;" created="Mon, 25 Apr 2022 16:00:53 GMT"/>
					<outline text="margin-right: auto;" created="Mon, 25 Apr 2022 16:00:57 GMT"/>
					<outline text="margin-bottom: 20px;"/>
					<outline text="opacity: &lt;%inactiveEditorOpacity%&gt;;" created="Wed, 27 Apr 2022 16:10:54 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divBodyEditorContainer {">
					<outline text="padding-left: 6px;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".spLeadingQuestion {">
					<outline text="font-size: 18px;"/>
					<outline text="font-weight: bold;"/>
					<outline text="line-height: 130%;"/>
					<outline text="cursor: pointer;"/>
					<outline text="color: #777777;"/>
					<outline text="opacity: &lt;%inactiveEditorOpacity%&gt;;" created="Wed, 27 Apr 2022 16:04:40 GMT"/>
					<outline text="visibility: hidden;" isComment="true" created="Wed, 27 Apr 2022 15:43:28 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".spSaveStatus {" created="Wed, 27 Apr 2022 15:30:35 GMT">
					<outline text="font-size: 12px;"/>
					<outline text="padding-top: 4px;" created="Wed, 27 Apr 2022 15:38:39 GMT"/>
					<outline text="padding-right: 1px;" created="Wed, 27 Apr 2022 15:38:47 GMT"/>
					<outline text="float: right;" created="Wed, 27 Apr 2022 15:30:43 GMT"/>
					<outline text="color: black;" created="Fri, 29 Apr 2022 13:45:45 GMT"/>
					<outline text="opacity: &lt;%inactiveEditorOpacity%&gt;;" created="Wed, 27 Apr 2022 16:04:40 GMT"/>
					<outline text="visibility: hidden;" isComment="true" created="Wed, 27 Apr 2022 16:00:45 GMT"/>
					<outline text="}" created="Wed, 27 Apr 2022 15:30:47 GMT"/>
					</outline>
				<outline text=".divBodyEditor {">
					<outline text="border: 1px solid silver;"/>
					<outline text="width: 548px;" isComment="true"/>
					<outline text="padding-left: 6px;"/>
					<outline text="padding-right: 6px;"/>
					<outline text="font-family: &quot;Ubuntu&quot;;"/>
					<outline text="font-size: 15px;"/>
					<outline text="letter-spacing: 0.01rem;"/>
					<outline text="font-weight: 400;"/>
					<outline text="font-style: normal;"/>
					<outline text="line-height: 1.4;"/>
					<outline text="margin-top: 40px;" isComment="true"/>
					<outline text="min-height: 5em;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divCharCount {">
					<outline text="color: darkgray;"/>
					<outline text="font-weight: bold;"/>
					<outline text="font-size: 18px;"/>
					<outline text="margin-top: 5px;"/>
					<outline text="min-height: 40px;"/>
					<outline text="display: none;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".divStuffThatsHiddenWhenNotActive {">
					<outline text="4/20/19 by DW" isComment="true">
						<outline text="previously used the display property to control whether or not the hidden stuff is visible.">
							<outline text="today I switched to using visibility, so there isn't a jarring change in the display of the page. "/>
							<outline text="it's more subtle. maybe we can use this space for something else when you're not editing a message."/>
							</outline>
						</outline>
					<outline text="visibility: hidden;"/>
					<outline text="display: none;" isComment="true"/>
					<outline text="margin-bottom: 10px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divStuffThatsHiddenWhenNotActive .divButtons {" created="Tue, 26 Apr 2022 17:43:33 GMT">
					<outline text="float: right;" created="Tue, 26 Apr 2022 17:43:50 GMT"/>
					<outline text="}" created="Tue, 26 Apr 2022 17:43:47 GMT"/>
					</outline>
				<outline text=":focus, :visited:focus {">
					<outline text="border-color: rgba(82, 168, 236, 0.8);"/>
					<outline text="outline: 0;"/>
					<outline text="outline: thin dotted \9;"/>
					<outline text="box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(82, 168, 236, 0.6);"/>
					<outline text=""/>
					<outline text="background-color: white;"/>
					<outline text=""/>
					<outline text="}"/>
					</outline>
				<outline text=".emoji {">
					<outline text="width: 1.4em;"/>
					<outline text="height: 1.4em;"/>
					<outline text="display: inline-block;"/>
					<outline text="margin-bottom: 0;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPostButton {">
					<outline text="margin-top: 5px;"/>
					<outline text="float: right;"/>
					<outline text="display: none;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".btnPost {">
					<outline text="width: 95px;"/>
					<outline text="margin-left: 5px;" created="Sat, 30 Apr 2022 15:40:51 GMT"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="editbox.js" created="Thu, 14 Apr 2022 14:29:46 GMT">
				<outline text="function initEditBox (initialText=&quot;&quot;, postCallback, updateCallback) {">
					<outline text="Changes" isComment="true" created="Mon, 25 Apr 2022 20:57:32 GMT">
						<outline text="4/30/22; 11:30:10 AM by DW" created="Sat, 30 Apr 2022 15:30:10 GMT">
							<outline text="Implement editing. If we're editing, flEditing is true and feedItem contains all the info we have about the item." created="Sat, 30 Apr 2022 15:30:11 GMT"/>
							<outline text="New callback for updating: updateCallback." created="Sat, 30 Apr 2022 16:11:01 GMT"/>
							</outline>
						<outline text="4/29/22; 9:11:45 AM by DW" created="Fri, 29 Apr 2022 13:11:45 GMT">
							<outline text="New parameter postCallback. It's called when you click the post button." created="Fri, 29 Apr 2022 13:11:46 GMT"/>
							</outline>
						<outline text="4/25/22; 4:57:38 PM by DW" created="Mon, 25 Apr 2022 20:57:36 GMT">
							<outline text="Build the edit box as a closure. " created="Mon, 25 Apr 2022 20:57:39 GMT"/>
							<outline text="&lt;div class=&quot;divEditorSection&quot; id=&quot;idEditorSection&quot; style=&quot;display: none;&quot;&gt;" isComment="true">
								<outline text="&lt;div class=&quot;divAreaAboveTextBox&quot; id=&quot;idAreaAboveTextBox&quot;&gt;">
									<outline text="&lt;span class=&quot;spLeadingQuestion&quot; id=&quot;idLeadingQuestion&quot;&gt;">
										<outline text="&lt;/span&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divBodyEditorContainer&quot;&gt;">
									<outline text="&lt;div class=&quot;divBodyEditor&quot; id=&quot;idBodyEditor&quot;&gt;">
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;divStuffThatsHiddenWhenNotActive&quot; id=&quot;idStuffThatsHiddenWhenNotActive&quot;&gt;">
									<outline text="&lt;div class=&quot;divPostButton&quot;&gt;">
										<outline text="&lt;button id=&quot;idCancelButton&quot; class=&quot;btn btnPost&quot; type=&quot;button&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;i class=&quot;fa fa-times&quot;&gt;&lt;/i&gt; Cancel&lt;/button&gt;"/>
										<outline text="&lt;button id=&quot;idPostButton&quot; class=&quot;btn btnPost&quot; type=&quot;button&quot; style=&quot;visibility: hidden;&quot;&gt;&lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt; Post&lt;/button&gt;"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;divCharCount&quot; id=&quot;idCharCount&quot;&gt;">
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							</outline>
						</outline>
					<outline text="var whenLastKeystroke = new Date (0);" created="Wed, 27 Apr 2022 14:02:51 GMT"/>
					<outline text="var flEditing = false, feedItem = undefined;" created="Sat, 30 Apr 2022 15:29:52 GMT"/>
					<outline text="var theEditor, divEditorSection, divBodyEditor, spLeadingQuestion, divStuffThatsHiddenWhenNotActive, divButtons, divCharCount, spSaveStatus;" created="Tue, 26 Apr 2022 15:30:07 GMT"/>
					<outline text="var markdowntext = &quot;&quot;;" created="Thu, 05 May 2022 14:34:03 GMT"/>
					<outline text="" created="Sat, 30 Apr 2022 15:29:53 GMT"/>
					<outline text="function fixMediumEditorQuirks (theText) {" created="Tue, 03 May 2022 15:21:45 GMT">
						<outline text="Changes" isComment="true" created="Tue, 03 May 2022 15:22:00 GMT">
							<outline text="5/3/22; 11:53:11 AM by DW" created="Tue, 03 May 2022 15:53:11 GMT">
								<outline text="Changed my mind, we're doing this where we output the RSS feed." created="Tue, 03 May 2022 15:53:12 GMT"/>
								</outline>
							<outline text="5/3/22; 11:22:02 AM by DW" created="Tue, 03 May 2022 15:22:01 GMT">
								<outline text="if there's only one paragraph get rid of the &lt;p&gt; and &lt;/p&gt;." created="Tue, 03 May 2022 15:22:03 GMT"/>
								</outline>
							</outline>
						<outline text="var splits = theText.split (&quot;&lt;p&gt;&quot;);" isComment="true" created="Tue, 03 May 2022 15:26:58 GMT"/>
						<outline text="if (splits.length == 2) {" isComment="true" created="Tue, 03 May 2022 15:30:37 GMT">
							<outline text="if (beginsWith (theText, &quot;&lt;p&gt;&quot;) &amp;&amp; endsWith (theText, &quot;&lt;/p&gt;&quot;)) {" created="Tue, 03 May 2022 15:22:46 GMT">
								<outline text="theText = stringDelete (theText, 1, 3);" created="Tue, 03 May 2022 15:31:41 GMT"/>
								<outline text="theText = stringMid (theText, 1, theText.length - 4);" created="Tue, 03 May 2022 15:31:41 GMT"/>
								<outline text="}" created="Tue, 03 May 2022 15:23:56 GMT"/>
								</outline>
							<outline text="}" created="Tue, 03 May 2022 15:30:45 GMT"/>
							</outline>
						<outline text="return (theText);" created="Tue, 03 May 2022 15:33:18 GMT"/>
						<outline text="}" created="Tue, 03 May 2022 15:21:54 GMT"/>
						</outline>
					<outline text="function getMainEditorText (flStripMarkup=true) {">
						<outline text="var s = $(&quot;.divBodyEditor&quot;).html ();"/>
						<outline text="if (flStripMarkup) {">
							<outline text="s = stripMarkup (s);"/>
							<outline text="}"/>
							</outline>
						<outline text="s = replaceAll (s, &quot;&amp;nbsp;&quot;, &quot; &quot;); //sometimes medium-editor appends a &amp;nbsp; at the end"/>
						<outline text="return (s);"/>
						<outline text="}"/>
						</outline>
					<outline text="function getMainEditorTextLength (flStripMarkup=true) {">
						<outline text="return (getMainEditorText (flStripMarkup).length);"/>
						<outline text="}"/>
						</outline>
					<outline text="function updateCharCount () {">
						<outline text="var ct = getMainEditorTextLength ();"/>
						<outline text="console.log (&quot;updateCharCount: ct == &quot; + ct);" isComment="true"/>
						<outline text="if (appPrefs.flSendHashTagToTwitter) {" isComment="true">
							<outline text="ct += getHashTag ().length"/>
							<outline text="}"/>
							</outline>
						<outline text="if (appPrefs.flEchoPostsToTwitter) {" isComment="true">
							<outline text="if (ct &gt; chatOptions.maxTweetLength) {">
								<outline text="ct = &quot;&lt;span class=\&quot;spRedCharCount\&quot;&gt;&quot; + ct + &quot;&lt;/span&gt;&quot;;"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="$(divCharCount).text (ct.toString ());"/>
						<outline text="}"/>
						</outline>
					<outline text="function setMainEditorText (theText) {" created="Fri, 29 Apr 2022 13:24:12 GMT">
						<outline text="$(divBodyEditor).html (theText);" created="Fri, 29 Apr 2022 13:24:34 GMT"/>
						<outline text="appPrefs.savedEditorText = theText;"/>
						<outline text="prefsChanged ();" created="Fri, 29 Apr 2022 13:31:51 GMT"/>
						<outline text="updateCharCount ();"/>
						<outline text="}" created="Fri, 29 Apr 2022 13:24:22 GMT"/>
						</outline>
					<outline text="function updateCancelButtonVisibility () {" created="Sat, 30 Apr 2022 15:33:10 GMT">
						<outline text="$(&quot;#idCancelButton&quot;).css (&quot;display&quot;, (flEditing) ? &quot;inline-block&quot; : &quot;none&quot;); " created="Wed, 27 Apr 2022 15:54:58 GMT"/>
						<outline text="}" created="Sat, 30 Apr 2022 15:33:23 GMT"/>
						</outline>
					<outline text="function updatePostButtonText () {" created="Sat, 30 Apr 2022 15:33:10 GMT">
						<outline text="var theHtml = &quot;&lt;i class=\&quot;fa fa-check\&quot;&gt;&lt;/i&gt; &quot; + ((flEditing) ? &quot;Update&quot; : &quot;Post&quot;);" created="Sat, 30 Apr 2022 15:44:00 GMT"/>
						<outline text="$(&quot;#idPostButton&quot;).html (theHtml); " created="Wed, 27 Apr 2022 15:54:58 GMT"/>
						<outline text="}" created="Sat, 30 Apr 2022 15:33:23 GMT"/>
						</outline>
					<outline text="function setupEditor () {" created="Tue, 26 Apr 2022 15:34:08 GMT">
						<outline text="divEditorSection = $(&quot;&lt;div class=\&quot;divEditorSection\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 25 Apr 2022 20:57:53 GMT"/>
						<outline text="" created="Tue, 26 Apr 2022 17:46:31 GMT"/>
						<outline text="var divAreaAboveTextBox = $(&quot;&lt;div class=\&quot;divAreaAboveTextBox\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 25 Apr 2022 20:57:54 GMT"/>
						<outline text="spLeadingQuestion = $(&quot;&lt;span class=\&quot;spLeadingQuestion\&quot;&gt;&lt;/span&gt;&quot;);" created="Mon, 25 Apr 2022 20:59:38 GMT"/>
						<outline text="spSaveStatus = $(&quot;&lt;span class=\&quot;spSaveStatus\&quot;&gt;SAVED&lt;/span&gt;&quot;);" created="Mon, 25 Apr 2022 20:59:38 GMT"/>
						<outline text="" created="Tue, 26 Apr 2022 17:46:26 GMT"/>
						<outline text="var divBodyEditorContainer = $(&quot;&lt;div class=\&quot;divBodyEditorContainer\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 25 Apr 2022 20:57:54 GMT"/>
						<outline text="divBodyEditor = $(&quot;&lt;div class=\&quot;divBodyEditor\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 25 Apr 2022 20:57:54 GMT"/>
						<outline text="" created="Tue, 26 Apr 2022 17:18:47 GMT"/>
						<outline text="divStuffThatsHiddenWhenNotActive = $(&quot;&lt;div class=\&quot;divStuffThatsHiddenWhenNotActive\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 25 Apr 2022 20:57:54 GMT"/>
						<outline text="divCharCount = $(&quot;&lt;div class=\&quot;divCharCount\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 25 Apr 2022 20:57:54 GMT"/>
						<outline text="divButtons = $(&quot;&lt;div class=\&quot;divButtons\&quot;&gt;&lt;/div&gt;&quot;);" created="Mon, 25 Apr 2022 20:57:54 GMT"/>
						<outline text="divButtons.append ($(&quot;&lt;button id=\&quot;idCancelButton\&quot; class=\&quot;btn btnPost\&quot; type=\&quot;button\&quot;&gt;&lt;i class=\&quot;fa fa-times\&quot;&gt;&lt;/i&gt; Cancel&lt;/button&gt;&quot;));" created="Tue, 26 Apr 2022 17:18:47 GMT"/>
						<outline text="divButtons.append ($(&quot;&lt;button id=\&quot;idPostButton\&quot; class=\&quot;btn btnPost\&quot; type=\&quot;button\&quot;&gt;&lt;i class=\&quot;fa fa-check\&quot;&gt;&lt;/i&gt; Post&lt;/button&gt;&quot;));" created="Tue, 26 Apr 2022 17:18:47 GMT"/>
						<outline text="" created="Tue, 26 Apr 2022 17:18:48 GMT"/>
						<outline text="divEditorSection.append (divAreaAboveTextBox);" created="Mon, 25 Apr 2022 21:02:23 GMT"/>
						<outline text="divEditorSection.append (divBodyEditorContainer);" created="Mon, 25 Apr 2022 21:02:23 GMT"/>
						<outline text="divEditorSection.append (divStuffThatsHiddenWhenNotActive);" created="Mon, 25 Apr 2022 21:02:23 GMT"/>
						<outline text="divAreaAboveTextBox.append (spSaveStatus);" created="Mon, 25 Apr 2022 21:02:48 GMT"/>
						<outline text="divAreaAboveTextBox.append (spLeadingQuestion);" created="Mon, 25 Apr 2022 21:02:48 GMT"/>
						<outline text="divBodyEditorContainer.append (divBodyEditor);" created="Mon, 25 Apr 2022 21:04:41 GMT"/>
						<outline text="divStuffThatsHiddenWhenNotActive.append (divButtons);" created="Mon, 25 Apr 2022 20:57:32 GMT"/>
						<outline text="divStuffThatsHiddenWhenNotActive.append (divCharCount);" created="Mon, 25 Apr 2022 20:57:32 GMT"/>
						<outline text="" created="Tue, 26 Apr 2022 17:46:45 GMT"/>
						<outline text="console.log (&quot;setupEditor: initialText == &quot; + initialText);" created="Wed, 27 Apr 2022 14:17:44 GMT"/>
						<outline text="" created="Wed, 27 Apr 2022 14:19:14 GMT"/>
						<outline text="setMainEditorText (initialText);"/>
						<outline text="$(&quot;.divPageBody&quot;).prepend (divEditorSection);" created="Mon, 25 Apr 2022 21:08:33 GMT"/>
						<outline text="theEditor = new MediumEditor (&quot;.divBodyEditor&quot;, {">
							<outline text="placeholder: {">
								<outline text="text: &quot; &quot; + appConsts.editorPlaceholderText"/>
								<outline text="},"/>
								</outline>
							<outline text="toolbar: {">
								<outline text="buttons: appConsts.defaultEditorButtons,"/>
								<outline text="},"/>
								</outline>
							<outline text="buttonLabels: &quot;fontawesome&quot;,"/>
							<outline text="imageDragging: false, //10/18/16 by DW"/>
							<outline text="autoLink: true,"/>
							<outline text="extensions: {">
								<outline text="markdown: new MeMarkdown (function (md) {">
									<outline text="markdowntext = md; " created="Thu, 05 May 2022 14:34:29 GMT"/>
									<outline text="console.log (&quot;markdown version: &quot; + md);" isComment="true"/>
									<outline text="})"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="spLeadingQuestion.text (appConsts.leadingQuestion);" created="Tue, 26 Apr 2022 15:30:08 GMT"/>
						<outline text="updateCharCount ();" created="Tue, 26 Apr 2022 17:48:26 GMT"/>
						<outline text="updateCancelButtonVisibility (); //only visible when editing an existing post" created="Sat, 30 Apr 2022 15:35:11 GMT"/>
						<outline text="$(&quot;#idCancelButton&quot;).css (&quot;display&quot;, &quot;none&quot;); //only visible when editing an existing post" isComment="true" created="Wed, 27 Apr 2022 15:54:58 GMT"/>
						<outline text="}" created="Tue, 26 Apr 2022 15:34:16 GMT"/>
						</outline>
					<outline text="function postTheText () {" created="Fri, 29 Apr 2022 13:28:15 GMT">
						<outline text="if (postCallback !== undefined) {" created="Fri, 29 Apr 2022 13:12:30 GMT">
							<outline text="console.log (&quot;postTheText: markdowntext == &quot; + markdowntext);" created="Mon, 02 May 2022 19:45:24 GMT"/>
							<outline text="if (markdowntext.length == 0) {" created="Fri, 29 Apr 2022 13:47:08 GMT">
								<outline text="speakerBeep ();" created="Fri, 29 Apr 2022 13:47:32 GMT"/>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:21 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 29 Apr 2022 13:47:22 GMT">
								<outline text="postCallback (markdowntext, function (err, data) {" created="Fri, 29 Apr 2022 13:12:38 GMT">
									<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
										<outline text="alertDialog (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
										<outline text="console.log (jsonStringify (data)); "/>
										<outline text="setMainEditorText (&quot;&quot;);"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
										</outline>
									<outline text="});" created="Fri, 29 Apr 2022 13:29:15 GMT"/>
									</outline>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:24 GMT"/>
								</outline>
							<outline text="}" created="Fri, 29 Apr 2022 13:12:36 GMT"/>
							</outline>
						<outline text="}" created="Fri, 29 Apr 2022 13:28:27 GMT"/>
						</outline>
					<outline text="function postTheText () {" isComment="true" created="Fri, 29 Apr 2022 13:28:15 GMT">
						<outline text="if (postCallback !== undefined) {" created="Fri, 29 Apr 2022 13:12:30 GMT">
							<outline text="var theText = getMainEditorText (false); //don't strip markup" created="Fri, 29 Apr 2022 13:13:06 GMT"/>
							<outline text="theText = fixMediumEditorQuirks (theText);" created="Tue, 03 May 2022 15:20:56 GMT"/>
							<outline text="console.log (&quot;postTheText: theText == &quot; + theText);" created="Mon, 02 May 2022 19:45:24 GMT"/>
							<outline text="if (theText.length == 0) {" created="Fri, 29 Apr 2022 13:47:08 GMT">
								<outline text="speakerBeep ();" created="Fri, 29 Apr 2022 13:47:32 GMT"/>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:21 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 29 Apr 2022 13:47:22 GMT">
								<outline text="postCallback (theText, function (err, data) {" created="Fri, 29 Apr 2022 13:12:38 GMT">
									<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
										<outline text="alertDialog (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
										<outline text="console.log (jsonStringify (data)); "/>
										<outline text="setMainEditorText (&quot;&quot;);"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
										</outline>
									<outline text="});" created="Fri, 29 Apr 2022 13:29:15 GMT"/>
									</outline>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:24 GMT"/>
								</outline>
							<outline text="}" created="Fri, 29 Apr 2022 13:12:36 GMT"/>
							</outline>
						<outline text="}" created="Fri, 29 Apr 2022 13:28:27 GMT"/>
						</outline>
					<outline text="function updatePost () {" created="Sat, 30 Apr 2022 16:11:26 GMT">
						<outline text="if (updateCallback !== undefined) {" created="Sat, 30 Apr 2022 16:11:55 GMT">
							<outline text="if (markdowntext.length == 0) {" created="Fri, 29 Apr 2022 13:47:08 GMT">
								<outline text="speakerBeep ();" created="Fri, 29 Apr 2022 13:47:32 GMT"/>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:21 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 29 Apr 2022 13:47:22 GMT">
								<outline text="feedItem.markdowntext = markdowntext;" created="Sat, 30 Apr 2022 16:12:16 GMT"/>
								<outline text="updateCallback (feedItem, function (err, data) {" created="Fri, 29 Apr 2022 13:12:38 GMT">
									<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
										<outline text="alertDialog (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
										<outline text="console.log (jsonStringify (data)); "/>
										<outline text="setMainEditorText (&quot;&quot;);"/>
										<outline text="flEditing = false;" created="Sat, 30 Apr 2022 16:07:05 GMT"/>
										<outline text="updateCancelButtonVisibility ();" created="Wed, 27 Apr 2022 15:54:58 GMT"/>
										<outline text="updatePostButtonText ();" created="Sat, 30 Apr 2022 15:42:29 GMT"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
										</outline>
									<outline text="});" created="Fri, 29 Apr 2022 13:29:15 GMT"/>
									</outline>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:24 GMT"/>
								</outline>
							<outline text="}" created="Sat, 30 Apr 2022 16:12:02 GMT"/>
							</outline>
						<outline text="}" created="Sat, 30 Apr 2022 16:11:32 GMT"/>
						</outline>
					<outline text="function updatePost () {" isComment="true" created="Sat, 30 Apr 2022 16:11:26 GMT">
						<outline text="if (updateCallback !== undefined) {" created="Sat, 30 Apr 2022 16:11:55 GMT">
							<outline text="var theText = getMainEditorText (false); //don't strip markup" created="Fri, 29 Apr 2022 13:13:06 GMT"/>
							<outline text="theText = fixMediumEditorQuirks (theText);" created="Tue, 03 May 2022 15:20:56 GMT"/>
							<outline text="if (theText.length == 0) {" created="Fri, 29 Apr 2022 13:47:08 GMT">
								<outline text="speakerBeep ();" created="Fri, 29 Apr 2022 13:47:32 GMT"/>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:21 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 29 Apr 2022 13:47:22 GMT">
								<outline text="feedItem.description = theText;" created="Sat, 30 Apr 2022 16:12:16 GMT"/>
								<outline text="updateCallback (feedItem, function (err, data) {" created="Fri, 29 Apr 2022 13:12:38 GMT">
									<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
										<outline text="alertDialog (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
										<outline text="console.log (jsonStringify (data)); "/>
										<outline text="setMainEditorText (&quot;&quot;);"/>
										<outline text="flEditing = false;" created="Sat, 30 Apr 2022 16:07:05 GMT"/>
										<outline text="updateCancelButtonVisibility ();" created="Wed, 27 Apr 2022 15:54:58 GMT"/>
										<outline text="updatePostButtonText ();" created="Sat, 30 Apr 2022 15:42:29 GMT"/>
										<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
										</outline>
									<outline text="});" created="Fri, 29 Apr 2022 13:29:15 GMT"/>
									</outline>
								<outline text="}" created="Fri, 29 Apr 2022 13:47:24 GMT"/>
								</outline>
							<outline text="}" created="Sat, 30 Apr 2022 16:12:02 GMT"/>
							</outline>
						<outline text="}" created="Sat, 30 Apr 2022 16:11:32 GMT"/>
						</outline>
					<outline text="function everySecond () {" created="Wed, 27 Apr 2022 14:01:54 GMT">
						<outline text="if (secondsSince (whenLastKeystroke) &gt;= 1) {" created="Wed, 27 Apr 2022 14:03:56 GMT">
							<outline text="var s = getMainEditorText (false);" created="Wed, 27 Apr 2022 14:27:23 GMT"/>
							<outline text="if (appPrefs.savedEditorText != s) {" created="Wed, 27 Apr 2022 14:27:23 GMT">
								<outline text="appPrefs.savedEditorText = getMainEditorText (false);" created="Wed, 27 Apr 2022 14:02:33 GMT"/>
								<outline text="console.log (&quot;everySecond: appPrefs.savedEditorText == &quot; + appPrefs.savedEditorText);" created="Wed, 27 Apr 2022 14:17:44 GMT"/>
								<outline text="$(spSaveStatus).css (&quot;color&quot;, &quot;black&quot;);"/>
								<outline text="prefsChanged ();" created="Wed, 27 Apr 2022 14:03:29 GMT"/>
								<outline text="}" created="Wed, 27 Apr 2022 14:27:38 GMT"/>
								</outline>
							<outline text="}" created="Wed, 27 Apr 2022 14:04:09 GMT"/>
							</outline>
						<outline text="}" created="Wed, 27 Apr 2022 14:02:00 GMT"/>
						</outline>
					<outline text="setupEditor ();"/>
					<outline text="$(divBodyEditor).focus (function (ev) {" created="Tue, 26 Apr 2022 16:21:01 GMT">
						<outline text="console.log (&quot;focus&quot;);" created="Fri, 29 Apr 2022 13:51:34 GMT"/>
						<outline text="divStuffThatsHiddenWhenNotActive.css (&quot;visibility&quot;, &quot;visible&quot;);"/>
						<outline text="if (flEditing) {" created="Sat, 30 Apr 2022 15:31:58 GMT">
							<outline text="updateCancelButtonVisibility ();" created="Wed, 27 Apr 2022 15:54:58 GMT"/>
							<outline text="updatePostButtonText ();" created="Sat, 30 Apr 2022 15:42:29 GMT"/>
							<outline text="}" created="Sat, 30 Apr 2022 15:32:06 GMT"/>
							</outline>
						<outline text="});" created="Tue, 26 Apr 2022 16:21:15 GMT"/>
						</outline>
					<outline text="$(divBodyEditor).blur (function (ev) {" created="Tue, 26 Apr 2022 16:21:01 GMT">
						<outline text="if ($(&quot;#medium-editor-toolbar-1&quot;).css (&quot;visibility&quot;) == &quot;hidden&quot;) { //don't hide controls if the toolbar got the click -- 1/12/18 by DW">
							<outline text="console.log (&quot;blur&quot;);" created="Fri, 29 Apr 2022 13:51:34 GMT"/>
							<outline text="" created="Fri, 29 Apr 2022 13:51:51 GMT"/>
							<outline text="$(divEditorSection).css (&quot;opacity&quot;, &quot;&lt;%inactiveEditorOpacity%&gt;&quot;);" isComment="true" created="Wed, 27 Apr 2022 16:07:36 GMT"/>
							<outline text="" isComment="true" created="Wed, 27 Apr 2022 16:07:52 GMT"/>
							<outline text="$(spLeadingQuestion).css (&quot;opacity&quot;, &quot;&lt;%inactiveEditorOpacity%&gt;&quot;);" isComment="true" created="Wed, 27 Apr 2022 16:00:04 GMT"/>
							<outline text="$(spSaveStatus).css (&quot;opacity&quot;, &quot;&lt;%inactiveEditorOpacity%&gt;&quot;);" isComment="true" created="Wed, 27 Apr 2022 16:00:04 GMT"/>
							<outline text="divStuffThatsHiddenWhenNotActive.css (&quot;visibility&quot;, &quot;hidden&quot;);"/>
							<outline text="$(divButtons).css (&quot;visibility&quot;, &quot;hidden&quot;);" isComment="true"/>
							<outline text="}"/>
							</outline>
						<outline text="});" created="Tue, 26 Apr 2022 16:21:15 GMT"/>
						</outline>
					<outline text="$(&quot;.divBodyEditor&quot;).keydown (function (ev) {">
						<outline text="if (appPrefs.flPostOnReturnKey) {" created="Fri, 29 Apr 2022 13:43:00 GMT">
							<outline text="if (event.which == 13) {" created="Fri, 29 Apr 2022 13:43:09 GMT">
								<outline text="console.log (&quot;Posting because you pressed Return.&quot;);" created="Tue, 26 Apr 2022 21:57:29 GMT"/>
								<outline text="postTheText ();"/>
								<outline text="ev.stopPropagation ();"/>
								<outline text="return;" created="Fri, 29 Apr 2022 13:44:10 GMT"/>
								<outline text="}" created="Fri, 29 Apr 2022 13:43:09 GMT"/>
								</outline>
							<outline text="}" created="Fri, 29 Apr 2022 13:43:03 GMT"/>
							</outline>
						<outline text="whenLastKeystroke = new Date ();" created="Wed, 27 Apr 2022 14:04:53 GMT"/>
						<outline text="$(spSaveStatus).css (&quot;color&quot;, &quot;silver&quot;);"/>
						<outline text="});"/>
						</outline>
					<outline text="$(&quot;.divBodyEditor&quot;).keyup (function (event) {">
						<outline text="if (event.which == 27) { //escape key" isComment="true">
							<outline text="console.log (&quot;You pressed the ESC key in an editing text area.&quot;);"/>
							<outline text="cancelButtonClick ();" isComment="true"/>
							<outline text="if (chatGlobals.flMsgBeingEdited) {">
								<outline text="cancelEdit ();"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="hideEditControls ();"/>
								<outline text="}"/>
								</outline>
							<outline text="$(&quot;#idBodyEditor&quot;).blur (); //take the focus off the editor"/>
							<outline text="event.stopPropagation ();" isComment="true"/>
							<outline text="return;" isComment="true"/>
							<outline text="}"/>
							</outline>
						<outline text="updateCharCount ();"/>
						<outline text="});"/>
						</outline>
					<outline text="$(&quot;#idPostButton&quot;).mousedown (function (ev) {" created="Fri, 29 Apr 2022 02:44:08 GMT">
						<outline text="console.log (&quot;Post button click.&quot;);" created="Fri, 29 Apr 2022 02:44:41 GMT"/>
						<outline text="if (flEditing) {" created="Sat, 30 Apr 2022 16:15:13 GMT">
							<outline text="updatePost ();" created="Sat, 30 Apr 2022 16:15:39 GMT"/>
							<outline text="}" created="Sat, 30 Apr 2022 16:15:23 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 30 Apr 2022 16:15:23 GMT">
							<outline text="postTheText ();" created="Fri, 29 Apr 2022 13:28:15 GMT"/>
							<outline text="}" created="Sat, 30 Apr 2022 16:15:26 GMT"/>
							</outline>
						<outline text="});" created="Fri, 29 Apr 2022 02:44:50 GMT"/>
						</outline>
					<outline text="$(&quot;#idCancelButton&quot;).mousedown (function (ev) {" created="Fri, 29 Apr 2022 02:44:08 GMT">
						<outline text="console.log (&quot;Cancel button click.&quot;);" created="Fri, 29 Apr 2022 02:44:41 GMT"/>
						<outline text="setMainEditorText (&quot;&quot;);"/>
						<outline text="flEditing = false;" created="Sat, 30 Apr 2022 16:07:05 GMT"/>
						<outline text="updateCancelButtonVisibility ();" created="Wed, 27 Apr 2022 15:54:58 GMT"/>
						<outline text="updatePostButtonText ();" created="Sat, 30 Apr 2022 15:42:29 GMT"/>
						<outline text="});" created="Fri, 29 Apr 2022 02:44:50 GMT"/>
						</outline>
					<outline text="$(&quot;.divBodyEditor&quot;).on (&quot;editFeedItem&quot;, function (ev, options) {" created="Wed, 14 Apr 2021 19:50:46 GMT">
						<outline text="console.log (&quot;editFeedItem triggered: options.feedItem == &quot; + jsonStringify (options.feedItem));" created="Wed, 20 Apr 2022 17:05:01 GMT"/>
						<outline text="flEditing = true;" created="Sat, 30 Apr 2022 15:30:49 GMT"/>
						<outline text="feedItem = options.feedItem;" created="Sat, 30 Apr 2022 15:30:58 GMT"/>
						<outline text="setMainEditorText (feedItem.description);" created="Sat, 30 Apr 2022 15:27:44 GMT"/>
						<outline text="$(&quot;.divBodyEditor&quot;).focus ();" created="Sat, 30 Apr 2022 15:29:14 GMT"/>
						<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
						</outline>
					<outline text="self.setInterval (everySecond, 1000);" created="Wed, 27 Apr 2022 13:59:17 GMT"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="getfeedinfo.js" created="Thu, 31 Mar 2022 15:14:48 GMT">
				<outline text="Changes" isComment="true" created="Fri, 01 Apr 2022 13:50:20 GMT">
					<outline text="4/1/22; 9:50:23 AM by DW" created="Fri, 01 Apr 2022 13:50:22 GMT">
						<outline text="Get info about a feed, including most of what's in the feed, other than the items. " created="Fri, 01 Apr 2022 13:50:24 GMT"/>
						<outline text="Optimized so that if there's already an outstanding request for information about the feed, we don't make a call to the server." created="Fri, 01 Apr 2022 13:50:51 GMT">
							<outline text="Instead, we line up to get the result from the call that's already been made. " created="Fri, 01 Apr 2022 13:51:18 GMT"/>
							<outline text="That way, in the initial loading of the river, if there are only four feeds that contribute to the river, we only make four calls to the server." created="Fri, 01 Apr 2022 13:51:34 GMT"/>
							</outline>
						</outline>
					</outline>
				<outline text="var feedInfoCache = new Object ();" created="Thu, 31 Mar 2022 15:15:14 GMT"/>
				<outline text="" created="Thu, 31 Mar 2022 16:10:52 GMT"/>
				<outline text="var outstandingGetInfoCalls = new Object ();" created="Thu, 31 Mar 2022 16:10:53 GMT"/>
				<outline text="var waitingForFeedInfoCallback = new Object ();" created="Thu, 31 Mar 2022 16:15:24 GMT"/>
				<outline text="" created="Thu, 31 Mar 2022 16:10:53 GMT"/>
				<outline text="function getFeedInfo (feedUrl, callback) {" created="Tue, 15 Feb 2022 16:49:32 GMT">
					<outline text="if (feedInfoCache [feedUrl] !== undefined) {" created="Thu, 31 Mar 2022 15:55:53 GMT">
						<outline text="callback (undefined, feedInfoCache [feedUrl]);" created="Thu, 31 Mar 2022 15:56:39 GMT"/>
						<outline text="}" created="Thu, 31 Mar 2022 15:56:09 GMT"/>
						</outline>
					<outline text="else {" created="Thu, 31 Mar 2022 15:56:11 GMT">
						<outline text="if (outstandingGetInfoCalls [feedUrl] !== undefined) {" created="Thu, 31 Mar 2022 16:13:37 GMT">
							<outline text="if (waitingForFeedInfoCallback [feedUrl] === undefined) {" created="Thu, 31 Mar 2022 16:16:13 GMT">
								<outline text="waitingForFeedInfoCallback [feedUrl] = new Array ();" created="Thu, 31 Mar 2022 16:16:50 GMT"/>
								<outline text="}" created="Thu, 31 Mar 2022 16:16:36 GMT"/>
								</outline>
							<outline text="waitingForFeedInfoCallback [feedUrl].push (callback);" created="Thu, 31 Mar 2022 16:16:13 GMT"/>
							<outline text="}" created="Thu, 31 Mar 2022 16:14:04 GMT"/>
							</outline>
						<outline text="else {" created="Thu, 31 Mar 2022 16:14:05 GMT">
							<outline text="outstandingGetInfoCalls [feedUrl] = true;" created="Thu, 31 Mar 2022 16:15:09 GMT"/>
							<outline text="servercall (&quot;getfeed&quot;, {url: feedUrl}, true, function (err, theFeed) {">
								<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
									<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
									<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
									</outline>
								<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
									<outline text="console.log (&quot;getFeedInfo: feedUrl == &quot; + feedUrl);" created="Thu, 31 Mar 2022 16:22:04 GMT"/>
									<outline text="feedInfoCache [feedUrl] = theFeed;" created="Thu, 31 Mar 2022 15:55:02 GMT"/>
									<outline text="callback (undefined, theFeed); "/>
									<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
									</outline>
								<outline text="" created="Thu, 31 Mar 2022 16:19:27 GMT"/>
								<outline text="if (waitingForFeedInfoCallback [feedUrl] !== undefined) {" created="Thu, 31 Mar 2022 16:19:28 GMT">
									<outline text="waitingForFeedInfoCallback [feedUrl].forEach (function (waitingCallback) {" created="Thu, 31 Mar 2022 16:19:53 GMT">
										<outline text="waitingCallback (err, theFeed);" created="Thu, 31 Mar 2022 16:20:14 GMT"/>
										<outline text="});" created="Thu, 31 Mar 2022 16:20:03 GMT"/>
										</outline>
									<outline text="delete waitingForFeedInfoCallback [feedUrl];" created="Thu, 31 Mar 2022 16:20:33 GMT"/>
									<outline text="delete outstandingGetInfoCalls [feedUrl];" created="Thu, 31 Mar 2022 16:20:33 GMT"/>
									<outline text="}" created="Thu, 31 Mar 2022 16:19:41 GMT"/>
									</outline>
								<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
								</outline>
							<outline text="}" created="Thu, 31 Mar 2022 16:14:08 GMT"/>
							</outline>
						<outline text="}" created="Thu, 31 Mar 2022 15:56:13 GMT"/>
						</outline>
					<outline text="}" created="Wed, 16 Feb 2022 15:59:31 GMT"/>
					</outline>
				<outline text="function updatedFeed (theUpdatedFeed) {" created="Fri, 01 Apr 2022 14:24:55 GMT">
					<outline text="Changes" isComment="true" created="Fri, 01 Apr 2022 20:59:21 GMT">
						<outline text="4/1/22; 4:59:24 PM by DW" created="Fri, 01 Apr 2022 20:59:23 GMT">
							<outline text="If the feed is already in the cache, replace it with the updated version." created="Fri, 01 Apr 2022 20:59:25 GMT"/>
							<outline text="Send a message to each feed item that's on-screen that this feed has changed. They will check to see if it's their feed, and adjust the display with any changed information." created="Fri, 01 Apr 2022 21:00:24 GMT"/>
							</outline>
						</outline>
					<outline text="console.log (&quot;updatedFeed: theUpdatedFeed == &quot; + jsonStringify (theUpdatedFeed));" created="Fri, 01 Apr 2022 15:27:09 GMT"/>
					<outline text="if (feedInfoCache [theUpdatedFeed.feedUrl] !== undefined) {" created="Fri, 01 Apr 2022 20:58:51 GMT">
						<outline text="feedInfoCache [theUpdatedFeed.feedUrl] = theUpdatedFeed;" created="Fri, 01 Apr 2022 14:26:18 GMT"/>
						<outline text="$(&quot;.divFeedItemContainer&quot;).each (function () {" created="Mon, 12 Apr 2021 16:34:58 GMT">
							<outline text="//send a message to each feed item -- maybe this is the feed they came from?" created="Fri, 01 Apr 2022 15:26:05 GMT"/>
							<outline text="var options = {" created="Fri, 01 Apr 2022 14:38:43 GMT">
								<outline text="theFeed: theUpdatedFeed" created="Fri, 01 Apr 2022 14:38:51 GMT"/>
								<outline text="};" created="Fri, 01 Apr 2022 14:38:54 GMT"/>
								</outline>
							<outline text="$(this).trigger (&quot;updatedFeed&quot;, [options]); " created="Fri, 16 Apr 2021 16:20:37 GMT"/>
							<outline text="});" created="Mon, 12 Apr 2021 16:35:44 GMT"/>
							</outline>
						<outline text="}" created="Fri, 01 Apr 2022 20:59:01 GMT"/>
						</outline>
					<outline text="}" created="Fri, 01 Apr 2022 14:25:03 GMT"/>
					</outline>
				<outline text="function removeFeedFromCache (feedUrl) { //5/5/22 by DW" created="Thu, 05 May 2022 20:42:49 GMT">
					<outline text="if (feedInfoCache [feedUrl] !== undefined) {" created="Thu, 05 May 2022 20:43:09 GMT">
						<outline text="delete feedInfoCache [feedUrl];" created="Thu, 05 May 2022 20:43:22 GMT"/>
						<outline text="}" created="Thu, 05 May 2022 20:43:15 GMT"/>
						</outline>
					<outline text="}" created="Thu, 05 May 2022 20:43:02 GMT"/>
					</outline>
				</outline>
			<outline text="feeds.js" created="Fri, 11 Mar 2022 14:39:45 GMT">
				<outline text="//feeds menu, editing and subscribing, viewing feeds" created="Fri, 11 Mar 2022 14:39:49 GMT"/>
				<outline text="" created="Fri, 11 Mar 2022 17:11:50 GMT"/>
				<outline text="var theFeedMenuOutline; " created="Fri, 11 Mar 2022 17:11:50 GMT"/>
				<outline text="" created="Sun, 08 May 2022 14:55:33 GMT"/>
				<outline text="const addFeedCommandString = &quot;Add feed&quot;;" created="Sun, 08 May 2022 14:53:13 GMT"/>
				<outline text="const editFeedlistCommandString = &quot;Edit feed list&quot;;" created="Sun, 08 May 2022 14:53:13 GMT"/>
				<outline text="" created="Fri, 11 Mar 2022 14:40:07 GMT"/>
				<outline text="function getDefaultOutline () { //could go into opml package" created="Fri, 11 Mar 2022 15:40:15 GMT">
					<outline text="Changes" isComment="true" created="Sun, 08 May 2022 14:46:02 GMT">
						<outline text="5/8/22; 10:46:05 AM by DW" created="Sun, 08 May 2022 14:46:04 GMT">
							<outline text="Added a single empty headline to the outline. Concord can't handle an outline with no heads." created="Sun, 08 May 2022 14:46:06 GMT"/>
							</outline>
						</outline>
					<outline text="const nowstring = new Date ().toGMTString ();" created="Fri, 11 Mar 2022 15:47:58 GMT"/>
					<outline text="var defaultOutline = {" created="Fri, 11 Mar 2022 15:39:41 GMT">
						<outline text="opml: {" created="Fri, 11 Mar 2022 14:43:04 GMT">
							<outline text="head: {" created="Fri, 11 Mar 2022 14:43:06 GMT">
								<outline text="dateCreated: nowstring," created="Fri, 11 Mar 2022 15:47:32 GMT"/>
								<outline text="dateModified: nowstring" created="Fri, 11 Mar 2022 15:47:35 GMT"/>
								<outline text="}," created="Fri, 11 Mar 2022 14:43:16 GMT"/>
								</outline>
							<outline text="body: {" created="Fri, 11 Mar 2022 14:43:17 GMT">
								<outline text="subs: [" created="Fri, 11 Mar 2022 14:43:20 GMT">
									<outline text="{" isComment="true">
										<outline text="text: &quot;&quot;,"/>
										<outline text="type: &quot;rss&quot;," created="Sun, 08 May 2022 14:44:40 GMT"/>
										<outline text="created: new Date ().toUTCString ()"/>
										<outline text="}" created="Sun, 08 May 2022 14:43:53 GMT"/>
										</outline>
									<outline text="]" created="Sun, 08 May 2022 14:42:29 GMT"/>
									</outline>
								<outline text="}" created="Fri, 11 Mar 2022 14:43:25 GMT"/>
								</outline>
							<outline text="}" created="Fri, 11 Mar 2022 14:43:35 GMT"/>
							</outline>
						<outline text="};" created="Fri, 11 Mar 2022 14:43:03 GMT"/>
						</outline>
					<outline text="var theCopy = Object.assign (new Object (), defaultOutline);" isComment="true" created="Sun, 14 Feb 2021 18:53:33 GMT"/>
					<outline text="return (defaultOutline)" created="Fri, 11 Mar 2022 15:43:33 GMT"/>
					<outline text="}" created="Fri, 11 Mar 2022 15:40:25 GMT"/>
					</outline>
				<outline text="function readFeed (url, callback) {" created="Tue, 15 Feb 2022 16:49:32 GMT">
					<outline text="servercall (&quot;returnjson&quot;, {url}, true, function (err, theFeed) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, theFeed); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Wed, 16 Feb 2022 15:59:31 GMT"/>
					</outline>
				<outline text="function uploadFeedsOpml (opmltext, callback) {" created="Fri, 11 Mar 2022 17:14:01 GMT">
					<outline text="uploadFile (&quot;feeds.opml&quot;, opmltext, &quot;text/xml&quot;, true, function (err, data) {" created="Fri, 11 Mar 2022 14:46:28 GMT">
						<outline text="theFeedMenuOutline = opml.parse (opmltext); //set global" created="Fri, 11 Mar 2022 17:12:23 GMT"/>
						<outline text="if (callback !== undefined) {" created="Fri, 11 Mar 2022 17:45:52 GMT">
							<outline text="callback (err, data);" created="Fri, 11 Mar 2022 17:45:59 GMT"/>
							<outline text="}" created="Fri, 11 Mar 2022 17:46:03 GMT"/>
							</outline>
						<outline text="});" created="Fri, 11 Mar 2022 14:59:12 GMT"/>
						</outline>
					<outline text="}" created="Fri, 11 Mar 2022 17:14:15 GMT"/>
					</outline>
				<outline text="function getFeedsMenuStruct (opmltext) {" created="Fri, 25 Mar 2022 16:44:27 GMT">
					<outline text="var theOutline = getDefaultOutline ();" created="Fri, 11 Mar 2022 15:44:07 GMT"/>
					<outline text="try { " created="Fri, 11 Mar 2022 15:44:30 GMT">
						<outline text="theOutline = opml.parse (opmltext);" created="Fri, 11 Mar 2022 15:45:04 GMT"/>
						<outline text="}" created="Fri, 11 Mar 2022 15:44:49 GMT"/>
						</outline>
					<outline text="catch (err) {" created="Fri, 11 Mar 2022 15:44:50 GMT">
						<outline text="}" created="Fri, 11 Mar 2022 15:44:54 GMT"/>
						</outline>
					<outline text="return (theOutline);" created="Fri, 25 Mar 2022 16:45:59 GMT"/>
					<outline text="}" created="Fri, 25 Mar 2022 16:44:39 GMT"/>
					</outline>
				<outline text="function findInFeedMenuOutline (url) {" created="Thu, 17 Feb 2022 16:27:55 GMT">
					<outline text="var item = undefined;" created="Sat, 12 Mar 2022 14:42:16 GMT"/>
					<outline text="url = stringLower (url);" created="Thu, 17 Feb 2022 16:31:02 GMT"/>
					<outline text="opml.visitAll (theFeedMenuOutline, function (sub) {" created="Sat, 12 Mar 2022 14:42:16 GMT">
						<outline text="if (stringLower (sub.xmlUrl) == url) {" created="Sat, 12 Mar 2022 14:42:54 GMT">
							<outline text="item = sub;" created="Sat, 12 Mar 2022 14:43:53 GMT"/>
							<outline text="return (false); //stop searching" created="Sat, 12 Mar 2022 14:43:59 GMT"/>
							<outline text="}" created="Sat, 12 Mar 2022 14:43:30 GMT"/>
							</outline>
						<outline text="return (true); //keep searching" created="Sat, 12 Mar 2022 14:43:59 GMT"/>
						<outline text="});" created="Sat, 12 Mar 2022 14:42:40 GMT"/>
						</outline>
					<outline text="return (item);" created="Sat, 12 Mar 2022 14:44:21 GMT"/>
					<outline text="}" created="Thu, 17 Feb 2022 16:28:05 GMT"/>
					</outline>
				<outline text="" created="Sun, 08 May 2022 14:53:13 GMT"/>
				<outline text="function editFeedsMenu () {" created="Fri, 11 Mar 2022 17:09:36 GMT">
					<outline text="console.log (&quot;editFeedsMenu: theFeedMenuOutline == &quot; + jsonStringify (theFeedMenuOutline));" created="Sun, 08 May 2022 14:29:49 GMT"/>
					<outline text="if (theFeedMenuOutline.opml.body.subs.length == 0) {" created="Sun, 08 May 2022 14:51:16 GMT">
						<outline text="alertDialog (&quot;The Feeds menu is empty. You can use the \&quot;&quot; + addFeedCommandString + &quot;\&quot; command to add a feed to the menu.&quot;)" created="Sun, 08 May 2022 14:51:47 GMT"/>
						<outline text="}" created="Sun, 08 May 2022 14:51:41 GMT"/>
						</outline>
					<outline text="else {" created="Sun, 08 May 2022 14:51:42 GMT">
						<outline text="const styles = &quot;.divOutlineDialog {width: 30%; left: 58%;}&quot;;" isComment="true"/>
						<outline text="var opmltext = opml.stringify (theFeedMenuOutline);" created="Fri, 11 Mar 2022 17:12:45 GMT"/>
						<outline text="flEnableBackgroundTasks = false;"/>
						<outline text="appPrefs.outlineFontSize = 15;"/>
						<outline text="appPrefs.outlineLineHeight = 22;"/>
						<outline text="outlineDialog (&quot;Edit feed list...&quot;, opmltext, false, function (flSave, opmltext) {">
							<outline text="flEnableBackgroundTasks = true;"/>
							<outline text="console.log (&quot;editFeedsMenu: flSave == &quot; + flSave + &quot; , opmltext.length == &quot; + opmltext.length);" isComment="true"/>
							<outline text="if (flSave) {">
								<outline text="theFeedMenuOutline = getFeedsMenuStruct (opmltext); //set global" created="Fri, 11 Mar 2022 17:12:23 GMT"/>
								<outline text="buildFeedsMenu (); "/>
								<outline text="uploadFeedsOpml (opmltext);"/>
								<outline text="}"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="}" created="Sun, 08 May 2022 14:51:44 GMT"/>
						</outline>
					<outline text="}" created="Fri, 11 Mar 2022 17:09:42 GMT"/>
					</outline>
				<outline text="function getFeedUrlCommand () { //you can change the URL of the feed here" created="Sat, 19 Feb 2022 15:07:04 GMT">
					<outline text="myAskDialog (&quot;The URL for the current feed:&quot;, appPrefs.urlCurrentFeed, &quot;&quot;, function (url, flcancel) {" created="Tue, 08 Jan 2013 01:26:19 GMT" pgfnum="16860">
						<outline text="if (!flcancel) {">
							<outline text="var feedInArray = findInFeedMenuOutline (appPrefs.urlCurrentFeed);" created="Mon, 21 Feb 2022 14:49:13 GMT"/>
							<outline text="feedInArray.xmlUrl = url;" created="Mon, 21 Feb 2022 14:49:28 GMT"/>
							<outline text="appPrefs.urlCurrentFeed = url;" created="Mon, 21 Feb 2022 14:46:47 GMT"/>
							<outline text="prefsChanged ();"/>
							<outline text="uploadFeedsOpml (opml.stringify (theFeedMenuOutline));" created="Fri, 18 Mar 2022 14:04:22 GMT"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Sat, 19 Feb 2022 15:07:09 GMT"/>
					</outline>
				<outline text="function addToFeedsMenu (theFeed) {" created="Sat, 27 Nov 2021 16:44:38 GMT">
					<outline text="myAskDialog (&quot;The URL for the feed is:&quot;, appPrefs.lastFeedUrl, &quot;&quot;, function (url, flcancel) {" created="Tue, 08 Jan 2013 01:26:19 GMT" pgfnum="16860">
						<outline text="if (!flcancel) {">
							<outline text="appPrefs.lastFeedUrl = url;" created="Fri, 25 Mar 2022 15:57:50 GMT"/>
							<outline text="prefsChanged ();"/>
							<outline text="readFeed (url, function (err, theFeed) {" created="Wed, 16 Feb 2022 16:01:49 GMT">
								<outline text="const nowstring = new Date ().toGMTString ();" created="Fri, 11 Mar 2022 15:47:58 GMT"/>
								<outline text="if (err) {" created="Wed, 16 Feb 2022 16:02:16 GMT">
									<outline text="alertDialog (err.message);" created="Wed, 16 Feb 2022 16:02:19 GMT"/>
									<outline text="}" created="Wed, 16 Feb 2022 16:02:24 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 16 Feb 2022 16:02:25 GMT">
									<outline text="if (findInFeedMenuOutline (url) === undefined) {" created="Thu, 17 Feb 2022 16:31:22 GMT">
										<outline text="theFeedMenuOutline.opml.body.subs.unshift ({" created="Sat, 12 Mar 2022 16:23:53 GMT">
											<outline text="text: theFeed.title," created="Sat, 12 Mar 2022 16:24:31 GMT"/>
											<outline text="type: &quot;rss&quot;," created="Sat, 12 Mar 2022 16:26:35 GMT"/>
											<outline text="created: nowstring," created="Sat, 12 Mar 2022 16:28:01 GMT"/>
											<outline text="xmlUrl: url," created="Sat, 12 Mar 2022 16:26:19 GMT"/>
											<outline text="htmlUrl: theFeed.link," created="Sat, 12 Mar 2022 16:26:19 GMT"/>
											<outline text="description: theFeed.description," created="Sat, 12 Mar 2022 16:24:31 GMT"/>
											<outline text="});" created="Sat, 12 Mar 2022 16:24:08 GMT"/>
											</outline>
										<outline text="appPrefs.urlCurrentFeed = url;"/>
										<outline text="buildFeedsMenu ();"/>
										<outline text="uploadFeedsOpml (opml.stringify (theFeedMenuOutline));" created="Fri, 18 Mar 2022 14:04:22 GMT"/>
										<outline text="editFeedsMenu ();"/>
										<outline text="}" created="Thu, 17 Feb 2022 16:31:35 GMT"/>
										</outline>
									<outline text="else {" created="Sun, 27 Mar 2022 17:18:13 GMT">
										<outline text="alertDialog (&quot;You're already subscribed to that feed.&quot;);" created="Wed, 16 Feb 2022 16:02:19 GMT"/>
										<outline text="}" created="Sun, 27 Mar 2022 17:18:15 GMT"/>
										</outline>
									<outline text="}" created="Wed, 16 Feb 2022 16:02:31 GMT"/>
									</outline>
								<outline text="});" created="Wed, 16 Feb 2022 16:02:06 GMT"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}" created="Sat, 27 Nov 2021 16:44:52 GMT"/>
					</outline>
				<outline text="function clickFeedsMenu (item) {" created="Thu, 17 Mar 2022 16:37:18 GMT">
					<outline text="console.log (&quot;Link you chose == &quot; + item.text + &quot;, url == &quot; + item.xmlUrl);" created="Wed, 16 Feb 2022 16:50:43 GMT"/>
					<outline text="displayRiver (item.xmlUrl);" created="Wed, 16 Feb 2022 16:52:36 GMT"/>
					<outline text="appPrefs.urlCurrentFeed = item.xmlUrl;" created="Fri, 25 Mar 2022 17:01:08 GMT"/>
					<outline text="prefsChanged ();" created="Wed, 16 Feb 2022 16:46:20 GMT"/>
					<outline text="buildFeedsMenu ();" created="Fri, 25 Mar 2022 17:01:15 GMT"/>
					<outline text="}" created="Thu, 17 Mar 2022 16:37:23 GMT"/>
					</outline>
				<outline text="function clickViewAllFeeds () {" created="Wed, 13 Apr 2022 16:44:04 GMT">
					<outline text="displayRiver (undefined);" created="Wed, 13 Apr 2022 16:44:28 GMT"/>
					<outline text="appPrefs.urlCurrentFeed = &quot;&quot;;" created="Fri, 25 Mar 2022 17:01:08 GMT"/>
					<outline text="prefsChanged ();" created="Wed, 16 Feb 2022 16:46:20 GMT"/>
					<outline text="buildFeedsMenu ();" created="Fri, 25 Mar 2022 17:01:15 GMT"/>
					<outline text="}" created="Wed, 13 Apr 2022 16:44:14 GMT"/>
					</outline>
				<outline text="function buildFeedsMenu (urlCurrentFeed) { " created="Wed, 17 Apr 2013 21:32:27 GMT" pgfnum="1863">
					<outline text="const liDivider = &quot;&lt;li class=\&quot;divider\&quot;&gt;&lt;/li&gt;&quot;;"/>
					<outline text="const check = &quot;&lt;i class=\&quot;fa fa-check iMenuCheck\&quot;&gt;&lt;/i&gt;&quot;;"/>
					<outline text="if (urlCurrentFeed === undefined) {" created="Wed, 16 Feb 2022 16:19:08 GMT">
						<outline text="urlCurrentFeed = appPrefs.urlCurrentFeed;" created="Wed, 16 Feb 2022 16:19:28 GMT"/>
						<outline text="}" created="Wed, 16 Feb 2022 16:19:14 GMT"/>
						</outline>
					<outline text="function addViewAllFeedsCommand () {" created="Wed, 13 Apr 2022 16:46:34 GMT">
						<outline text="var myCheck = &quot;&quot;;" created="Wed, 13 Apr 2022 16:47:23 GMT"/>
						<outline text="if ((urlCurrentFeed === undefined) || (urlCurrentFeed === &quot;&quot;)) {" created="Wed, 13 Apr 2022 16:46:55 GMT">
							<outline text="myCheck = check;" created="Wed, 13 Apr 2022 16:47:33 GMT"/>
							<outline text="}" created="Wed, 13 Apr 2022 16:47:01 GMT"/>
							</outline>
						<outline text="$(&quot;#idFeedsMenuList&quot;).append (&quot;&lt;li&gt;&lt;a onclick=\&quot;clickViewAllFeeds ()\&quot;&gt;&quot; + myCheck + &quot;View all feeds...&lt;/a&gt;&lt;/li&gt;&quot;);" created="Wed, 17 Apr 2013 21:48:57 GMT" pgfnum="1889"/>
						<outline text="}" created="Wed, 13 Apr 2022 16:46:38 GMT"/>
						</outline>
					<outline text="$(&quot;#idFeedsMenuList&quot;).empty ();"/>
					<outline text="addViewAllFeedsCommand ();" created="Wed, 13 Apr 2022 16:46:28 GMT"/>
					<outline text="$(&quot;#idFeedsMenuList&quot;).append (liDivider);" created="Wed, 17 Apr 2013 21:48:57 GMT" pgfnum="1889"/>
					<outline text="$(&quot;#idFeedsMenuList&quot;).append (&quot;&lt;li&gt;&lt;a onclick=\&quot;addToFeedsMenu ();\&quot;&gt;&quot; + addFeedCommandString + &quot;...&lt;/a&gt;&lt;/li&gt;&quot;);" created="Wed, 17 Apr 2013 21:48:57 GMT" pgfnum="1889"/>
					<outline text="$(&quot;#idFeedsMenuList&quot;).append (&quot;&lt;li&gt;&lt;a onclick=\&quot;editFeedsMenu ();\&quot;&gt;&quot; + editFeedlistCommandString + &quot;...&lt;/a&gt;&lt;/li&gt;&quot;);" created="Wed, 17 Apr 2013 21:48:57 GMT" pgfnum="1889"/>
					<outline text="$(&quot;#idFeedsMenuList&quot;).append (liDivider);" created="Wed, 17 Apr 2013 21:48:57 GMT" pgfnum="1889"/>
					<outline text="function appendSubmenuTo (item, whereToAttach) {" created="Sat, 12 Mar 2022 17:03:14 GMT">
						<outline text="Changes" isComment="true" created="Sat, 12 Mar 2022 17:04:52 GMT">
							<outline text="3/12/22; 12:04:55 PM by DW" created="Sat, 12 Mar 2022 17:04:54 GMT">
								<outline text="item is an outline node that might have subs." created="Sat, 12 Mar 2022 17:04:55 GMT"/>
								<outline text="whereToAttach is a DOM list item." created="Sat, 12 Mar 2022 17:05:19 GMT"/>
								</outline>
							</outline>
						<outline text="if (item.subs !== undefined) {" created="Sat, 12 Mar 2022 17:07:08 GMT">
							<outline text="item.subs.forEach (function (sub) {" created="Sat, 12 Mar 2022 17:08:05 GMT">
								<outline text="if (notComment (sub)) {" created="Sat, 12 Mar 2022 17:08:25 GMT">
									<outline text="var li = $(&quot;&lt;li&gt;&lt;/li&gt;&quot;), theText = sub.text;" created="Fri, 03 Dec 2021 16:20:22 GMT"/>
									<outline text="if (theText == &quot;-&quot;) {">
										<outline text="li.addClass (&quot;divider&quot;);" created="Wed, 17 Apr 2013 21:48:57 GMT" pgfnum="1889"/>
										<outline text="}"/>
										</outline>
									<outline text="else {" created="Sat, 12 Mar 2022 16:12:36 GMT">
										<outline text="if (sub.subs !== undefined) {" created="Sat, 12 Mar 2022 17:01:24 GMT">
											<outline text="var liMenuItem = $(&quot;&lt;li class=\&quot;dropdown-submenu\&quot;&gt;&lt;a href=\&quot;#\&quot;&gt;&quot; + theText + &quot;&lt;/a&gt;&lt;/li&gt;&quot;);" created="Wed, 17 Apr 2013 21:50:02 GMT" pgfnum="1893"/>
											<outline text="var ulSubMenu = $(&quot;&lt;ul class=\&quot;dropdown-menu\&quot;&gt;&lt;/ul&gt;&quot;);" created="Wed, 17 Apr 2013 21:45:06 GMT" pgfnum="1876"/>
											<outline text="appendSubmenuTo (sub, ulSubMenu);" created="Sat, 12 Mar 2022 17:02:29 GMT"/>
											<outline text="liMenuItem.append (ulSubMenu);" created="Sat, 12 Mar 2022 19:04:44 GMT"/>
											<outline text="whereToAttach.append (liMenuItem);"/>
											<outline text="}" created="Sat, 12 Mar 2022 17:01:39 GMT"/>
											</outline>
										<outline text="else {" created="Sat, 12 Mar 2022 17:01:45 GMT">
											<outline text="if (sub.xmlUrl == urlCurrentFeed) {" created="Sat, 27 Nov 2021 16:45:55 GMT">
												<outline text="theText = check + theText;" created="Fri, 03 Dec 2021 21:58:21 GMT"/>
												<outline text="}" created="Sat, 27 Nov 2021 16:46:14 GMT"/>
												</outline>
											<outline text="var link = $(&quot;&lt;a&gt;&quot; + theText + &quot;&lt;/a&gt;&quot;);" created="Fri, 03 Dec 2021 16:30:52 GMT"/>
											<outline text="li.append (link);" created="Fri, 03 Dec 2021 16:31:19 GMT"/>
											<outline text="$(link).click (function (ev) {" created="Fri, 03 Dec 2021 16:24:51 GMT">
												<outline text="clickFeedsMenu (sub);" created="Thu, 17 Mar 2022 16:36:45 GMT"/>
												<outline text="});" created="Fri, 03 Dec 2021 16:25:02 GMT"/>
												</outline>
											<outline text="}" created="Sat, 12 Mar 2022 17:01:47 GMT"/>
											</outline>
										<outline text="}" created="Sat, 12 Mar 2022 16:12:39 GMT"/>
										</outline>
									<outline text="whereToAttach.append (li);" created="Wed, 17 Apr 2013 21:48:57 GMT" pgfnum="1889"/>
									<outline text="}" created="Sat, 12 Mar 2022 17:08:33 GMT"/>
									</outline>
								<outline text="});" created="Sat, 12 Mar 2022 17:08:14 GMT"/>
								</outline>
							<outline text="}" created="Sat, 12 Mar 2022 17:07:19 GMT"/>
							</outline>
						<outline text="}" created="Sat, 12 Mar 2022 17:03:56 GMT"/>
						</outline>
					<outline text="appendSubmenuTo (theFeedMenuOutline.opml.body, $(&quot;#idFeedsMenuList&quot;));" created="Sat, 12 Mar 2022 17:03:14 GMT"/>
					<outline text="}" created="Wed, 17 Apr 2013 21:35:26 GMT" pgfnum="1865"/>
					</outline>
				<outline text="function readFeedsOpml (callback) {" created="Fri, 11 Mar 2022 15:33:21 GMT">
					<outline text="Changes" isComment="true" created="Fri, 11 Mar 2022 15:45:47 GMT">
						<outline text="3/11/22; 10:45:49 AM by DW" created="Fri, 11 Mar 2022 15:45:48 GMT">
							<outline text="If we can read the outline, that's what we return, otherwise we return an empty outline." created="Fri, 11 Mar 2022 15:45:49 GMT"/>
							</outline>
						</outline>
					<outline text="downloadFile (&quot;feeds.opml&quot;, function (err, opmltext) {" created="Fri, 11 Mar 2022 15:38:34 GMT">
						<outline text="var theOutline;" created="Sun, 08 May 2022 14:33:12 GMT"/>
						<outline text="if (err) {" created="Sun, 08 May 2022 14:33:12 GMT">
							<outline text="theOutline = getDefaultOutline ();" created="Fri, 25 Mar 2022 16:54:48 GMT"/>
							<outline text="}" created="Sun, 08 May 2022 14:33:16 GMT"/>
							</outline>
						<outline text="else {" created="Sun, 08 May 2022 14:33:17 GMT">
							<outline text="theOutline = getFeedsMenuStruct (opmltext);" created="Fri, 25 Mar 2022 16:54:48 GMT"/>
							<outline text="}" created="Sun, 08 May 2022 14:33:19 GMT"/>
							</outline>
						<outline text="callback (undefined, theOutline);" created="Fri, 11 Mar 2022 15:38:59 GMT"/>
						<outline text="});" created="Fri, 11 Mar 2022 15:38:54 GMT"/>
						</outline>
					<outline text="}" created="Fri, 11 Mar 2022 15:33:36 GMT"/>
					</outline>
				<outline text="function buildFeedsMenuFromOpmlFile () {">
					<outline text="console.log (&quot;buildFeedsMenuFromOpmlFile&quot;);" created="Sun, 08 May 2022 14:29:49 GMT"/>
					<outline text="readFeedsOpml (function (err, theOutline) {" created="Fri, 25 Mar 2022 16:51:40 GMT">
						<outline text="if (err) {" created="Fri, 25 Mar 2022 16:52:16 GMT">
							<outline text="console.log (&quot;buildFeedsMenuFromOpmlFile: err.message == &quot; + err.message);" created="Fri, 25 Mar 2022 16:52:19 GMT"/>
							<outline text="}" created="Fri, 25 Mar 2022 16:52:29 GMT"/>
							</outline>
						<outline text="else {" created="Fri, 25 Mar 2022 16:52:30 GMT">
							<outline text="theFeedMenuOutline = theOutline;" created="Fri, 11 Mar 2022 17:12:23 GMT"/>
							<outline text="console.log (&quot;buildFeedsMenuFromOpmlFile: theFeedMenuOutline == &quot; + jsonStringify (theFeedMenuOutline));" created="Sun, 08 May 2022 14:29:49 GMT"/>
							<outline text="buildFeedsMenu ();" created="Fri, 25 Mar 2022 16:53:32 GMT"/>
							<outline text="}" created="Fri, 25 Mar 2022 16:52:33 GMT"/>
							</outline>
						<outline text="});" created="Fri, 25 Mar 2022 16:52:11 GMT"/>
						</outline>
					<outline text="}" created="Fri, 25 Mar 2022 16:50:04 GMT"/>
					</outline>
				</outline>
			<outline text="oldschoolrender.css" created="Thu, 10 Mar 2022 15:31:09 GMT">
				<outline text="" isComment="true" created="Mon, 18 Apr 2022 20:40:44 GMT"/>
				<outline text="Notes" isComment="true" created="Mon, 18 Apr 2022 20:40:44 GMT">
					<outline text="4/18/22; 4:40:55 PM by DW" created="Mon, 18 Apr 2022 20:40:54 GMT">
						<outline text="These are names that came from Old School. Since we are using bits of Old School to render items that have outlines in them, we might as well use the same names. But this is a different context, viewing the items within a river. So we have tuned up the CSS to work in this environment. " created="Mon, 18 Apr 2022 20:40:55 GMT"/>
						</outline>
					</outline>
				<outline text="" isComment="true" created="Mon, 18 Apr 2022 20:40:44 GMT"/>
				<outline text=".divSingularItem {">
					<outline text="font-size: 16px;"/>
					<outline text="line-height: 150%;"/>
					<outline text="margin-top: 7px;" isComment="true"/>
					<outline text="margin-bottom: 7px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTitledItem {">
					<outline text="font-size: 16px;"/>
					<outline text="line-height: 150%;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTitledItem a {" isComment="true">
					<outline text="color: #1E68A6;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTitledItem .divTitle {">
					<outline text="font-size: 18px;"/>
					<outline text="line-height: 110%;" created="Sun, 03 Apr 2022 17:16:08 GMT"/>
					<outline text="font-weight: bold;"/>
					<outline text="letter-spacing: -1px;" isComment="true"/>
					<outline text="margin-top: 5px;" isComment="true"/>
					<outline text="margin-bottom: 10px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTitledItem .ulLevel0 {">
					<outline text="margin-left: 0;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divTitledItem li {">
					<outline text="list-style-type: none;"/>
					<outline text="margin-bottom: .6em;"/>
					<outline text="line-height: 150%;"/>
					<outline text="font-family: &quot;Georgia&quot;;" isComment="true"/>
					<outline text="font-size: 20px;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".spLink {">
					<outline text="margin-left: .5em;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spLink a {">
					<outline text="color: gray;"/>
					<outline text="cursor: pointer;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spPermaLink {">
					<outline text="margin-left: .4em;"/>
					<outline text="display: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spPermaLink a {">
					<outline text="font-family: &quot;Ubuntu&quot;;"/>
					<outline text="color: purple;"/>
					<outline text="opacity: 0.3;"/>
					<outline text="opacity: 0.5;" isComment="true"/>
					<outline text="opacity: 0.2;" isComment="true"/>
					<outline text="font-weight: normal;"/>
					<outline text="font-size: .8em;" isComment="true"/>
					<outline text="font-size: 14px;"/>
					<outline text="cursor: pointer;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spPermaLink a:hover {">
					<outline text="opacity: 0.9;"/>
					<outline text="color: green;" created="Thu, 04 Mar 2021 14:34:49 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divArchivePageDay {">
					<outline text="margin-bottom: 40px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divArchivePageDay .divDayTitle {" isComment="true">
					<outline text="font-size: 1.5em;" isComment="true"/>
					<outline text="margin-bottom: 30px;" isComment="true"/>
					<outline text="color: green;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".divFooter {" created="Fri, 07 Mar 2014 17:07:49 GMT" pgfnum="38596">
					<outline text="font-family: &quot;Ubuntu&quot;, sans-serif;" isComment="true"/>
					<outline text="margin-top: 400px;"/>
					<outline text="font-size: .80em;"/>
					<outline text="line-height: 180%;" created="Sun, 09 Mar 2014 22:42:38 GMT" pgfnum="38763"/>
					<outline text="border-top: 1px solid silver;" created="Fri, 07 Mar 2014 17:08:19 GMT" pgfnum="38600"/>
					<outline text="text-align: center;" created="Fri, 07 Mar 2014 17:10:00 GMT" pgfnum="38601"/>
					<outline text="padding-top: 15px;" created="Fri, 07 Mar 2014 17:12:24 GMT" pgfnum="38602"/>
					<outline text="height: 400px;" isComment="true" created="Fri, 07 Mar 2014 17:08:00 GMT" pgfnum="38598"/>
					<outline text="}" created="Fri, 07 Mar 2014 17:07:51 GMT" pgfnum="38597"/>
					</outline>
				<outline text=".divSocialMediaLinks {">
					<outline text="letter-spacing: 12px; "/>
					<outline text="font-size: 1.2em; " isComment="true"/>
					<outline text="margin-top: 5px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spTitleLink {">
					<outline text="color: black;" isComment="true"/>
					<outline text="opacity: .85;" isComment="true"/>
					<outline text="cursor: pointer;"/>
					<outline text="}"/>
					</outline>
				<outline text=".ulNumberedSubs li {">
					<outline text="list-style-type: decimal;"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 10 Mar 2022 15:35:53 GMT"/>
				<outline text="/*  1/3/20 by DW -- inlineImage styles. */">
					<outline text=".divInlineImage {">
						<outline text="padding: 10px;"/>
						<outline text="padding-left: 15px;"/>
						<outline text="padding-right: 15px;"/>
						<outline text="border: 1px dashed silver;"/>
						<outline text="font-size: 0.8em;"/>
						<outline text="line-height: 130%;"/>
						<outline text="text-align: center;"/>
						<outline text="}"/>
						</outline>
					<outline text=".imgInline, iframe {">
						<outline text="margin-bottom: 10px;"/>
						<outline text="}"/>
						</outline>
					</outline>
				</outline>
			<outline text="oldschoolrender.js" created="Wed, 09 Mar 2022 15:57:30 GMT">
				<outline text="Notes" isComment="true" created="Wed, 09 Mar 2022 15:57:43 GMT">
					<outline text="3/9/22; 10:57:46 AM by DW" created="Wed, 09 Mar 2022 15:57:45 GMT">
						<outline text="Here's what's going on. " created="Wed, 09 Mar 2022 15:57:47 GMT"/>
						<outline text="Old School has code in it that renders an outline according to its attributes,." created="Wed, 09 Mar 2022 15:57:56 GMT"/>
						<outline text="I don't want to try to edit the code in place. Old School is deployed, I can't handle any breakage there, so I'm going to pull out what I need here, and hope that at some point in the future someone can re-integrate this code with Old School. " created="Wed, 09 Mar 2022 15:58:12 GMT"/>
						</outline>
					</outline>
				<outline text="" created="Wed, 09 Mar 2022 15:57:34 GMT"/>
				<outline text="const utils = {" created="Wed, 09 Mar 2022 17:11:27 GMT">
					<outline text="getBoolean, filledString" created="Wed, 09 Mar 2022 17:11:35 GMT"/>
					<outline text="}" created="Wed, 09 Mar 2022 17:11:42 GMT"/>
					</outline>
				<outline text="" created="Wed, 09 Mar 2022 17:11:27 GMT"/>
				<outline text="function notComment (item) { //11/5/20 by DW ">
					<outline text="return (!utils.getBoolean (item.isComment));"/>
					<outline text="}"/>
					</outline>
				<outline text="function getNodeType (theNode) { //10/29/21 by DW" created="Fri, 29 Oct 2021 15:31:06 GMT">
					<outline text="if (theNode.type === undefined) {" created="Fri, 29 Oct 2021 15:31:20 GMT">
						<outline text="return (undefined);" created="Fri, 29 Oct 2021 15:31:39 GMT"/>
						<outline text="}" created="Fri, 29 Oct 2021 15:31:44 GMT"/>
						</outline>
					<outline text="else {" created="Fri, 29 Oct 2021 15:31:47 GMT">
						<outline text="return (theNode.type);" created="Fri, 29 Oct 2021 15:31:49 GMT"/>
						<outline text="}" created="Fri, 29 Oct 2021 15:31:53 GMT"/>
						</outline>
					<outline text="}" created="Fri, 29 Oct 2021 15:31:15 GMT"/>
					</outline>
				<outline text="function addInlineImageTo (s, urlImage) { //1/13/20 by DW">
					<outline text="return (&quot;&lt;div&gt;&lt;img class=\&quot;imgInline\&quot; src=\&quot;&quot; + urlImage + &quot;\&quot;&gt;&lt;/div&gt;&quot; + s);"/>
					<outline text="return (&quot;&lt;center&gt;&lt;img class=\&quot;imgInline\&quot; src=\&quot;&quot; + urlImage + &quot;\&quot;&gt;&lt;/center&gt;&quot; + s);" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text="function addInlineVideoTo (s, urlVideo) { //10/11/20 by DW">
					<outline text="function fixYoutubeUrl (url) { //cribbed from oldSchoolTemplate">
						<outline text="Changes" isComment="true">
							<outline text="3/18/18; 2:29:29 PM by DW">
								<outline text="Accept a URL in either of these forms and return a URL in the second form.">
									<outline text="https://www.youtube.com/watch?v=YedqV4Gl_us"/>
									<outline text="https://www.youtube.com/embed/YedqV4Gl_us"/>
									</outline>
								</outline>
							</outline>
						<outline text="const prefix = &quot;https://www.youtube.com/watch?v=&quot;;"/>
						<outline text="if (utils.beginsWith (url, prefix)) {">
							<outline text="url = &quot;https://www.youtube.com/embed/&quot; + utils.stringDelete (url, 1, prefix.length);"/>
							<outline text="}"/>
							</outline>
						<outline text="return (url);"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = fixYoutubeUrl (urlVideo);"/>
					<outline text="var videotext = &quot;&lt;iframe width=\&quot;560\&quot; height=\&quot;315\&quot; src=\&quot;&quot; + url + &quot;\&quot; frameborder=\&quot;0\&quot; allow=\&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\&quot; allowfullscreen&gt;&lt;/iframe&gt;&quot;;"/>
					<outline text="return (&quot;&lt;center&gt;&quot; + videotext + &quot;&lt;/center&gt;&quot; + s);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getImageHtml (item) { //11/12/21 by DW" created="Fri, 12 Nov 2021 20:01:07 GMT">
					<outline text="var imgHtml = &quot;&quot;;"/>
					<outline text="if (item.image !== undefined) {">
						<outline text="imgHtml = &quot;&lt;img class=\&quot;imgRightMargin\&quot; src=\&quot;&quot; + item.image + &quot;\&quot; border=\&quot;0\&quot; style=\&quot;float: right; padding-left: 25px; padding-bottom: 10px; padding-top: 10px; padding-right: 15px;\&quot;&gt;&quot;;"/>
						<outline text="if (item.imageLink !== undefined) { //5/26/20 by DW">
							<outline text="imgHtml = &quot;&lt;a class=\&quot;anchorRightMargin\&quot; href=\&quot;&quot; + item.imageLink + &quot;\&quot;&gt;&quot; + imgHtml + &quot;&lt;/a&gt;&quot;;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (imgHtml);" created="Fri, 12 Nov 2021 20:01:45 GMT"/>
					<outline text="}" created="Fri, 12 Nov 2021 20:01:18 GMT"/>
					</outline>
				<outline text="function processText (s) { //9/2/20 by DW -- all text processing code in one call">
					<outline text="const macroOptions = {" isComment="true">
						<outline text="startChars: &quot;[%&quot;,"/>
						<outline text="endChars: &quot;%]&quot;,"/>
						<outline text="delimiter: &quot;:&quot;,"/>
						<outline text="handlers: {">
							<outline text="search: function (macrotext) {">
								<outline text="var url, link;"/>
								<outline text="macrotext = utils.trimWhitespace (macrotext);"/>
								<outline text="url = &quot;https://duckduckgo.com/?q=site%3Ascripting.com+%22&quot; + macrotext + &quot;%22&amp;t=h_&amp;ia=web&quot;;"/>
								<outline text="link = &quot;&lt;a href=\&quot;&quot; + url + &quot;\&quot;&gt;&quot; + macrotext + &quot;&lt;/a&gt;&quot;;"/>
								<outline text="return (link);"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="};"/>
						</outline>
					<outline text="s = glossaryProcess (s);" isComment="true"/>
					<outline text="s = emojiProcess (s);" isComment="true"/>
					<outline text="s = macroprocess (s, macroOptions);" isComment="true"/>
					<outline text="s = tagProcess (s);" isComment="true"/>
					<outline text="return (s);"/>
					<outline text="}"/>
					</outline>
				<outline text="function subsToMarkdown (parent) { //10/30/21 by DW" created="Sat, 30 Oct 2021 17:09:14 GMT">
					<outline text="Changes" isComment="true" created="Sat, 30 Oct 2021 17:18:38 GMT">
						<outline text="11/23/21; 9:45:04 AM by DW" created="Fri, 26 Nov 2021 14:45:03 GMT">
							<outline text="Implement flSinglespaceMarkdown attribute, otherwise we double-space. " created="Fri, 26 Nov 2021 14:45:04 GMT">
								<outline text="http://scripting.com/drummer/blog/2021/11/23/192342.html?title=nextIterationOnMarkdowninanoutline" created="Fri, 26 Nov 2021 14:46:48 GMT"/>
								</outline>
							</outline>
						<outline text="11/21/21; 9:35:21 AM by DW" created="Sun, 21 Nov 2021 14:35:21 GMT">
							<outline text="Enclose in divMarkdownText, because it's a div not a span." created="Sun, 21 Nov 2021 14:35:21 GMT"/>
							</outline>
						<outline text="11/19/21; 2:07:52 PM by DW" created="Fri, 19 Nov 2021 19:07:52 GMT">
							<outline text="No more indentation, and only output one newline per headline." created="Fri, 19 Nov 2021 19:07:52 GMT"/>
							</outline>
						<outline text="10/30/21; 1:04:46 PM by DW" isComment="true" created="Sat, 30 Oct 2021 17:04:45 GMT">
							<outline text="Use spaces to indent in markdown, not tabs. " created="Sat, 30 Oct 2021 17:04:46 GMT"/>
							</outline>
						</outline>
					<outline text="let markdowntext = &quot;&quot;, indentlevel = 0;"/>
					<outline text="function addlevel (theNode, flSinglespace=false) {" created="Fri, 29 Oct 2021 15:26:16 GMT">
						<outline text="var flAddExtraReturn = false;" created="Tue, 23 Nov 2021 18:57:00 GMT"/>
						<outline text="function add (s) {">
							<outline text="markdowntext += s + ((flSinglespace) ? &quot;\n&quot; : &quot;\n\n&quot;);"/>
							<outline text="" isComment="true" created="Tue, 23 Nov 2021 18:37:17 GMT"/>
							<outline text="markdowntext += utils.filledString (&quot;    &quot;, indentlevel) + s + &quot;\n\n&quot;;" isComment="true"/>
							<outline text="markdowntext += s + &quot;\n\n&quot;;" isComment="true"/>
							<outline text="}"/>
							</outline>
						<outline text="if (theNode.flSinglespaceMarkdown !== undefined) {" created="Tue, 23 Nov 2021 18:38:32 GMT">
							<outline text="var newSingleVal = utils.getBoolean (theNode.flSinglespaceMarkdown);" created="Tue, 23 Nov 2021 18:38:55 GMT"/>
							<outline text="if (newSingleVal &amp;&amp; (!flSinglespace)) {" created="Tue, 23 Nov 2021 18:55:38 GMT">
								<outline text="flAddExtraReturn = true;" created="Tue, 23 Nov 2021 18:56:28 GMT"/>
								<outline text="}" created="Tue, 23 Nov 2021 18:55:54 GMT"/>
								</outline>
							<outline text="flSinglespace = newSingleVal;" created="Tue, 23 Nov 2021 18:56:46 GMT"/>
							<outline text="}" created="Tue, 23 Nov 2021 18:38:47 GMT"/>
							</outline>
						<outline text="if (theNode.subs !== undefined) {" created="Fri, 29 Oct 2021 15:27:11 GMT">
							<outline text="theNode.subs.forEach (function (sub) {" created="Fri, 29 Oct 2021 15:27:20 GMT">
								<outline text="add (sub.text);" created="Fri, 29 Oct 2021 15:27:50 GMT"/>
								<outline text="indentlevel++;" created="Fri, 29 Oct 2021 15:28:13 GMT"/>
								<outline text="addlevel (sub, flSinglespace);" created="Fri, 29 Oct 2021 15:28:08 GMT"/>
								<outline text="indentlevel--;" created="Fri, 29 Oct 2021 15:28:13 GMT"/>
								<outline text="});" created="Fri, 29 Oct 2021 15:27:31 GMT"/>
								</outline>
							<outline text="if (flAddExtraReturn) {" created="Tue, 23 Nov 2021 18:58:19 GMT">
								<outline text="markdowntext += &quot;\n&quot;;" created="Tue, 23 Nov 2021 18:58:28 GMT"/>
								<outline text="}" created="Tue, 23 Nov 2021 18:58:22 GMT"/>
								</outline>
							<outline text="}" created="Fri, 29 Oct 2021 15:27:19 GMT"/>
							</outline>
						<outline text="}" created="Fri, 29 Oct 2021 15:26:29 GMT"/>
						</outline>
					<outline text="addlevel (parent);" created="Fri, 29 Oct 2021 15:26:30 GMT"/>
					<outline text="markdowntext = processText (markdowntext); //convert glossary references, emoji shortcodes, etc" created="Sun, 21 Nov 2021 19:03:17 GMT"/>
					<outline text="var processedtext = markdownProcess (markdowntext, true); " created="Sat, 30 Oct 2021 17:14:34 GMT"/>
					<outline text="console.log (&quot;getItemSubs: markdowntext == &quot; + debugMarkdownText (markdowntext));" isComment="true" created="Sat, 30 Oct 2021 17:07:24 GMT"/>
					<outline text="console.log (&quot;getItemSubs: processedtext == &quot; + debugMarkdownText (processedtext));" isComment="true" created="Sat, 30 Oct 2021 17:07:24 GMT"/>
					<outline text="return (&quot;&lt;div class=\&quot;divMarkdownText\&quot;&gt;&quot; + processedtext + &quot;&lt;/div&gt;&quot;);"/>
					<outline text="}" created="Sat, 30 Oct 2021 17:09:27 GMT"/>
					</outline>
				<outline text="function getDataAtts (item) { //7/12/17 by DW">
					<outline text="var atts = &quot;&quot;;"/>
					<outline text="for (var x in item) {">
						<outline text="switch (x) {">
							<outline text="case &quot;text&quot;: case &quot;created&quot;: case &quot;permalink&quot;: case &quot;subs&quot;: //5/16/18 by DW -- added subs">
								<outline text="break;"/>
								</outline>
							<outline text="default:">
								<outline text="atts += &quot; data-&quot; + x + &quot;=\&quot;&quot; + item [x] + &quot;\&quot;&quot;;"/>
								<outline text="break;"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text="return (atts);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getRenderedText (item, flTextIsTitle, urlStoryPage) {">
					<outline text="Changes" isComment="true">
						<outline text="3/27/22; 1:26:23 PM by DW" created="Sun, 27 Mar 2022 17:26:23 GMT">
							<outline text="If the item has a permalink, work wtih it. Otherwise do not try to generate it. We don't have the context to do it. This is a feed reader, not a CMS.," created="Sun, 27 Mar 2022 17:26:24 GMT"/>
							</outline>
						<outline text="3/9/22; 12:18:17 PM by DW" created="Wed, 09 Mar 2022 17:18:17 GMT">
							<outline text="Copied from Old School. Will be adapted to this environment, as necessary." created="Sun, 27 Mar 2022 17:26:06 GMT"/>
							<outline text="We could receive the inlineImage att as inlineimage." created="Wed, 09 Mar 2022 17:18:18 GMT"/>
							</outline>
						<outline text="11/10/20; 12:18:00 PM by DW">
							<outline text="Moved out of buildDay so it can be used in building standalone pages. "/>
							</outline>
						<outline text="10/11/20; 10:10:51 AM by DW">
							<outline text="Add support for inlineVideo."/>
							</outline>
						<outline text="5/26/20; 4:15:05 PM by DW">
							<outline text="Add support for imageLink attribute. Add an imgRightMargin class to the images. "/>
							</outline>
						<outline text="1/7/20; 11:43:27 AM by DW">
							<outline text="When generating urls, add on a parameter with the title of the post, help human beings figure it out."/>
							</outline>
						<outline text="1/3/20; 12:18:59 PM by DW">
							<outline text="If it's an inlineImage, include the text of the post within a div."/>
							</outline>
						<outline text="1/2/20; 3:38:56 PM by DW">
							<outline text="Add support for inlineImage attribute. It's the URL of an image that will be placed above the text of the headline. Use it when the image is part of the content, not off to the side. "/>
							</outline>
						<outline text="12/30/17; 11:23:31 AM by DW">
							<outline text="New optional param, urlStoryPage. "/>
							</outline>
						<outline text="7/9/17; 1:57:05 PM by DW">
							<outline text="http://scripting.com/2017/07/09.html"/>
							</outline>
						</outline>
					<outline text="console.log (&quot;getRenderedText: item.text == &quot; + item.text);" isComment="true" created="Wed, 09 Mar 2022 17:15:25 GMT"/>
					<outline text="var s = processText (item.text), flInlineImage = false;"/>
					<outline text="if (item.inlineImage !== undefined) { //1/2/20 by DW">
						<outline text="s = addInlineImageTo (s, item.inlineImage);"/>
						<outline text="flInlineImage = true;"/>
						<outline text="}"/>
						</outline>
					<outline text="else {" created="Wed, 09 Mar 2022 17:21:04 GMT">
						<outline text="if (item.inlineimage !== undefined) { //3/9/22 by DW">
							<outline text="s = addInlineImageTo (s, item.inlineimage);"/>
							<outline text="flInlineImage = true;"/>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Wed, 09 Mar 2022 17:21:06 GMT"/>
						</outline>
					<outline text="" created="Wed, 09 Mar 2022 17:20:59 GMT"/>
					<outline text="if (item.inlineVideo !== undefined) { //10/11/20 by DW">
						<outline text="s = addInlineVideoTo (s, item.inlineVideo);"/>
						<outline text="flInlineImage = true;"/>
						<outline text="}"/>
						</outline>
					<outline text="else {" created="Wed, 09 Mar 2022 17:21:44 GMT">
						<outline text="if (item.inlinevideo !== undefined) { //3/9/22 by DW">
							<outline text="s = addInlineVideoTo (s, item.inlinevideo);"/>
							<outline text="flInlineImage = true;"/>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Wed, 09 Mar 2022 17:21:47 GMT"/>
						</outline>
					<outline text="" created="Wed, 09 Mar 2022 17:21:00 GMT"/>
					<outline text="switch (item.type) {">
						<outline text="case &quot;link&quot;: //no urlpack in client" isComment="true">
							<outline text="var parsedUrl = urlpack.parse (item.url, true), host = parsedUrl.host;" created="Tue, 21 Jan 2014 00:21:43 GMT" pgfnum="36078"/>
							<outline text="if (utils.beginsWith (host, &quot;www.&quot;)) {">
								<outline text="host = utils.stringDelete (host, 1, 4);"/>
								<outline text="}"/>
								</outline>
							<outline text="s += &quot;&lt;span class=\&quot;spLink\&quot;&gt;&lt;a href=\&quot;&quot; + item.url + &quot;\&quot; target=\&quot;_blank\&quot;&gt;&quot; + host + &quot;&lt;/a&gt;&lt;/span&gt;&quot;;"/>
							<outline text="&lt;i class=\&quot;fa fa-external-link\&quot;&gt;&lt;/i&gt;" isComment="true"/>
							<outline text="break;"/>
							</outline>
						<outline text="case &quot;markdown&quot;: //5/26/17 by DW">
							<outline text="s = &quot;&lt;span class=\&quot;spRenderedMarkdown\&quot;&gt;&quot; + markdownProcess (s) + &quot;&lt;/span&gt;&quot;;"/>
							<outline text="break;"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="var ourLink = getPermalinkString (item.created); //7/9/17 by DW"/>
					<outline text=""/>
					<outline text="if (item.permalink === undefined) { //in the feed reader it should be defined -- 3/9/22 by DW" isComment="true" created="Wed, 09 Mar 2022 16:13:03 GMT">
						<outline text="if (urlStoryPage !== undefined) { //12/30/17 by DW">
							<outline text="item.permalink = urlStoryPage + &quot;#&quot; + ourLink;"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (item.subs !== undefined) { //12/29/17 by DW">
								<outline text="item.permalink = blogConfig.baseUrl + utils.getDatePath (new Date (item.created), true) + utils.stringDelete (ourLink, 1, 1) + &quot;.html&quot;;"/>
								<outline text="item.permalink += &quot;?title=&quot; + utils.innerCaseName (item.text); //1/7/20 by DW"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="item.permalink = urlpage + &quot;#&quot; + ourLink;"/>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Wed, 09 Mar 2022 16:13:27 GMT"/>
						</outline>
					<outline text=""/>
					<outline text="var imgHtml = getImageHtml (item); //11/12/21 by DW"/>
					<outline text="if (item.image !== undefined) {" isComment="true">
						<outline text="imgHtml = &quot;&lt;img class=\&quot;imgRightMargin\&quot; src=\&quot;&quot; + item.image + &quot;\&quot; border=\&quot;0\&quot; style=\&quot;float: right; padding-left: 25px; padding-bottom: 10px; padding-top: 10px; padding-right: 15px;\&quot;&gt;&quot;;"/>
						<outline text="if (item.imageLink !== undefined) { //5/26/20 by DW">
							<outline text="imgHtml = &quot;&lt;a class=\&quot;anchorRightMargin\&quot; href=\&quot;&quot; + item.imageLink + &quot;\&quot;&gt;&quot; + imgHtml + &quot;&lt;/a&gt;&quot;;"/>
							<outline text="}"/>
							</outline>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="if (flTextIsTitle) {">
						<outline text="s = &quot;&lt;a href=\&quot;&quot; + item.permalink + &quot;\&quot;&gt;&lt;span class=\&quot;spTitleLink\&quot;&gt;&quot; + s + &quot;&lt;/span&gt;&lt;/a&gt;&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="var title = &quot;Direct link to this item.&quot;;"/>
					<outline text="s = &quot;&lt;a name=\&quot;&quot; + ourLink + &quot;\&quot;&gt;&lt;/a&gt;&quot; + imgHtml + s + &quot;&lt;span class=\&quot;spPermaLink\&quot;&gt;&lt;a href=\&quot;&quot; + item.permalink + &quot;\&quot; title=\&quot;&quot; + title + &quot;\&quot;&gt;#&lt;/a&gt;&lt;/span&gt;&quot;;"/>
					<outline text=""/>
					<outline text="if (flInlineImage) { //1/3/20 by DW">
						<outline text="s = &quot;&lt;div class=\&quot;divInlineImage\&quot;&gt;&quot; + s + &quot;&lt;/div&gt;&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text=""/>
					<outline text="return (s);"/>
					<outline text="}"/>
					</outline>
				<outline text="function getItemSubs (parent, ulLevel, urlStoryPage) {">
					<outline text="Changes" isComment="true">
						<outline text="10/29/21; 11:32:54 AM by DW" created="Fri, 29 Oct 2021 15:32:53 GMT">
							<outline text="If we encounter a node of type markdown, run the text through a markdown processor, and that's what we return." created="Fri, 29 Oct 2021 15:32:54 GMT"/>
							</outline>
						<outline text="5/15/18; 10:40:03 AM by DW">
							<outline text="Support collapse attribute."/>
							</outline>
						</outline>
					<outline text="if (getNodeType (parent) == &quot;markdown&quot;) {" created="Fri, 29 Oct 2021 15:24:11 GMT">
						<outline text="return (subsToMarkdown (parent));" created="Sat, 30 Oct 2021 17:09:47 GMT"/>
						<outline text="}" created="Fri, 29 Oct 2021 15:24:41 GMT"/>
						</outline>
					<outline text="else {" created="Fri, 29 Oct 2021 15:24:42 GMT">
						<outline text="let htmltext = &quot;&quot;, indentlevel = 0;"/>
						<outline text="function add (s) {">
							<outline text="htmltext += utils.filledString (&quot;\t&quot;, indentlevel) + s + &quot;\n&quot;;"/>
							<outline text="}"/>
							</outline>
						<outline text="var ulAddedClass = &quot;&quot;, ulCollapsedClass = &quot;&quot;;" created="Fri, 29 Oct 2021 15:25:11 GMT"/>
						<outline text="if (utils.getBoolean (parent.flNumberedSubs)) { //6/15/17 by DW">
							<outline text="ulAddedClass = &quot; ulNumberedSubs&quot;;"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="if (utils.getBoolean (parent.flBulletedSubs)) { //5/15/18 by DW">
								<outline text="ulAddedClass = &quot; ulBulletedSubs&quot;;"/>
								<outline text="}"/>
								</outline>
							<outline text="else {">
								<outline text="if (utils.getBoolean (parent.flCodeSubs)) { //4/24/20 by DW">
									<outline text="ulAddedClass = &quot; ulCodeSubs&quot;;"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="if (utils.getBoolean (parent.collapse)) { //5/15/18 by DW">
							<outline text="ulCollapsedClass = &quot; ulCollapsed&quot;;"/>
							<outline text="}"/>
							</outline>
						<outline text="add (&quot;&lt;ul class=\&quot;ulLevel&quot; + ulLevel + ulAddedClass + ulCollapsedClass + &quot;\&quot;&gt;&quot;); indentlevel++;"/>
						<outline text="for (var i = 0; i &lt; parent.subs.length; i++) {">
							<outline text="var item = parent.subs [i];"/>
							<outline text="if (notComment (item)) { //11/5/20 by DW">
								<outline text="add (&quot;&lt;li&quot; + getDataAtts (item) + &quot;&gt;&quot; + getRenderedText (item, undefined, urlStoryPage) + &quot;&lt;/li&gt;&quot;);"/>
								<outline text="if (item.subs !== undefined) {">
									<outline text="add (getItemSubs (item, ulLevel + 1, urlStoryPage));"/>
									<outline text="}"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="add (&quot;&lt;/ul&gt;&quot;); indentlevel--;"/>
						<outline text="return (htmltext);"/>
						<outline text="}" created="Fri, 29 Oct 2021 15:24:45 GMT"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function oldSchoolStyleOutlineRender (item, flMarkdown, urlPermalink, permalinkString, flExpanded) {" created="Wed, 09 Mar 2022 15:43:01 GMT">
					<outline text="var htmltext = &quot;&quot;, indentlevel = 0;"/>
					<outline text="var urlpage = undefined; //this is in the calling environment in old school" created="Wed, 09 Mar 2022 17:06:46 GMT"/>
					<outline text="" created="Wed, 09 Mar 2022 17:06:51 GMT"/>
					<outline text="function add (s) {">
						<outline text="htmltext += filledString (&quot;\t&quot;, indentlevel) + s + &quot;\n&quot;;"/>
						<outline text="}"/>
						</outline>
					<outline text="" created="Wed, 09 Mar 2022 16:06:33 GMT"/>
					<outline text="console.log (&quot;oldSchoolStyleOutlineRender: hello&quot;);" isComment="true" created="Wed, 09 Mar 2022 15:43:25 GMT"/>
					<outline text="" created="Wed, 09 Mar 2022 16:03:53 GMT"/>
					<outline text="if (item.subs === undefined) {">
						<outline text="add (&quot;&lt;div class=\&quot;divSingularItem\&quot;&quot; + getDataAtts (item) + &quot;&gt;&quot; + getRenderedText (item, false, urlpage) + &quot;&lt;/div&gt;&quot;);"/>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="add (&quot;&lt;div class=\&quot;divTitledItem\&quot;&gt;&quot;); indentlevel++;"/>
						<outline text="add (&quot;&lt;div class=\&quot;divTitle\&quot;&gt;&quot; + getRenderedText (item, true) + &quot;&lt;/div&gt;&quot;);"/>
						<outline text="var itemsubtext = getItemSubs (item, 0, item.permalink);"/>
						<outline text="var itemsubmarkdown = getItemSubsMarkdown (item, 0);" isComment="true"/>
						<outline text="add (itemsubtext);"/>
						<outline text="add (&quot;&lt;/div&gt;&quot;); indentlevel--;"/>
						<outline text="}"/>
						</outline>
					<outline text="return (htmltext);" created="Wed, 09 Mar 2022 16:03:54 GMT"/>
					<outline text="}" created="Wed, 09 Mar 2022 15:43:07 GMT"/>
					</outline>
				</outline>
			<outline text="riverviewer.css">
				<outline text=".divRiverContainer {" created="Mon, 25 Apr 2022 16:06:30 GMT">
					<outline text="}" created="Mon, 25 Apr 2022 16:06:34 GMT"/>
					</outline>
				<outline text=".divRiverDisplay {">
					<outline text="width: 530px;"/>
					<outline text="margin-top: 10px;" created="Mon, 25 Apr 2022 16:08:13 GMT"/>
					<outline text="margin-left: auto;"/>
					<outline text="margin-right: auto;"/>
					<outline text="margin-top: 50px;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Mon, 25 Apr 2022 16:06:31 GMT"/>
				<outline text=".divRiverDisplay a {">
					<outline text="color: #1E68A6;"/>
					<outline text="}" created="Mon, 18 Apr 2022 14:27:12 GMT"/>
					</outline>
				<outline text="" created="Mon, 18 Apr 2022 16:40:07 GMT"/>
				<outline text=".divRiverSection {">
					<outline text="padding: 0.5em 0 0; " isComment="true"/>
					<outline text="padding-top: 8px;" created="Thu, 21 Apr 2022 16:05:18 GMT"/>
					<outline text="border-top: 1px solid #bbb; "/>
					<outline text="margin: 2em 0 0;" isComment="true"/>
					<outline text="margin-bottom: 40px;" created="Mon, 18 Apr 2022 16:40:27 GMT"/>
					<outline text="border: 1px solid gainsboro;" isComment="true" created="Mon, 18 Apr 2022 20:31:30 GMT"/>
					<outline text="background-color: whitesmoke;" isComment="true" created="Mon, 18 Apr 2022 20:59:16 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRiverSection .divSectionHeader {">
					<outline text="font-size: 18px;"/>
					<outline text="font-weight: bold;"/>
					<outline text="line-height: 120%;"/>
					<outline text="margin-bottom: 7px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRiverSection .spFeedTitle {">
					<outline text="float: left;"/>
					<outline text="padding: 0 8px 0 0;"/>
					<outline text="margin: -17px 0 0 0;"/>
					<outline text="font-size: 12px;"/>
					<outline text="font-weight: normal;"/>
					<outline text="line-height: 1.2em;"/>
					<outline text="background: &lt;%uiBackgroundColor%&gt;;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRiverSection .spFeedPubDate {">
					<outline text="float: right;"/>
					<outline text="padding: 0 0 0 8px;"/>
					<outline text="margin: -17px 0 0 0;"/>
					<outline text="font-size: 12px;"/>
					<outline text="font-weight: normal;"/>
					<outline text="line-height: 1.2em;"/>
					<outline text="background: &lt;%uiBackgroundColor%&gt;;"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Mon, 18 Apr 2022 14:53:19 GMT"/>
				<outline text=".divRiverItem {" created="Mon, 18 Apr 2022 16:41:52 GMT">
					<outline text="margin-bottom: 20px;" created="Mon, 18 Apr 2022 16:40:27 GMT"/>
					<outline text="margin-left: 22px;" created="Mon, 25 Apr 2022 16:20:56 GMT"/>
					<outline text="border: 1px dotted gainsboro;" isComment="true" created="Mon, 18 Apr 2022 20:31:30 GMT"/>
					<outline text="}" created="Mon, 18 Apr 2022 16:42:02 GMT"/>
					</outline>
				<outline text=".itemHightlighted {" created="Fri, 22 Apr 2022 21:17:46 GMT">
					<outline text="cursor: pointer;" created="Sat, 23 Apr 2022 13:16:36 GMT"/>
					<outline text="background-color: whitesmoke;" created="Fri, 22 Apr 2022 21:18:00 GMT"/>
					<outline text="border: 1px solid green;" isComment="true" created="Mon, 18 Apr 2022 20:31:30 GMT"/>
					<outline text="}" created="Fri, 22 Apr 2022 21:17:51 GMT"/>
					</outline>
				<outline text=".divRiverItemBody {" created="Mon, 18 Apr 2022 20:07:57 GMT">
					<outline text="max-height: &lt;%maxBodyTextHeight%&gt;;" created="Sat, 26 Mar 2022 15:36:54 GMT"/>
					<outline text="overflow: clip;" created="Sat, 26 Mar 2022 15:40:18 GMT"/>
					<outline text="padding-right: 10px;" created="Mon, 18 Apr 2022 16:58:53 GMT"/>
					<outline text="border: 1px solid gainsboro;" isComment="true" created="Mon, 18 Apr 2022 20:31:30 GMT"/>
					<outline text="}" created="Mon, 18 Apr 2022 20:08:00 GMT"/>
					</outline>
				<outline text=".divRiverItemBody a {" created="Mon, 18 Apr 2022 20:07:57 GMT">
					<outline text="}" created="Mon, 18 Apr 2022 20:08:00 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter {" created="Sat, 26 Mar 2022 16:38:54 GMT">
					<outline text="margin-top: 10px;" created="Mon, 18 Apr 2022 17:01:34 GMT"/>
					<outline text="border: 1px solid gainsboro;" isComment="true" created="Tue, 19 Apr 2022 16:28:56 GMT"/>
					<outline text="height: 20px;" created="Mon, 18 Apr 2022 15:39:23 GMT"/>
					<outline text="}" created="Sat, 26 Mar 2022 16:38:57 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spLowerLeftStuff {" created="Fri, 06 May 2022 15:16:37 GMT">
					<outline text="float: left;" created="Mon, 18 Apr 2022 15:29:01 GMT"/>
					<outline text="}" created="Fri, 06 May 2022 15:16:50 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spRiverItemPermalink {" created="Mon, 18 Apr 2022 15:28:44 GMT">
					<outline text="display: none; /* temporary? -- 5/6/22 by DW */" created="Fri, 06 May 2022 15:29:53 GMT"/>
					<outline text="margin-top: 15px;" isComment="true" created="Tue, 19 Apr 2022 16:29:11 GMT"/>
					<outline text="float: left;" isComment="true" created="Mon, 18 Apr 2022 15:29:01 GMT"/>
					<outline text="}" created="Mon, 18 Apr 2022 15:28:56 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spLikes {" created="Fri, 06 May 2022 15:23:21 GMT">
					<outline text="color: #1E68A6;"/>
					<outline text="cursor: pointer;" created="Fri, 06 May 2022 15:25:23 GMT"/>
					<outline text="}" created="Fri, 06 May 2022 15:23:27 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spDataButton {" created="Mon, 28 Mar 2022 15:54:00 GMT">
					<outline text="margin-top: 15px;" isComment="true" created="Tue, 19 Apr 2022 16:29:11 GMT"/>
					<outline text="float: right;" created="Mon, 18 Apr 2022 15:29:01 GMT"/>
					<outline text="cursor: pointer;" created="Mon, 18 Apr 2022 15:47:51 GMT"/>
					<outline text="}" created="Mon, 28 Mar 2022 15:54:03 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spThumb {" created="Sat, 26 Mar 2022 16:44:47 GMT">
					<outline text="display: none; /* temporarily turned off */" created="Mon, 18 Apr 2022 15:41:08 GMT"/>
					<outline text="}" created="Sat, 26 Mar 2022 16:45:03 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spEnclosureButton {" created="Mon, 28 Mar 2022 15:54:00 GMT">
					<outline text="display: none; /* temporarily turned off */" created="Mon, 18 Apr 2022 15:41:08 GMT"/>
					<outline text="}" created="Mon, 28 Mar 2022 15:54:03 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spShareButton {" created="Mon, 28 Mar 2022 15:54:00 GMT">
					<outline text="display: none; /* temporarily turned off */" created="Mon, 18 Apr 2022 15:41:08 GMT"/>
					<outline text="}" created="Mon, 28 Mar 2022 15:54:03 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .spPopupMenu {" created="Wed, 20 Apr 2022 15:36:41 GMT">
					<outline text="float: right;" created="Wed, 20 Apr 2022 15:40:29 GMT"/>
					<outline text="font-size: 1.5em;" created="Wed, 20 Apr 2022 15:45:35 GMT"/>
					<outline text="padding-right: 3px;" created="Wed, 20 Apr 2022 15:45:26 GMT"/>
					<outline text="padding-bottom: 5px;" isComment="true" created="Wed, 20 Apr 2022 15:46:46 GMT"/>
					<outline text="color: #1E68A6;"/>
					<outline text="opacity: .8;" isComment="true" created="Wed, 20 Apr 2022 15:46:38 GMT"/>
					<outline text="}" created="Wed, 20 Apr 2022 15:36:54 GMT"/>
					</outline>
				<outline text=".divRiverItemFooter .popupIcon {" created="Fri, 22 Apr 2022 13:36:07 GMT">
					<outline text="cursor: pointer;" created="Fri, 22 Apr 2022 13:36:15 GMT"/>
					<outline text="}" created="Fri, 22 Apr 2022 13:36:11 GMT"/>
					</outline>
				<outline text=".spPopupMenu .btn {">
					<outline text="padding: 0;"/>
					<outline text="padding-top: 3px;" created="Thu, 21 Apr 2022 16:11:27 GMT"/>
					<outline text="padding-right: 5px;" created="Thu, 21 Apr 2022 16:11:35 GMT"/>
					<outline text="border: none;"/>
					<outline text="background-color: inherit;"/>
					<outline text="background-image: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spPopupMenu .dropdown-menu {">
					<outline text="font-size: 14px;" created="Wed, 20 Apr 2022 16:13:56 GMT"/>
					<outline text="color: black;" created="Wed, 20 Apr 2022 16:14:00 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Mon, 18 Apr 2022 16:38:22 GMT"/>
				<outline text=".divRiverItem .divMoreButton {" created="Sat, 26 Mar 2022 16:34:22 GMT">
					<outline text="padding-top: 1px;" created="Fri, 22 Apr 2022 15:47:41 GMT"/>
					<outline text="text-align: center;" created="Tue, 19 Apr 2022 16:33:16 GMT"/>
					<outline text="display: none;" created="Tue, 19 Apr 2022 16:32:37 GMT"/>
					<outline text="}" created="Sat, 26 Mar 2022 16:34:30 GMT"/>
					</outline>
				<outline text=".divMoreButtonDisabled {" created="Mon, 11 Apr 2022 19:42:21 GMT">
					<outline text="display: none;" created="Tue, 19 Apr 2022 16:32:37 GMT"/>
					<outline text="}" created="Mon, 11 Apr 2022 19:42:32 GMT"/>
					</outline>
				<outline text=".bodyTruncated {" created="Tue, 19 Apr 2022 19:32:14 GMT">
					<outline text="border-bottom: 1px solid gainsboro;" created="Tue, 19 Apr 2022 19:32:23 GMT"/>
					<outline text="}" created="Tue, 19 Apr 2022 19:32:17 GMT"/>
					</outline>
				<outline text="" created="Mon, 11 Apr 2022 19:27:52 GMT"/>
				<outline text=".imgFavIcon {">
					<outline text="position: relative;"/>
					<outline text="top: -1px;"/>
					<outline text="float: left;"/>
					<outline text="margin: 0 6px 0 -22px;" isComment="true"/>
					<outline text="" created="Mon, 25 Apr 2022 16:17:31 GMT"/>
					<outline text="margin-top: 0;" created="Mon, 25 Apr 2022 16:17:31 GMT"/>
					<outline text="margin-left: -22px;" isComment="true" created="Mon, 25 Apr 2022 16:17:31 GMT"/>
					<outline text="margin-bottom: 0;" created="Mon, 25 Apr 2022 16:17:31 GMT"/>
					<outline text="margin-right: 6px;" created="Mon, 25 Apr 2022 16:17:31 GMT"/>
					<outline text="" created="Mon, 25 Apr 2022 16:17:31 GMT"/>
					<outline text="border: 0;"/>
					<outline text="vertical-align: middle;"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Tue, 19 Apr 2022 15:36:02 GMT"/>
				<outline text=".divSingularItem .aLink {" isComment="true" created="Mon, 11 Apr 2022 19:27:04 GMT">
					<outline text="margin-left: .3em;" created="Mon, 11 Apr 2022 19:27:56 GMT"/>
					<outline text="}" created="Mon, 11 Apr 2022 19:27:09 GMT"/>
					</outline>
				<outline text=".spMoreButtonDisabled {" isComment="true" created="Mon, 11 Apr 2022 19:42:21 GMT">
					<outline text="opacity: 0.2;" created="Mon, 11 Apr 2022 19:42:24 GMT"/>
					<outline text="}" created="Mon, 11 Apr 2022 19:42:32 GMT"/>
					</outline>
				<outline text=".divTweetInRiver {" isComment="true">
					<outline text="color: green;"/>
					<outline text="visibility: hidden;"/>
					<outline text="}"/>
					</outline>
				<outline text="" isComment="true"/>
				<outline text=".divItem {" isComment="true">
					<outline text="margin-top: 10px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divItemHeader {" isComment="true">
					<outline text="font-family: &quot;Ubuntu&quot;;"/>
					<outline text="font-weight: bold;"/>
					<outline text="line-height: 125%;"/>
					<outline text="margin-bottom: 7px;"/>
					<outline text="color: #65798D;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divItemFooter {" isComment="true">
					<outline text="clear: both;"/>
					<outline text="margin: 0 20px 0 0;"/>
					<outline text="font-size: 0.6875em; "/>
					<outline text="color: #666;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divItemDescription {" isComment="true">
					<outline text="margin: 0 0 5px;"/>
					<outline text="font-size: 0.85em;"/>
					<outline text="line-height: 135%;"/>
					<outline text="color: #333;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spTimeDifference {" isComment="true">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 12px;"/>
					<outline text="color: &lt;%uiTextColor%&gt;;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spShareLink, .spEnclosureLink {" isComment="true">
					<outline text="font-family: Ubuntu;" isComment="true"/>
					<outline text="margin-left: .5em;"/>
					<outline text="cursor: pointer;"/>
					<outline text="font-size: 12px;"/>
					<outline text="opacity: 0.5;"/>
					<outline text="}"/>
					</outline>
				<outline text=".spShareLink a, .spEnclosureLink a {" isComment="true">
					<outline text="color: silver;"/>
					<outline text="text-decoration: none;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divInterItemSpacer {" isComment="true">
					<outline text="height: 10px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRiverTabs {" isComment="true">
					<outline text="font-family: Ubuntu;"/>
					<outline text="font-size: 16px;"/>
					<outline text="font-weight: bold;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRiverTabs .active {" isComment="true">
					<outline text="font-weight: bold;"/>
					<outline text="text-transform: uppercase;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRiverTabs a {" isComment="true">
					<outline text="color: &lt;%uiTextColor%&gt;;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRiverTabs .nav-tabs &gt; .active &gt; a, .nav-tabs &gt; .active &gt; a:hover, .nav-tabs &gt; .active &gt; a:focus {" isComment="true">
					<outline text="background-color: whitesmoke;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divVersionNumber {" isComment="true">
					<outline text="font-family: Ubuntu;"/>
					<outline text="}"/>
					</outline>
				<outline text=".divRenderedOutline {" isComment="true">
					<outline text="font-family: &quot;Ubuntu&quot;;" isComment="true"/>
					<outline text="font-size: 18px;" isComment="true"/>
					<outline text="line-height: 150%;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".imgFavIcon img {" isComment="true" created="Sat, 16 Apr 2022 16:02:57 GMT">
					<outline text="width: 16px;" created="Sat, 16 Apr 2022 16:41:37 GMT"/>
					<outline text="height: 16px;" created="Sat, 16 Apr 2022 16:41:37 GMT"/>
					<outline text="}" created="Sat, 16 Apr 2022 16:41:33 GMT"/>
					</outline>
				</outline>
			<outline text="riverviewer.js">
				<outline text="function displayTraditionalRiver (feedUrl, callback) {" created="Sat, 16 Apr 2022 15:54:19 GMT">
					<outline text="Changes" isComment="true" created="Tue, 03 May 2022 13:20:11 GMT">
						<outline text="5/3/22; 9:20:13 AM by DW" created="Tue, 03 May 2022 13:20:12 GMT">
							<outline text="When you want to edit the text of an item you authored, click on the bodyEditor, not the item. If it were the item, there would be no way to access the popup menu. " created="Tue, 03 May 2022 13:20:13 GMT"/>
							</outline>
						</outline>
					<outline text="const chArrowDown = &quot;&lt;i class=\&quot;fa fa-arrow-down\&quot;&gt;&lt;/i&gt;&quot;;" created="Wed, 20 Apr 2022 14:05:05 GMT"/>
					<outline text="const chArrowUp = &quot;&lt;i class=\&quot;fa fa-arrow-up\&quot;&gt;&lt;/i&gt;&quot;;" created="Wed, 20 Apr 2022 14:05:05 GMT"/>
					<outline text="var idArray = new Array (); //the ids of all the items in the river" created="Fri, 06 May 2022 17:18:55 GMT"/>
					<outline text="" created="Wed, 20 Apr 2022 14:05:05 GMT"/>
					<outline text="function replaceChild (parent, newChild) {" created="Fri, 25 Mar 2022 14:26:17 GMT">
						<outline text="Changes" isComment="true" created="Fri, 25 Mar 2022 14:26:40 GMT">
							<outline text="3/25/22; 10:26:42 AM by DW" created="Fri, 25 Mar 2022 14:26:41 GMT">
								<outline text="An item with one child, has that child replaced." created="Fri, 25 Mar 2022 14:26:42 GMT"/>
								</outline>
							</outline>
						<outline text="$(parent).empty ();" created="Fri, 25 Mar 2022 14:26:54 GMT"/>
						<outline text="$(parent).append (newChild);" created="Fri, 25 Mar 2022 14:27:07 GMT"/>
						<outline text="}" created="Fri, 25 Mar 2022 14:26:31 GMT"/>
						</outline>
					<outline text="function getTitleForDebugging (feedItem) {" created="Sat, 02 Apr 2022 14:30:16 GMT">
						<outline text="var title = &quot;&quot;;" created="Mon, 28 Mar 2022 15:26:23 GMT"/>
						<outline text="if (feedItem.title !== undefined) {" created="Mon, 28 Mar 2022 15:26:24 GMT">
							<outline text="title = feedItem.title;" created="Mon, 28 Mar 2022 15:26:53 GMT"/>
							<outline text="}" created="Mon, 28 Mar 2022 15:26:52 GMT"/>
							</outline>
						<outline text="else {" created="Mon, 28 Mar 2022 15:27:01 GMT">
							<outline text="if (feedItem.description !== undefined) {" created="Mon, 28 Mar 2022 15:26:24 GMT">
								<outline text="title = feedItem.description;" created="Mon, 28 Mar 2022 15:26:53 GMT"/>
								<outline text="}" created="Mon, 28 Mar 2022 15:26:52 GMT"/>
								</outline>
							<outline text="}" created="Mon, 28 Mar 2022 15:27:03 GMT"/>
							</outline>
						<outline text="title = maxStringLength (stripMarkup (title), 40, true, true);" created="Mon, 28 Mar 2022 15:30:42 GMT"/>
						<outline text="return (title);" created="Sat, 02 Apr 2022 14:30:36 GMT"/>
						<outline text="}" created="Sat, 02 Apr 2022 14:30:24 GMT"/>
						</outline>
					<outline text="function getDivRiverSection (aFeed) {" created="Sat, 16 Apr 2022 16:36:05 GMT">
						<outline text="var theFeed = undefined;" created="Sun, 17 Apr 2022 14:12:39 GMT"/>
						<outline text="" created="Thu, 21 Apr 2022 14:15:20 GMT"/>
						<outline text="function getTheFeed (callback) {" created="Thu, 31 Mar 2022 15:25:25 GMT">
							<outline text="if (theFeed === undefined) {" created="Thu, 31 Mar 2022 15:25:58 GMT">
								<outline text="getFeedInfo (aFeed.feedUrl, function (err, theFeedFromCallback) {" created="Thu, 31 Mar 2022 15:27:22 GMT">
									<outline text="if (err) {" created="Thu, 31 Mar 2022 15:46:34 GMT">
										<outline text="callback (err);" created="Thu, 31 Mar 2022 15:45:13 GMT"/>
										<outline text="}" created="Thu, 31 Mar 2022 15:46:36 GMT"/>
										</outline>
									<outline text="else {" created="Thu, 31 Mar 2022 15:46:37 GMT">
										<outline text="theFeed = theFeedFromCallback; " created="Thu, 31 Mar 2022 15:45:38 GMT"/>
										<outline text="callback ();" created="Thu, 31 Mar 2022 15:46:50 GMT"/>
										<outline text="}" created="Thu, 31 Mar 2022 15:46:40 GMT"/>
										</outline>
									<outline text="});" created="Thu, 31 Mar 2022 15:44:54 GMT"/>
									</outline>
								<outline text="}" created="Thu, 31 Mar 2022 15:26:40 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 31 Mar 2022 15:26:44 GMT">
								<outline text="callback ();" created="Thu, 31 Mar 2022 15:44:14 GMT"/>
								<outline text="}" created="Thu, 31 Mar 2022 15:26:46 GMT"/>
								</outline>
							<outline text="}" created="Thu, 31 Mar 2022 15:25:53 GMT"/>
							</outline>
						<outline text="function getUrlIconImage () {" created="Fri, 25 Mar 2022 14:48:03 GMT">
							<outline text="Changes" isComment="true" created="Wed, 06 Apr 2022 17:19:10 GMT">
								<outline text="4/6/22; 1:19:13 PM by DW" created="Wed, 06 Apr 2022 17:19:12 GMT">
									<outline text="Use the Google favicon service." created="Wed, 06 Apr 2022 17:19:13 GMT">
										<outline text="https://t2.gstatic.com/faviconV2?client=SOCIAL&amp;type=FAVICON&amp;fallback_opts=TYPE,SIZE,URL&amp;url=http://yahoo.com&amp;size=64" created="Wed, 06 Apr 2022 17:16:05 GMT"/>
										</outline>
									</outline>
								</outline>
							<outline text="var url = &quot;&lt;img class=\&quot;imgFavIcon\&quot; src=\&quot;http://www.google.com/s2/favicons?domain=&quot; + getDomainFromUrl (aFeed.feedUrl) + &quot;\&quot;&gt;&quot;;" created="Sun, 17 Apr 2022 14:22:36 GMT"/>
							<outline text="return (url);" created="Wed, 06 Apr 2022 17:17:27 GMT"/>
							<outline text="}" created="Fri, 25 Mar 2022 14:48:11 GMT"/>
							</outline>
						<outline text="function getFeedHtmlLink () {" created="Sun, 17 Apr 2022 14:46:42 GMT">
							<outline text="var theLink;" created="Sun, 17 Apr 2022 15:03:20 GMT"/>
							<outline text="if (theFeed.link === undefined) {" created="Sun, 17 Apr 2022 15:03:20 GMT">
								<outline text="theLink = theFeed.title;" created="Sun, 17 Apr 2022 15:03:48 GMT"/>
								<outline text="}" created="Sun, 17 Apr 2022 15:03:28 GMT"/>
								</outline>
							<outline text="else {" created="Sun, 17 Apr 2022 15:03:28 GMT">
								<outline text="theLink = &quot;&lt;a href=\&quot;&quot; + theFeed.link + &quot;\&quot; target=\&quot;_blank\&quot;&gt;&quot; + theFeed.title + &quot;&lt;/a&gt;&quot;;" created="Sun, 17 Apr 2022 14:46:54 GMT"/>
								<outline text="}" created="Sun, 17 Apr 2022 15:03:31 GMT"/>
								</outline>
							<outline text="return (theLink);" created="Sun, 17 Apr 2022 14:47:09 GMT"/>
							<outline text="}" created="Sun, 17 Apr 2022 14:46:49 GMT"/>
							</outline>
						<outline text="function getFeedRssLink () {" created="Sun, 17 Apr 2022 14:46:42 GMT">
							<outline text="var url = &quot;http://xmlviewer.scripting.com/?url=&quot; + encodeURIComponent (aFeed.feedUrl);" created="Sun, 17 Apr 2022 14:46:54 GMT"/>
							<outline text="var theLink = &quot;&lt;a href=\&quot;&quot; + url + &quot;\&quot; target=\&quot;_blank\&quot;&gt; (Feed)&lt;/a&gt;&quot;;" created="Sun, 17 Apr 2022 14:46:54 GMT"/>
							<outline text="var spFeedLink = &quot;&lt;span class=\&quot;spFeedLink\&quot;&gt;&quot; + theLink + &quot;&lt;/span&gt;&quot;;" created="Sat, 16 Apr 2022 16:42:28 GMT"/>
							<outline text="return (spFeedLink);" created="Sun, 17 Apr 2022 14:47:09 GMT"/>
							<outline text="}" created="Sun, 17 Apr 2022 14:46:49 GMT"/>
							</outline>
						<outline text="" created="Sun, 17 Apr 2022 14:18:34 GMT"/>
						<outline text="var divRiverSection = $(&quot;&lt;div class=\&quot;divRiverSection\&quot; data-feedUrl=\&quot;&quot; + aFeed.feedUrl + &quot;\&quot;&gt;&lt;/div&gt;&quot;);" created="Sat, 16 Apr 2022 16:26:07 GMT"/>
						<outline text="var divSectionHeader = $(&quot;&lt;div class=\&quot;divSectionHeader\&quot;&gt;&lt;/div&gt;&quot;);" created="Sat, 16 Apr 2022 16:36:10 GMT"/>
						<outline text="var spFeedPubDate = $(&quot;&lt;span class=\&quot;spFeedPubDate\&quot;&gt;&lt;/span&gt;&quot;);" created="Sat, 16 Apr 2022 16:39:19 GMT"/>
						<outline text="var spFeedTitle = $(&quot;&lt;span class=\&quot;spFeedTitle\&quot;&gt;&lt;/span&gt;&quot;);" created="Sat, 16 Apr 2022 16:36:10 GMT"/>
						<outline text="$(divSectionHeader).append (spFeedPubDate);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
						<outline text="$(divSectionHeader).append (spFeedTitle);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
						<outline text="$(divRiverSection).append (divSectionHeader);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
						<outline text="$(divRiverSection).on (&quot;getStatus&quot;, function (event, theStatus) { //what we tell the outside world about the feed" created="Wed, 14 Apr 2021 19:50:46 GMT">
							<outline text="theStatus.feedInfo = aFeed;" created="Wed, 20 Apr 2022 17:05:01 GMT"/>
							<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
							</outline>
						<outline text="" created="Fri, 22 Apr 2022 21:16:15 GMT"/>
						<outline text="$(divRiverSection).mouseenter (function (ev) {" isComment="true">
							<outline text="$(divRiverSection).addClass (&quot;itemHightlighted&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
							<outline text="ev.stopPropagation ();" isComment="true"/>
							<outline text="});"/>
							</outline>
						<outline text="$(divRiverSection).mouseleave (function () {" isComment="true">
							<outline text="$(divRiverSection).removeClass (&quot;itemHightlighted&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
							<outline text="});"/>
							</outline>
						<outline text="" isComment="true" created="Thu, 21 Apr 2022 14:14:23 GMT"/>
						<outline text="getTheFeed (function (err) {" created="Sun, 17 Apr 2022 14:14:41 GMT">
							<outline text="if (!err) {" created="Sun, 17 Apr 2022 14:14:56 GMT">
								<outline text="replaceChild (spFeedTitle, getUrlIconImage () + getFeedHtmlLink () + getFeedRssLink ()); " created="Fri, 25 Mar 2022 14:27:45 GMT"/>
								<outline text="replaceChild (spFeedPubDate, dateFormat (theFeed.pubDate, &quot;timeDate&quot;));" created="Fri, 25 Mar 2022 14:27:45 GMT"/>
								<outline text="}" created="Sun, 17 Apr 2022 14:15:01 GMT"/>
								</outline>
							<outline text="});" created="Sun, 17 Apr 2022 14:14:52 GMT"/>
							</outline>
						<outline text="" created="Sun, 17 Apr 2022 14:14:41 GMT"/>
						<outline text="return (divRiverSection);" created="Sat, 16 Apr 2022 16:36:29 GMT"/>
						<outline text="}" created="Sat, 16 Apr 2022 16:36:11 GMT"/>
						</outline>
					<outline text="function getDivRiverItem (feedItem) {" created="Sun, 17 Apr 2022 13:30:09 GMT">
						<outline text="var flMoreButtonEnabled = true;" created="Sat, 26 Mar 2022 16:27:58 GMT"/>
						<outline text="var flMoreButtonExpands = true;" created="Sat, 26 Mar 2022 16:27:58 GMT"/>
						<outline text="var flMoreButtonHasBeenClicked = false;" created="Thu, 21 Apr 2022 15:13:58 GMT"/>
						<outline text="var moreButton, permalinkButton, divRiverItemBody, likes;" created="Tue, 05 Apr 2022 15:16:38 GMT"/>
						<outline text="var theFeed = undefined;" created="Sun, 17 Apr 2022 14:12:39 GMT"/>
						<outline text="" created="Sat, 30 Apr 2022 15:09:35 GMT"/>
						<outline text="function itemIsFromUsersBlog () {" created="Sat, 30 Apr 2022 15:09:35 GMT">
							<outline text="const usersBlogUrl = getUsersBlogUrl ();" created="Thu, 05 May 2022 20:22:44 GMT"/>
							<outline text="var usersBlogUrl = appConsts.urlForFeeds + localStorage.twScreenName + &quot;.xml&quot;;" isComment="true" created="Sat, 30 Apr 2022 15:13:56 GMT"/>
							<outline text="return (feedItem.feedUrl == usersBlogUrl); " created="Sat, 30 Apr 2022 15:11:01 GMT"/>
							<outline text="}" created="Sat, 30 Apr 2022 15:10:18 GMT"/>
							</outline>
						<outline text="function getTheFeed (callback) {" created="Thu, 31 Mar 2022 15:25:25 GMT">
							<outline text="if (theFeed === undefined) {" created="Thu, 31 Mar 2022 15:25:58 GMT">
								<outline text="getFeedInfo (feedItem.feedUrl, function (err, theFeedFromCallback) {" created="Thu, 31 Mar 2022 15:27:22 GMT">
									<outline text="if (err) {" created="Thu, 31 Mar 2022 15:46:34 GMT">
										<outline text="callback (err);" created="Thu, 31 Mar 2022 15:45:13 GMT"/>
										<outline text="}" created="Thu, 31 Mar 2022 15:46:36 GMT"/>
										</outline>
									<outline text="else {" created="Thu, 31 Mar 2022 15:46:37 GMT">
										<outline text="theFeed = theFeedFromCallback; " created="Thu, 31 Mar 2022 15:45:38 GMT"/>
										<outline text="callback ();" created="Thu, 31 Mar 2022 15:46:50 GMT"/>
										<outline text="}" created="Thu, 31 Mar 2022 15:46:40 GMT"/>
										</outline>
									<outline text="});" created="Thu, 31 Mar 2022 15:44:54 GMT"/>
									</outline>
								<outline text="}" created="Thu, 31 Mar 2022 15:26:40 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 31 Mar 2022 15:26:44 GMT">
								<outline text="callback ();" created="Thu, 31 Mar 2022 15:44:14 GMT"/>
								<outline text="}" created="Thu, 31 Mar 2022 15:26:46 GMT"/>
								</outline>
							<outline text="}" created="Thu, 31 Mar 2022 15:25:53 GMT"/>
							</outline>
						<outline text="function getMoreButton () {" created="Sat, 26 Mar 2022 16:47:29 GMT">
							<outline text="moreButton = $(&quot;&lt;div class=\&quot;divMoreButton\&quot;&gt;MORE &quot; + chArrowDown + &quot;&lt;/div&gt;&quot;);" created="Sat, 26 Mar 2022 16:30:22 GMT"/>
							<outline text="$(moreButton).click (function () {" created="Sat, 26 Mar 2022 16:46:30 GMT">
								<outline text="if (flMoreButtonEnabled) {" created="Mon, 11 Apr 2022 19:46:04 GMT">
									<outline text="var maxHeight, buttonText;" created="Sat, 26 Mar 2022 17:25:14 GMT"/>
									<outline text="flMoreButtonHasBeenClicked = true;" created="Thu, 21 Apr 2022 15:13:58 GMT"/>
									<outline text="if (flMoreButtonExpands) {" created="Sat, 26 Mar 2022 17:23:35 GMT">
										<outline text="maxHeight = $(divRiverItemBody).prop (&quot;scrollHeight&quot;);" created="Sat, 26 Mar 2022 15:53:26 GMT"/>
										<outline text="$(divRiverItemBody).removeClass (&quot;bodyTruncated&quot;);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
										<outline text="buttonText = &quot;LESS &quot; + chArrowUp;" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
										<outline text="}" created="Sat, 26 Mar 2022 17:23:39 GMT"/>
										</outline>
									<outline text="else {" created="Sat, 26 Mar 2022 17:23:40 GMT">
										<outline text="maxHeight = &quot;&lt;%maxBodyTextHeight%&gt;&quot;;" created="Sat, 26 Mar 2022 17:03:36 GMT"/>
										<outline text="buttonText = &quot;MORE &quot; + chArrowDown;" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
										<outline text="$(divRiverItemBody).addClass (&quot;bodyTruncated&quot;);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
										<outline text="}" created="Sat, 26 Mar 2022 17:23:42 GMT"/>
										</outline>
									<outline text="$(divRiverItemBody).css (&quot;max-height&quot;, maxHeight);" created="Sat, 26 Mar 2022 17:03:36 GMT"/>
									<outline text="$(moreButton).html (buttonText);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
									<outline text="flMoreButtonExpands = !flMoreButtonExpands;" created="Sat, 26 Mar 2022 17:23:43 GMT"/>
									<outline text="}" created="Mon, 11 Apr 2022 19:46:05 GMT"/>
									</outline>
								<outline text="else {" created="Mon, 11 Apr 2022 19:46:18 GMT">
									<outline text="speakerBeep ();" isComment="true" created="Mon, 11 Apr 2022 19:46:20 GMT"/>
									<outline text="}" created="Mon, 11 Apr 2022 19:46:24 GMT"/>
									</outline>
								<outline text="});" created="Sat, 26 Mar 2022 16:46:39 GMT"/>
								</outline>
							<outline text="$(moreButton).hover (function () {" created="Sat, 26 Mar 2022 16:46:30 GMT">
								<outline text="console.log (&quot;hover&quot;);" created="Fri, 08 Apr 2022 16:36:26 GMT"/>
								<outline text="});" created="Sat, 26 Mar 2022 16:46:39 GMT"/>
								</outline>
							<outline text="$(moreButton).mouseenter (function (ev) {">
								<outline text="if (flMoreButtonEnabled) {" created="Fri, 08 Apr 2022 17:33:42 GMT">
									<outline text="$(moreButton).css (&quot;font-weight&quot;, &quot;bold&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
									<outline text="$(moreButton).css (&quot;cursor&quot;, &quot;pointer&quot;);"/>
									<outline text="ev.stopPropagation ();"/>
									<outline text="}" created="Fri, 08 Apr 2022 17:33:45 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="$(moreButton).mouseleave (function () {">
								<outline text="if (flMoreButtonEnabled) {" created="Fri, 08 Apr 2022 17:33:42 GMT">
									<outline text="$(moreButton).css (&quot;font-weight&quot;, &quot;normal&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
									<outline text="$(moreButton).css (&quot;cursor&quot;, &quot;auto&quot;);"/>
									<outline text="}" created="Fri, 08 Apr 2022 17:33:45 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="return (moreButton);" created="Sat, 26 Mar 2022 16:47:39 GMT"/>
							<outline text="}" created="Sat, 26 Mar 2022 16:47:36 GMT"/>
							</outline>
						<outline text="function setupMoreButton () {" created="Tue, 19 Apr 2022 15:57:22 GMT">
							<outline text="if (!flMoreButtonHasBeenClicked) { //if the button has been clicked, the button stays enabled" created="Thu, 21 Apr 2022 15:15:06 GMT">
								<outline text="const scrollHeight = $(divRiverItemBody).prop (&quot;scrollHeight&quot;);" created="Sat, 26 Mar 2022 15:53:26 GMT"/>
								<outline text="const clientHeight = $(divRiverItemBody).prop (&quot;clientHeight&quot;);" created="Sat, 26 Mar 2022 15:53:26 GMT"/>
								<outline text="console.log (&quot;setMoreButton: scrollHeight == &quot; + scrollHeight + &quot;, clientHeight == &quot; + clientHeight);" isComment="true" created="Tue, 19 Apr 2022 15:45:15 GMT"/>
								<outline text="flMoreButtonEnabled = scrollHeight &gt; clientHeight;" created="Fri, 08 Apr 2022 17:33:06 GMT"/>
								<outline text="if (flMoreButtonEnabled) {" created="Sat, 26 Mar 2022 16:25:18 GMT">
									<outline text="$(moreButton).css (&quot;display&quot;, &quot;block&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
									<outline text="$(divRiverItemBody).addClass (&quot;bodyTruncated&quot;);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
									<outline text="}" created="Sat, 26 Mar 2022 16:25:24 GMT"/>
									</outline>
								<outline text="else {" created="Fri, 08 Apr 2022 16:41:24 GMT">
									<outline text="$(moreButton).css (&quot;display&quot;, &quot;none&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
									<outline text="$(divRiverItemBody).removeClass (&quot;bodyTruncated&quot;);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
									<outline text="}" created="Fri, 08 Apr 2022 16:41:27 GMT"/>
									</outline>
								<outline text="}" created="Thu, 21 Apr 2022 15:15:14 GMT"/>
								</outline>
							<outline text="}" created="Tue, 19 Apr 2022 15:57:28 GMT"/>
							</outline>
						<outline text="function setBodytext () {" created="Tue, 19 Apr 2022 15:32:53 GMT">
							<outline text="var bodytext;" created="Tue, 19 Apr 2022 13:23:22 GMT"/>
							<outline text="if (feedItem.outline !== undefined) {" created="Wed, 16 Mar 2022 14:24:26 GMT">
								<outline text="bodytext = oldSchoolStyleOutlineRender (feedItem.outline);" created="Wed, 16 Mar 2022 14:12:24 GMT"/>
								<outline text="}" created="Wed, 16 Mar 2022 14:24:33 GMT"/>
								</outline>
							<outline text="else {" created="Wed, 16 Mar 2022 14:24:34 GMT">
								<outline text="if (feedItem.title === undefined) { //4/11/22 by DW" created="Wed, 23 Mar 2022 16:03:40 GMT">
									<outline text="var link = &quot;&quot;;" created="Mon, 11 Apr 2022 19:17:09 GMT"/>
									<outline text="if (feedItem.link !== undefined) {" created="Mon, 11 Apr 2022 19:17:09 GMT">
										<outline text="link = &quot; &lt;a class=\&quot;aLink\&quot; href=\&quot;&quot; + feedItem.link + &quot;\&quot;&gt;(link)&lt;/a&gt;&quot;;" created="Mon, 11 Apr 2022 19:17:30 GMT"/>
										<outline text="}" created="Mon, 11 Apr 2022 19:17:18 GMT"/>
										</outline>
									<outline text="bodytext = &quot;&lt;div class=\&quot;divSingularItem\&quot;&gt;&quot; + feedItem.description + link + &quot;&lt;/div&gt;&quot;;" created="Wed, 23 Mar 2022 16:05:12 GMT"/>
									<outline text="}" created="Wed, 23 Mar 2022 16:03:51 GMT"/>
									</outline>
								<outline text="else {" created="Wed, 23 Mar 2022 16:04:31 GMT">
									<outline text="let title = feedItem.title;" created="Sun, 17 Apr 2022 15:09:53 GMT"/>
									<outline text="if (feedItem.link !== undefined) {" created="Sun, 17 Apr 2022 15:10:16 GMT">
										<outline text="title = &quot;&lt;a href=\&quot;&quot; + feedItem.link + &quot;\&quot; target=\&quot;_blank\&quot;&gt;&quot; + title + &quot;&lt;/a&gt;&quot;;" created="Sun, 17 Apr 2022 15:10:31 GMT"/>
										<outline text="}" created="Sun, 17 Apr 2022 15:10:25 GMT"/>
										</outline>
									<outline text="title = &quot;&lt;div class=\&quot;divTitle\&quot;&gt;&quot; + title + &quot;&lt;/div&gt;&quot;;" created="Sun, 17 Apr 2022 15:09:53 GMT"/>
									<outline text="" created="Sun, 17 Apr 2022 15:09:54 GMT"/>
									<outline text="let body = &quot;&lt;div class=\&quot;divTitledItemBody\&quot;&gt;&quot; + feedItem.description + &quot;&lt;/div&gt;&quot;;" created="Wed, 23 Mar 2022 16:08:09 GMT"/>
									<outline text="bodytext = &quot;&lt;div class=\&quot;divTitledItem\&quot;&gt;&quot; + title + body + &quot;&lt;/div&gt;&quot;;" created="Wed, 23 Mar 2022 16:05:12 GMT"/>
									<outline text="}" created="Wed, 23 Mar 2022 16:04:32 GMT"/>
									</outline>
								<outline text="}" created="Wed, 16 Mar 2022 14:24:36 GMT"/>
								</outline>
							<outline text="$(divRiverItemBody).empty ();" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
							<outline text="$(divRiverItemBody).append (bodytext);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
							<outline text="}" created="Tue, 19 Apr 2022 15:33:01 GMT"/>
							</outline>
						<outline text="function getRiverItemBody () {" created="Sat, 16 Apr 2022 22:20:09 GMT">
							<outline text="divRiverItemBody = $(&quot;&lt;div class=\&quot;divRiverItemBody\&quot;&gt;&lt;/div&gt;&quot;);" created="Sat, 16 Apr 2022 16:27:52 GMT"/>
							<outline text="setBodytext ();" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
							<outline text="return (divRiverItemBody);" created="Sat, 16 Apr 2022 22:23:24 GMT"/>
							<outline text="}" created="Sat, 16 Apr 2022 22:20:18 GMT"/>
							</outline>
						<outline text="function getLikeButton () {" isComment="true" created="Tue, 05 Apr 2022 14:59:22 GMT">
							<outline text="var likesButton = $(&quot;&lt;span class=\&quot;spThumb\&quot;&gt;&lt;/span&gt;&quot;);" created="Wed, 23 Mar 2022 16:56:00 GMT"/>
							<outline text="var likesIcon = $(&quot;&lt;i class=\&quot;fa fa-thumbs-up aLikeIcon\&quot;&gt;&lt;/i&gt;&quot;);" created="Wed, 23 Mar 2022 16:56:00 GMT"/>
							<outline text="var likesIcon = $(&quot;&lt;a class=\&quot;aLikeIcon\&quot;&gt;&lt;i class=\&quot;fa fa-thumbs-up\&quot;&gt;&lt;/i&gt;&lt;/a&gt;&quot;);" isComment="true" created="Wed, 23 Mar 2022 16:56:00 GMT"/>
							<outline text="likesButton.append (likesIcon);" created="Tue, 05 Apr 2022 15:03:07 GMT"/>
							<outline text="$(likesButton).click (function () {" created="Fri, 25 Mar 2022 14:34:30 GMT">
								<outline text="console.log (&quot;Clicked in the likes button.&quot;);" created="Fri, 25 Mar 2022 14:34:43 GMT"/>
								<outline text="});" created="Fri, 25 Mar 2022 14:34:39 GMT"/>
								</outline>
							<outline text="return (likesButton);" created="Tue, 05 Apr 2022 15:03:19 GMT"/>
							<outline text="}" created="Tue, 05 Apr 2022 14:59:30 GMT"/>
							</outline>
						<outline text="function updateWhen () {">
							<outline text="if (feedItem.pubDate !== undefined) {">
								<outline text="var theLink = getFacebookTimeString (feedItem.pubDate);" created="Wed, 23 Mar 2022 18:34:53 GMT"/>
								<outline text="if (feedItem.link !== undefined) {" created="Mon, 04 Apr 2022 19:55:16 GMT">
									<outline text="theLink = &quot;&lt;a href=\&quot;&quot; + feedItem.link + &quot;\&quot; target=\&quot;_blank\&quot;&gt;&quot; + theLink + &quot;&lt;/a&gt;&quot;" created="Mon, 04 Apr 2022 19:54:22 GMT"/>
									<outline text="}" created="Mon, 04 Apr 2022 19:55:31 GMT"/>
									</outline>
								<outline text="if ($(permalinkButton).html () !== theLink) {" created="Wed, 23 Mar 2022 18:34:54 GMT">
									<outline text="$(permalinkButton).html (theLink);" created="Wed, 23 Mar 2022 17:16:12 GMT"/>
									<outline text="}" created="Wed, 23 Mar 2022 18:35:19 GMT"/>
									</outline>
								<outline text="}"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="function getPermaLink () {" created="Mon, 18 Apr 2022 15:29:50 GMT">
							<outline text="var when = getFacebookTimeString (feedItem.pubDate);" created="Mon, 18 Apr 2022 15:29:57 GMT"/>
							<outline text="permalinkButton = $(&quot;&lt;span class=\&quot;spRiverItemPermalink\&quot;&gt;&quot; + when + &quot;&lt;/span&gt;&quot;);" created="Sat, 26 Mar 2022 16:30:22 GMT"/>
							<outline text="updateWhen ();"/>
							<outline text="$(permalinkButton).click (function () {" isComment="true" created="Sat, 26 Mar 2022 16:46:30 GMT">
								<outline text="viewDataDialog (getTitleForDebugging (feedItem), feedItem);" isComment="true" created="Mon, 28 Mar 2022 13:45:30 GMT"/>
								<outline text="console.log (&quot;Permalink&quot;);" created="Mon, 18 Apr 2022 15:30:53 GMT"/>
								<outline text="});" created="Sat, 26 Mar 2022 16:46:39 GMT"/>
								</outline>
							<outline text="return (permalinkButton);" created="Sat, 26 Mar 2022 16:47:39 GMT"/>
							<outline text="}" created="Mon, 18 Apr 2022 15:29:58 GMT"/>
							</outline>
						<outline text="" created="Sat, 07 May 2022 15:12:03 GMT"/>
						<outline text="function setLikesCount () {" created="Sat, 07 May 2022 15:12:04 GMT">
							<outline text="var theText = &quot;&lt;i class=\&quot;fa fa-thumbs-up\&quot;&gt;&lt;/i&gt; &quot; + feedItem.ctLikes;" created="Sat, 07 May 2022 15:12:35 GMT"/>
							<outline text="$(likes).html (theText);" created="Sat, 07 May 2022 15:13:00 GMT"/>
							<outline text="}" created="Sat, 07 May 2022 15:12:22 GMT"/>
							</outline>
						<outline text="" created="Fri, 06 May 2022 15:13:51 GMT"/>
						<outline text="function getLikesIcon () {" created="Fri, 06 May 2022 15:18:52 GMT">
							<outline text="likes = $(&quot;&lt;span class=\&quot;spLikes\&quot;&gt;&lt;/span&gt;&quot;);" created="Fri, 06 May 2022 15:14:13 GMT"/>
							<outline text="setLikesCount ();" created="Sat, 07 May 2022 15:13:22 GMT"/>
							<outline text="$(likes).mouseenter (function (ev) {">
								<outline text="var whenstart = new Date ();" created="Sat, 07 May 2022 15:27:56 GMT"/>
								<outline text="getLikes (feedItem.id, function (err, theLikes) {" created="Fri, 06 May 2022 16:36:18 GMT">
									<outline text="if (err) {" created="Fri, 06 May 2022 16:39:05 GMT">
										<outline text="console.log (err.message);" created="Fri, 06 May 2022 16:39:07 GMT"/>
										<outline text="}" created="Fri, 06 May 2022 16:39:13 GMT"/>
										</outline>
									<outline text="else {" created="Fri, 06 May 2022 16:39:13 GMT">
										<outline text="var theText = &quot;&quot;;" created="Sat, 07 May 2022 15:26:31 GMT"/>
										<outline text="console.log (&quot;mouseenter: &quot; + secondsSince (whenstart) + &quot; secs.&quot;);" created="Fri, 06 May 2022 16:34:55 GMT"/>
										<outline text="theLikes.forEach (function (item) {" created="Sat, 07 May 2022 15:26:20 GMT">
											<outline text="theText += item.who + &quot; &quot;;" created="Sat, 07 May 2022 15:26:48 GMT"/>
											<outline text="});" created="Sat, 07 May 2022 15:26:26 GMT"/>
											</outline>
										<outline text="if (theText.length &gt; 0) {" created="Sat, 07 May 2022 15:39:51 GMT">
											<outline text="$(likes).data (&quot;toggle&quot;, &quot;popover&quot;);" created="Sat, 07 May 2022 15:24:22 GMT"/>
											<outline text="$(likes).data (&quot;trigger&quot;, &quot;hover&quot;);" created="Sat, 07 May 2022 15:24:22 GMT"/>
											<outline text="$(likes).data (&quot;placement&quot;, &quot;right&quot;);" created="Sat, 07 May 2022 15:24:22 GMT"/>
											<outline text="$(likes).data (&quot;html&quot;, &quot;true&quot;);" created="Sat, 07 May 2022 15:24:22 GMT"/>
											<outline text="$(likes).data (&quot;content&quot;, theText);" created="Sat, 07 May 2022 15:24:22 GMT"/>
											<outline text="$(likes).popover (&quot;show&quot;);" created="Sat, 07 May 2022 15:24:22 GMT"/>
											<outline text="}" created="Sat, 07 May 2022 15:40:01 GMT"/>
											</outline>
										<outline text="}" created="Fri, 06 May 2022 16:39:15 GMT"/>
										</outline>
									<outline text="});" created="Fri, 06 May 2022 16:38:20 GMT"/>
									</outline>
								<outline text="});"/>
								</outline>
							<outline text="$(likes).mouseleave (function (ev) {">
								<outline text="$(likes).popover (&quot;hide&quot;);" created="Sat, 07 May 2022 15:24:22 GMT"/>
								<outline text="});"/>
								</outline>
							<outline text="$(likes).click (function () {" created="Tue, 05 Apr 2022 15:50:30 GMT">
								<outline text="toggleLike (feedItem.id, function (err, theLikes) {" created="Fri, 06 May 2022 16:36:18 GMT">
									<outline text="if (err) {" created="Fri, 06 May 2022 16:39:05 GMT">
										<outline text="console.log (err.message);" created="Fri, 06 May 2022 16:39:07 GMT"/>
										<outline text="}" created="Fri, 06 May 2022 16:39:13 GMT"/>
										</outline>
									<outline text="else {" created="Fri, 06 May 2022 16:39:13 GMT">
										<outline text="console.log (&quot;click: theLikes == &quot; + jsonStringify (theLikes));" created="Fri, 06 May 2022 16:34:55 GMT"/>
										<outline text="}" created="Fri, 06 May 2022 16:39:15 GMT"/>
										</outline>
									<outline text="});" created="Fri, 06 May 2022 16:38:20 GMT"/>
									</outline>
								<outline text="});" created="Tue, 05 Apr 2022 15:50:39 GMT"/>
								</outline>
							<outline text="return (likes);" created="Fri, 06 May 2022 15:19:16 GMT"/>
							<outline text="}" created="Fri, 06 May 2022 15:19:00 GMT"/>
							</outline>
						<outline text="" created="Fri, 06 May 2022 15:18:52 GMT"/>
						<outline text="function getLowerLeftStuff () { //stuff that goes in lower left corner of item" created="Fri, 06 May 2022 15:13:52 GMT">
							<outline text="var lowerLeftStuff = $(&quot;&lt;span class=\&quot;spLowerLeftStuff\&quot;&gt;&lt;/span&gt;&quot;);" created="Fri, 06 May 2022 15:14:13 GMT"/>
							<outline text="lowerLeftStuff.append (getLikesIcon ());" created="Fri, 06 May 2022 15:15:02 GMT"/>
							<outline text="lowerLeftStuff.append (getPermaLink ());" created="Fri, 06 May 2022 15:15:02 GMT"/>
							<outline text="return (lowerLeftStuff);" created="Fri, 06 May 2022 15:15:17 GMT"/>
							<outline text="}" created="Fri, 06 May 2022 15:14:05 GMT"/>
							</outline>
						<outline text="" created="Fri, 06 May 2022 15:13:53 GMT"/>
						<outline text="function getEnclosureButton () {" created="Tue, 05 Apr 2022 15:43:01 GMT">
							<outline text="var enclosureButton = $(&quot;&lt;span class=\&quot;spEnclosureButton\&quot;&gt;&lt;i class=\&quot;fa fa-headphones\&quot;&gt;&lt;/i&gt;&lt;/span&gt;&quot;);" created="Tue, 05 Apr 2022 15:43:10 GMT"/>
							<outline text="$(enclosureButton).click (function () {" created="Tue, 05 Apr 2022 15:50:30 GMT">
								<outline text="if ((feedItem.enclosure !== undefined) &amp;&amp; (feedItem.enclosure.url !== undefined)) {" created="Tue, 05 Apr 2022 15:51:54 GMT">
									<outline text="console.log (&quot;Enclosure button click.&quot;);" created="Tue, 05 Apr 2022 15:50:41 GMT"/>
									<outline text="window.open (feedItem.enclosure.url);" created="Wed, 06 Apr 2022 13:39:29 GMT"/>
									<outline text="}" created="Tue, 05 Apr 2022 15:51:58 GMT"/>
									</outline>
								<outline text="else {" created="Tue, 05 Apr 2022 15:52:04 GMT">
									<outline text="speakerBeep ();" created="Tue, 05 Apr 2022 15:52:06 GMT"/>
									<outline text="}" created="Tue, 05 Apr 2022 15:52:12 GMT"/>
									</outline>
								<outline text="});" created="Tue, 05 Apr 2022 15:50:39 GMT"/>
								</outline>
							<outline text="return (enclosureButton);" created="Tue, 05 Apr 2022 15:43:12 GMT"/>
							<outline text="}" created="Tue, 05 Apr 2022 15:43:09 GMT"/>
							</outline>
						<outline text="function getShareButton () {" created="Tue, 05 Apr 2022 15:43:01 GMT">
							<outline text="var shareButton = $(&quot;&lt;span class=\&quot;spShareButton\&quot;&gt;&lt;i class=\&quot;fa fa-retweet\&quot;&gt;&lt;/i&gt;&lt;/span&gt;&quot;);" created="Tue, 05 Apr 2022 20:15:47 GMT"/>
							<outline text="$(shareButton).click (function () {" created="Fri, 25 Mar 2022 14:34:30 GMT">
								<outline text="console.log (&quot;Clicked on the share button.&quot;);" created="Fri, 25 Mar 2022 14:34:43 GMT"/>
								<outline text="});" created="Fri, 25 Mar 2022 14:34:39 GMT"/>
								</outline>
							<outline text="return (shareButton);" created="Tue, 05 Apr 2022 20:15:48 GMT"/>
							<outline text="}" created="Tue, 05 Apr 2022 20:15:45 GMT"/>
							</outline>
						<outline text="function getViewDataLink () {" created="Mon, 28 Mar 2022 13:44:27 GMT">
							<outline text="var viewDataButton = $(&quot;&lt;span class=\&quot;spDataButton\&quot;&gt;DATA&lt;/span&gt;&quot;);" created="Sat, 26 Mar 2022 16:30:22 GMT"/>
							<outline text="$(viewDataButton).click (function () {" created="Sat, 26 Mar 2022 16:46:30 GMT">
								<outline text="viewDataDialog (getTitleForDebugging (feedItem), feedItem);" created="Mon, 28 Mar 2022 13:45:30 GMT"/>
								<outline text="});" created="Sat, 26 Mar 2022 16:46:39 GMT"/>
								</outline>
							<outline text="return (viewDataButton);" created="Sat, 26 Mar 2022 16:47:39 GMT"/>
							<outline text="}" created="Mon, 28 Mar 2022 13:44:35 GMT"/>
							</outline>
						<outline text="function getPopupMenu () {" created="Wed, 20 Apr 2022 15:35:09 GMT">
							<outline text="Changes" isComment="true" created="Fri, 22 Apr 2022 13:31:15 GMT">
								<outline text="4/22/22; 9:31:18 AM by DW" created="Fri, 22 Apr 2022 13:31:17 GMT">
									<outline text="Changed the &lt;button&gt; to a &lt;div&gt; because it was highlighting it in blue when it was clicked. Didn't like/want that. " created="Fri, 22 Apr 2022 13:31:18 GMT"/>
									</outline>
								</outline>
							<outline text="var popupMenu = $(&quot;&lt;span class=\&quot;spPopupMenu\&quot;&gt;&lt;/span&gt;&quot;);" created="Tue, 05 Apr 2022 15:43:10 GMT"/>
							<outline text="var theDropdown = $(&quot;&lt;div class=\&quot;dropdown\&quot;&gt;&lt;/div&gt;&quot;);" created="Wed, 20 Apr 2022 16:08:59 GMT"/>
							<outline text="var theButton = $(&quot;&lt;div class=\&quot;dropdown-toggle popupIcon\&quot; type=\&quot;button\&quot; data-toggle=\&quot;dropdown\&quot; aria-haspopup=\&quot;true\&quot; aria-expanded=\&quot;false\&quot;&gt;&lt;/div&gt;&quot;);" created="Wed, 20 Apr 2022 15:55:18 GMT"/>
							<outline text="var theButton = $(&quot;&lt;button class=\&quot;btn btn-default dropdown-toggle\&quot; type=\&quot;button\&quot; data-toggle=\&quot;dropdown\&quot; aria-haspopup=\&quot;true\&quot; aria-expanded=\&quot;false\&quot;&gt;&lt;/button&gt;&quot;);" isComment="true" created="Wed, 20 Apr 2022 15:55:18 GMT"/>
							<outline text="theButton.html (&quot;&lt;i class=\&quot;fa fa-ellipsis-h\&quot;&gt;&lt;/i&gt;&quot;);" created="Wed, 20 Apr 2022 16:05:42 GMT"/>
							<outline text="var theMenu = $(&quot;&lt;ul class=\&quot;dropdown-menu\&quot; aria-labelledby=\&quot;idPopup1\&quot;&gt;&lt;/ul&gt;&quot;);" created="Wed, 20 Apr 2022 15:59:02 GMT"/>
							<outline text="popupMenu.append (theDropdown);" created="Wed, 20 Apr 2022 15:54:28 GMT"/>
							<outline text="theDropdown.append (theButton);" created="Wed, 20 Apr 2022 15:54:28 GMT"/>
							<outline text="theDropdown.append (theMenu);" created="Wed, 20 Apr 2022 15:54:28 GMT"/>
							<outline text="" created="Wed, 20 Apr 2022 16:01:55 GMT"/>
							<outline text="$(theButton).on (&quot;click&quot;, function () {" isComment="true" created="Fri, 22 Apr 2022 13:27:30 GMT">
								<outline text="console.log (&quot;click&quot;);" created="Fri, 22 Apr 2022 13:28:35 GMT"/>
								<outline text="$(theButton).blur ();" created="Fri, 22 Apr 2022 13:27:58 GMT"/>
								<outline text="});" created="Fri, 22 Apr 2022 13:27:55 GMT"/>
								</outline>
							<outline text="function addCommand (text, flEnabled, callback) {" created="Wed, 20 Apr 2022 16:01:55 GMT">
								<outline text="var theCommand = $(&quot;&lt;li&gt;&lt;a&gt;&quot; + text + &quot;&lt;/a&gt;&lt;/li&gt;&quot;);" created="Wed, 20 Apr 2022 16:02:34 GMT"/>
								<outline text="if (!flEnabled) {" created="Wed, 20 Apr 2022 16:42:40 GMT">
									<outline text="theCommand.addClass (&quot;disabled&quot;);" created="Wed, 20 Apr 2022 16:42:49 GMT"/>
									<outline text="}" created="Wed, 20 Apr 2022 16:43:01 GMT"/>
									</outline>
								<outline text="theMenu.append (theCommand);" created="Wed, 20 Apr 2022 16:02:20 GMT"/>
								<outline text="theCommand.on (&quot;click&quot;, function () {" created="Wed, 20 Apr 2022 16:03:47 GMT">
									<outline text="if (callback !== undefined) {" created="Wed, 20 Apr 2022 16:34:10 GMT">
										<outline text="callback ();" created="Wed, 20 Apr 2022 16:04:00 GMT"/>
										<outline text="}" created="Wed, 20 Apr 2022 16:34:16 GMT"/>
										</outline>
									<outline text="});" created="Wed, 20 Apr 2022 16:03:56 GMT"/>
									</outline>
								<outline text="}" created="Wed, 20 Apr 2022 16:02:13 GMT"/>
								</outline>
							<outline text="function addDivider () {" created="Wed, 20 Apr 2022 16:35:48 GMT">
								<outline text="var theCommand = $(&quot;&lt;li class=\&quot;divider\&quot;&gt;&lt;/li&gt;&quot;);" created="Wed, 20 Apr 2022 16:02:34 GMT"/>
								<outline text="theMenu.append (theCommand);" created="Wed, 20 Apr 2022 16:02:20 GMT"/>
								<outline text="}" created="Wed, 20 Apr 2022 16:35:54 GMT"/>
								</outline>
							<outline text="addCommand (&quot;Data&quot;, true, function () {" created="Wed, 20 Apr 2022 16:01:00 GMT">
								<outline text="viewDataDialog (getTitleForDebugging (feedItem), feedItem);" created="Mon, 28 Mar 2022 13:45:30 GMT"/>
								<outline text="});" created="Wed, 20 Apr 2022 16:33:24 GMT"/>
								</outline>
							<outline text="addDivider ();"/>
							<outline text="addCommand (&quot;Delete&quot;, true, function () {" created="Wed, 20 Apr 2022 16:01:00 GMT">
								<outline text="confirmDialog (&quot;Delete this item?&quot;, function () {" created="Wed, 24 Mar 2021 15:45:59 GMT">
									<outline text="deleteItem (feedItem.id, function (err, data) {" created="Wed, 06 Apr 2022 13:39:29 GMT">
										<outline text="if (err) {" created="Fri, 22 Apr 2022 14:08:24 GMT">
											<outline text="alertDialog (err.message);" created="Fri, 22 Apr 2022 14:08:40 GMT"/>
											<outline text="}" created="Fri, 22 Apr 2022 14:08:31 GMT"/>
											</outline>
										<outline text="else {" created="Fri, 22 Apr 2022 14:08:32 GMT">
											<outline text="console.log (jsonStringify (data));" created="Fri, 22 Apr 2022 14:08:53 GMT"/>
											<outline text="}" created="Fri, 22 Apr 2022 14:08:34 GMT"/>
											</outline>
										<outline text="});" created="Fri, 22 Apr 2022 14:08:19 GMT"/>
										</outline>
									<outline text="});" created="Wed, 24 Mar 2021 15:46:01 GMT"/>
									</outline>
								<outline text="});" created="Wed, 20 Apr 2022 16:33:24 GMT"/>
								</outline>
							<outline text="addDivider ();"/>
							<outline text="addCommand (&quot;Enclosure&quot;, (feedItem.enclosure !== undefined) &amp;&amp; (feedItem.enclosure.url !== undefined), function () {" created="Wed, 20 Apr 2022 16:01:00 GMT">
								<outline text="window.open (feedItem.enclosure.url);" created="Wed, 06 Apr 2022 13:39:29 GMT"/>
								<outline text="});" created="Wed, 20 Apr 2022 16:33:24 GMT"/>
								</outline>
							<outline text="addCommand (&quot;Like&quot;, true, function () {" created="Wed, 20 Apr 2022 16:01:00 GMT">
								<outline text="alertDialog (&quot;Not implemented yet.&quot;);" created="Wed, 06 Apr 2022 13:39:29 GMT"/>
								<outline text="});" created="Wed, 20 Apr 2022 16:33:24 GMT"/>
								</outline>
							<outline text="addCommand (&quot;Share&quot;, true, function () {" created="Wed, 20 Apr 2022 16:01:00 GMT">
								<outline text="alertDialog (&quot;Not implemented yet.&quot;);" created="Wed, 06 Apr 2022 13:39:29 GMT"/>
								<outline text="});" created="Wed, 20 Apr 2022 16:33:24 GMT"/>
								</outline>
							<outline text="return (popupMenu);" created="Sat, 26 Mar 2022 16:47:39 GMT"/>
							<outline text="}" created="Wed, 20 Apr 2022 15:35:14 GMT"/>
							</outline>
						<outline text="function getRiverItemFooter () {" created="Sat, 16 Apr 2022 22:33:23 GMT">
							<outline text="var divRiverItemFooter = $(&quot;&lt;div class=\&quot;divRiverItemFooter\&quot;&gt;&lt;/div&gt;&quot;), bodytext;" created="Sat, 16 Apr 2022 16:27:52 GMT"/>
							<outline text="divRiverItemFooter.append (getMoreButton ());" isComment="true" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="divRiverItemFooter.append (getLikeButton ());" isComment="true" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="divRiverItemFooter.append (getEnclosureButton ());" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="divRiverItemFooter.append (getShareButton ());" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="divRiverItemFooter.append (getViewDataLink ());" isComment="true" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="divRiverItemFooter.append (getPopupMenu ());" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="divRiverItemFooter.append (getLowerLeftStuff ());" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="divRiverItemFooter.append (getPermaLink ());" isComment="true" created="Wed, 23 Mar 2022 16:58:36 GMT"/>
							<outline text="return (divRiverItemFooter);" created="Sat, 16 Apr 2022 22:33:51 GMT"/>
							<outline text="}" created="Sat, 16 Apr 2022 22:33:31 GMT"/>
							</outline>
						<outline text="function updateFromFeedItem () { //update all objects that display content from the feed item" created="Fri, 25 Mar 2022 14:36:15 GMT">
							<outline text="setBodytext ();" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
							<outline text="setupMoreButton ();"/>
							<outline text="setLikesCount (); //5/7/22 by DW" created="Sat, 07 May 2022 15:13:43 GMT"/>
							<outline text="replaceChild (feedItemLikes, getLikesLink ()); " isComment="true" created="Fri, 25 Mar 2022 14:27:45 GMT"/>
							<outline text="checkForMoreButton (); //experiment" isComment="true" created="Fri, 01 Apr 2022 16:50:13 GMT"/>
							<outline text="}" created="Fri, 25 Mar 2022 14:36:31 GMT"/>
							</outline>
						<outline text="var divRiverItem = $(&quot;&lt;div class=\&quot;divRiverItem\&quot; data-id=\&quot;&quot; + feedItem.id + &quot;\&quot; data-title=\&quot;&quot; + getTitleForDebugging (feedItem) + &quot;\&quot;&gt;&lt;/div&gt;&quot;);" created="Sat, 16 Apr 2022 16:27:52 GMT"/>
						<outline text="$(divRiverItem).append (getRiverItemBody ());" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
						<outline text="$(divRiverItem).append (getMoreButton ()); //4/20/22 by DW" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
						<outline text="$(divRiverItem).append (getRiverItemFooter ());" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
						<outline text="$(divRiverItem).on (&quot;load&quot;, function () {" created="Wed, 14 Apr 2021 19:50:46 GMT">
							<outline text="console.log (&quot;The object \&quot;&quot; + feedItem.title + &quot;\&quot; has been loaded.&quot;);" created="Mon, 18 Apr 2022 15:59:47 GMT"/>
							<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
							</outline>
						<outline text="$(divRiverItem).on (&quot;everyMinute&quot;, function () {" created="Wed, 14 Apr 2021 19:50:46 GMT">
							<outline text="updateWhen ();" created="Mon, 18 Apr 2022 15:59:47 GMT"/>
							<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
							</outline>
						<outline text="$(divRiverItem).on (&quot;update&quot;, function (event, options) {" created="Wed, 14 Apr 2021 19:50:46 GMT">
							<outline text="if (options.feedItem === undefined) {" isComment="true" created="Sat, 02 Apr 2022 15:27:02 GMT">
								<outline text="console.log (&quot;options.feedItem is undefined&quot;);" created="Sat, 02 Apr 2022 15:27:22 GMT"/>
								<outline text="}" created="Sat, 02 Apr 2022 15:27:11 GMT"/>
								</outline>
							<outline text="if (options.theFeed === undefined) {" created="Sat, 02 Apr 2022 15:27:02 GMT">
								<outline text="console.log (&quot;options.theFeed is undefined&quot;);" created="Sat, 02 Apr 2022 15:27:22 GMT"/>
								<outline text="}" created="Sat, 02 Apr 2022 15:27:11 GMT"/>
								</outline>
							<outline text="feedItem = options.feedItem;" created="Fri, 25 Mar 2022 14:49:56 GMT"/>
							<outline text="theFeed = options.theFeed;" isComment="true" created="Fri, 25 Mar 2022 14:50:12 GMT"/>
							<outline text="updateFromFeedItem ();"/>
							<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
							</outline>
						<outline text="$(divRiverItem).on (&quot;everySecond&quot;, function () {" created="Wed, 14 Apr 2021 19:50:46 GMT">
							<outline text="setupMoreButton ();" created="Tue, 19 Apr 2022 15:57:09 GMT"/>
							<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
							</outline>
						<outline text="$(divRiverItemBody).on (&quot;click&quot;, function () { //5/3/22 by DW" created="Wed, 14 Apr 2021 19:50:46 GMT">
							<outline text="if (itemIsFromUsersBlog ()) {" created="Sat, 30 Apr 2022 15:14:18 GMT">
								<outline text="console.log (&quot;The object \&quot;&quot; + feedItem.feedUrl + &quot;\&quot; has been clicked.&quot;);" created="Mon, 18 Apr 2022 15:59:47 GMT"/>
								<outline text="var options = {" created="Sat, 30 Apr 2022 15:19:48 GMT">
									<outline text="feedItem" created="Sat, 30 Apr 2022 15:20:03 GMT"/>
									<outline text="};" created="Sat, 30 Apr 2022 15:19:56 GMT"/>
									</outline>
								<outline text="$(&quot;.divBodyEditor&quot;).trigger (&quot;editFeedItem&quot;, [options]); " created="Fri, 16 Apr 2021 16:20:37 GMT"/>
								<outline text="}" created="Sat, 30 Apr 2022 15:14:21 GMT"/>
								</outline>
							<outline text="initEditBox (feedItem.description);" isComment="true" created="Fri, 29 Apr 2022 16:35:11 GMT"/>
							<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
							</outline>
						<outline text="$(divRiverItemBody).mouseenter (function (ev) {">
							<outline text="if (itemIsFromUsersBlog ()) {" created="Tue, 03 May 2022 13:31:08 GMT">
								<outline text="$(divRiverItemBody).addClass (&quot;itemHightlighted&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
								<outline text="}" created="Tue, 03 May 2022 13:31:09 GMT"/>
								</outline>
							<outline text="ev.stopPropagation ();" isComment="true"/>
							<outline text="});"/>
							</outline>
						<outline text="$(divRiverItemBody).mouseleave (function () {">
							<outline text="if (itemIsFromUsersBlog ()) {" created="Tue, 03 May 2022 13:31:08 GMT">
								<outline text="$(divRiverItemBody).removeClass (&quot;itemHightlighted&quot;);" created="Sat, 26 Mar 2022 16:25:38 GMT"/>
								<outline text="}" created="Tue, 03 May 2022 13:31:09 GMT"/>
								</outline>
							<outline text="});"/>
							</outline>
						<outline text="" created="Thu, 21 Apr 2022 14:14:23 GMT"/>
						<outline text="$(divRiverItem).on (&quot;setMoreButton&quot;, function (event) { //called after the river item is inserted in DOM" isComment="true" created="Wed, 14 Apr 2021 19:50:46 GMT">
							<outline text="setupMoreButton ();" created="Tue, 19 Apr 2022 15:57:09 GMT"/>
							<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
							</outline>
						<outline text="" created="Fri, 06 May 2022 17:18:23 GMT"/>
						<outline text="return (divRiverItem);" created="Sun, 17 Apr 2022 13:31:29 GMT"/>
						<outline text="}" created="Sun, 17 Apr 2022 13:30:18 GMT"/>
						</outline>
					<outline text="function setupMoreButtons () {" isComment="true" created="Wed, 20 Apr 2022 15:01:35 GMT">
						<outline text="$(&quot;.divRiverItem&quot;).each (function () { //set up MORE buttons where they're needed, after everything's inserted in DOM" created="Mon, 12 Apr 2021 16:34:58 GMT">
							<outline text="$(this).trigger (&quot;setMoreButton&quot;); " created="Fri, 16 Apr 2021 16:20:37 GMT"/>
							<outline text="$(this).on (&quot;load&quot;, function () {" created="Wed, 20 Apr 2022 14:36:32 GMT">
								<outline text="console.log (&quot;item loaded, title == &quot; + feedItem.title);" created="Wed, 20 Apr 2022 14:36:56 GMT"/>
								<outline text="https://github.com/scripting/Scripting-News/issues/233" isComment="true" created="Wed, 20 Apr 2022 14:54:42 GMT"/>
								<outline text="});" created="Wed, 20 Apr 2022 14:36:50 GMT"/>
								</outline>
							<outline text="});" created="Mon, 12 Apr 2021 16:35:44 GMT"/>
							</outline>
						<outline text="}" created="Wed, 20 Apr 2022 15:02:06 GMT"/>
						</outline>
					<outline text="function getAllTheLikes () {" isComment="true" created="Fri, 06 May 2022 17:19:20 GMT">
						<outline text="console.log (&quot;getALotOLikes&quot;);" created="Fri, 06 May 2022 17:24:49 GMT"/>
						<outline text="getALotOLikes (idArray, function (err, arrayOfLikes) {" created="Fri, 06 May 2022 17:18:23 GMT">
							<outline text="if (err) {" created="Fri, 06 May 2022 17:22:51 GMT">
								<outline text="console.log (err);" created="Fri, 06 May 2022 17:22:53 GMT"/>
								<outline text="}" created="Fri, 06 May 2022 17:22:57 GMT"/>
								</outline>
							<outline text="else {" created="Fri, 06 May 2022 17:22:59 GMT">
								<outline text="console.log (&quot;arrayOfLikes == &quot; + jsonStringify (arrayOfLikes));" created="Fri, 06 May 2022 17:23:08 GMT"/>
								<outline text="}" created="Fri, 06 May 2022 17:23:02 GMT"/>
								</outline>
							<outline text="});" created="Fri, 06 May 2022 17:18:45 GMT"/>
							</outline>
						<outline text="}" created="Fri, 06 May 2022 17:19:25 GMT"/>
						</outline>
					<outline text="getRiver (feedUrl, function (err, theRiver) {" created="Wed, 30 Mar 2022 16:18:39 GMT">
						<outline text="if (err) {" created="Wed, 23 Mar 2022 16:21:42 GMT">
							<outline text="alertDialog (err.message);" created="Wed, 23 Mar 2022 16:21:45 GMT"/>
							<outline text="}" created="Wed, 23 Mar 2022 16:21:51 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 23 Mar 2022 16:21:52 GMT">
							<outline text="var divRiverDisplay = $(&quot;&lt;div class=\&quot;divRiverDisplay\&quot;&gt;&lt;/div&gt;&quot;);" created="Sat, 16 Apr 2022 16:21:53 GMT"/>
							<outline text="replaceChild ($(&quot;#idRiverContainer&quot;), divRiverDisplay);" created="Mon, 18 Apr 2022 14:23:14 GMT"/>
							<outline text="theRiver.feeds.forEach (function (aFeed) {" created="Sat, 16 Apr 2022 16:25:17 GMT">
								<outline text="var divRiverSection = getDivRiverSection (aFeed);" created="Sun, 17 Apr 2022 13:37:45 GMT"/>
								<outline text="aFeed.items.forEach (function (feedItem) {" created="Sat, 16 Apr 2022 16:28:22 GMT">
									<outline text="idArray.push (feedItem.id);" created="Fri, 06 May 2022 17:21:56 GMT"/>
									<outline text="$(divRiverSection).append (getDivRiverItem (feedItem));" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
									<outline text="});" created="Sat, 16 Apr 2022 16:28:47 GMT"/>
									</outline>
								<outline text="$(divRiverDisplay).append (divRiverSection);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
								<outline text="});" created="Sat, 16 Apr 2022 16:25:34 GMT"/>
								</outline>
							<outline text="setTimeout (setupMoreButtons, 5);" isComment="true" created="Wed, 20 Apr 2022 15:01:34 GMT"/>
							<outline text="getAllTheLikes (); //5/6/22 by DW" isComment="true" created="Fri, 06 May 2022 17:18:23 GMT"/>
							<outline text="" created="Fri, 06 May 2022 17:18:23 GMT"/>
							<outline text="$(divRiverDisplay).on (&quot;yoyoma&quot;, function (event, options) {" created="Wed, 14 Apr 2021 19:50:46 GMT">
								<outline text="var divYo = $(&quot;&lt;div class=\&quot;divYo\&quot;&gt;Yo, Yo! Ma..&lt;/div&gt;&quot;);" created="Sat, 16 Apr 2022 16:21:53 GMT"/>
								<outline text="var firstSection = getFirstRiverSection ();" created="Thu, 21 Apr 2022 13:16:21 GMT"/>
								<outline text="var theHeader = $(firstSection).children (&quot;.divSectionHeader&quot;);" created="Sat, 23 Apr 2022 15:55:20 GMT"/>
								<outline text="$(theHeader).after (divYo);" created="Sat, 23 Apr 2022 15:56:53 GMT"/>
								<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
								</outline>
							<outline text="$(divRiverDisplay).on (&quot;newItem&quot;, function (event, options) {" created="Wed, 14 Apr 2021 19:50:46 GMT">
								<outline text="console.log (&quot;newItem triggered. options.feedItem.feedUrl == &quot; + options.feedItem.feedUrl);" created="Wed, 20 Apr 2022 21:55:47 GMT"/>
								<outline text="var firstSection = getFirstRiverSection ();" created="Thu, 21 Apr 2022 13:16:21 GMT"/>
								<outline text="if ((firstSection !== undefined) &amp;&amp; (options.theFeed.feedUrl == firstSection.data (&quot;feedurl&quot;))) { //don't need to create a new section" created="Thu, 21 Apr 2022 13:23:16 GMT">
									<outline text="var theHeader = $(firstSection).children (&quot;.divSectionHeader&quot;);" created="Sat, 23 Apr 2022 15:55:20 GMT"/>
									<outline text="$(theHeader).after (getDivRiverItem (options.feedItem));" created="Sat, 23 Apr 2022 15:56:53 GMT"/>
									<outline text="}" created="Thu, 21 Apr 2022 13:23:21 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 21 Apr 2022 13:29:29 GMT">
									<outline text="var divRiverSection = getDivRiverSection (options.theFeed);" created="Sun, 17 Apr 2022 13:37:45 GMT"/>
									<outline text="$(divRiverSection).append (getDivRiverItem (options.feedItem));" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
									<outline text="$(divRiverDisplay).prepend (divRiverSection);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
									<outline text="}" created="Thu, 21 Apr 2022 13:29:31 GMT"/>
									</outline>
								<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
								</outline>
							<outline text="$(divRiverDisplay).on (&quot;newItem&quot;, function (event, options) {" isComment="true" created="Wed, 14 Apr 2021 19:50:46 GMT">
								<outline text="console.log (&quot;newItem triggered. options.feedItem.feedUrl == &quot; + options.feedItem.feedUrl);" created="Wed, 20 Apr 2022 21:55:47 GMT"/>
								<outline text="var firstSection = getFirstRiverSection (), divRiverSection;" created="Thu, 21 Apr 2022 13:16:21 GMT"/>
								<outline text="if ((firstSection !== undefined) &amp;&amp; (options.theFeed.feedUrl == firstSection.data (&quot;feedurl&quot;))) { //don't need to create a new section" created="Thu, 21 Apr 2022 13:23:16 GMT">
									<outline text="divRiverSection = firstSection;" created="Thu, 21 Apr 2022 13:26:36 GMT"/>
									<outline text="}" created="Thu, 21 Apr 2022 13:23:21 GMT"/>
									</outline>
								<outline text="else {" created="Thu, 21 Apr 2022 13:29:29 GMT">
									<outline text="divRiverSection = getDivRiverSection (options.theFeed);" created="Sun, 17 Apr 2022 13:37:45 GMT"/>
									<outline text="}" created="Thu, 21 Apr 2022 13:29:31 GMT"/>
									</outline>
								<outline text="$(divRiverSection).append (getDivRiverItem (options.feedItem));" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
								<outline text="$(divRiverDisplay).prepend (divRiverSection);" created="Sat, 16 Apr 2022 16:30:19 GMT"/>
								<outline text="});" created="Wed, 14 Apr 2021 19:51:14 GMT"/>
								</outline>
							<outline text="}" created="Wed, 23 Mar 2022 16:21:55 GMT"/>
							</outline>
						<outline text="});" created="Wed, 30 Mar 2022 16:18:50 GMT"/>
						</outline>
					<outline text="}" created="Sat, 16 Apr 2022 15:54:26 GMT"/>
					</outline>
				<outline text="function riverItemsEverySecond () {" created="Mon, 18 Apr 2022 15:54:33 GMT">
					<outline text="var whenstart = new Date ();" created="Mon, 18 Apr 2022 16:18:22 GMT"/>
					<outline text="$(&quot;.divRiverItem&quot;).each (function () {" created="Mon, 12 Apr 2021 16:34:58 GMT">
						<outline text="$(this).trigger (&quot;everySecond&quot;); " created="Fri, 16 Apr 2021 16:20:37 GMT"/>
						<outline text="});" created="Mon, 12 Apr 2021 16:35:44 GMT"/>
						</outline>
					<outline text="console.log (&quot;riverItemsEverySecond: &quot; + secondsSince (whenstart) + &quot; secs.&quot;);" isComment="true" created="Thu, 21 Apr 2022 15:24:44 GMT"/>
					<outline text="}" created="Mon, 18 Apr 2022 15:54:42 GMT"/>
					</outline>
				<outline text="function riverItemsEveryMinute () {" created="Mon, 18 Apr 2022 15:54:33 GMT">
					<outline text="var whenstart = new Date ();" created="Mon, 18 Apr 2022 16:18:22 GMT"/>
					<outline text="$(&quot;.divRiverItem&quot;).each (function () {" created="Mon, 12 Apr 2021 16:34:58 GMT">
						<outline text="$(this).trigger (&quot;everyMinute&quot;); " created="Fri, 16 Apr 2021 16:20:37 GMT"/>
						<outline text="});" created="Mon, 12 Apr 2021 16:35:44 GMT"/>
						</outline>
					<outline text="console.log (&quot;riverItemsEveryMinute: &quot; + secondsSince (whenstart) + &quot; secs.&quot;);" isComment="true" created="Mon, 18 Apr 2022 16:18:32 GMT"/>
					<outline text="}" created="Mon, 18 Apr 2022 15:54:42 GMT"/>
					</outline>
				<outline text="function getFirstRiverSection () {" created="Thu, 21 Apr 2022 13:05:20 GMT">
					<outline text="var section = undefined;" created="Thu, 21 Apr 2022 13:21:02 GMT"/>
					<outline text="if ($(&quot;.divRiverSection&quot;).length &gt; 0) {" created="Thu, 21 Apr 2022 13:21:02 GMT">
						<outline text="section = $(&quot;.divRiverSection&quot;).first ();" created="Thu, 21 Apr 2022 13:21:38 GMT"/>
						<outline text="}" created="Thu, 21 Apr 2022 13:21:19 GMT"/>
						</outline>
					<outline text="return (section);" created="Thu, 21 Apr 2022 13:06:01 GMT"/>
					<outline text="}" created="Thu, 21 Apr 2022 13:05:31 GMT"/>
					</outline>
				<outline text="function updatedRiverItem (feedItem, theFeed) {" created="Thu, 24 Mar 2022 16:32:06 GMT">
					<outline text="$(&quot;.divRiverItem&quot;).each (function () {" created="Mon, 12 Apr 2021 16:34:58 GMT">
						<outline text="if ($(this).data (&quot;id&quot;) == feedItem.id) {" created="Wed, 14 Apr 2021 19:54:26 GMT">
							<outline text="$(this).trigger (&quot;update&quot;, {feedItem, theFeed}); " created="Fri, 16 Apr 2021 16:20:37 GMT"/>
							<outline text="}" created="Wed, 14 Apr 2021 19:54:47 GMT"/>
							</outline>
						<outline text="});" created="Mon, 12 Apr 2021 16:35:44 GMT"/>
						</outline>
					<outline text="}" created="Thu, 24 Mar 2022 16:32:32 GMT"/>
					</outline>
				<outline text="function newRiverItem (feedItem, theFeed) {" created="Thu, 24 Mar 2022 16:32:06 GMT">
					<outline text="$(&quot;.divRiverDisplay&quot;).each (function () {" created="Tue, 19 Apr 2022 14:01:30 GMT">
						<outline text="$(this).trigger (&quot;newItem&quot;, {feedItem, theFeed}); " created="Tue, 19 Apr 2022 14:01:30 GMT"/>
						<outline text="});" created="Tue, 19 Apr 2022 14:02:28 GMT"/>
						</outline>
					<outline text="}" created="Thu, 24 Mar 2022 16:32:32 GMT"/>
					</outline>
				<outline text="function deleteRiverItem (feedItem) {" created="Thu, 24 Mar 2022 16:32:06 GMT">
					<outline text="$(&quot;.divRiverItem&quot;).each (function () {" created="Tue, 19 Apr 2022 14:01:30 GMT">
						<outline text="if ($(this).data (&quot;id&quot;) == feedItem.id) {" created="Tue, 19 Apr 2022 14:01:30 GMT">
							<outline text="$(this).remove ()" created="Fri, 22 Apr 2022 14:55:42 GMT"/>
							<outline text="}" created="Fri, 22 Apr 2022 14:54:38 GMT"/>
							</outline>
						<outline text="});" created="Tue, 19 Apr 2022 14:02:28 GMT"/>
						</outline>
					<outline text="}" created="Thu, 24 Mar 2022 16:32:32 GMT"/>
					</outline>
				<outline text="function turnOnRiverDebugging () {" created="Fri, 22 Apr 2022 13:21:15 GMT">
					<outline text="$(&quot;.divRiverSection&quot;).each (function () {" created="Fri, 22 Apr 2022 13:17:53 GMT">
						<outline text="$(this).css (&quot;border&quot;, &quot;1px solid gainsboro&quot;);" created="Fri, 22 Apr 2022 13:18:23 GMT"/>
						<outline text="});" created="Fri, 22 Apr 2022 13:18:19 GMT"/>
						</outline>
					<outline text="$(&quot;.divRiverItem&quot;).each (function () {" created="Fri, 22 Apr 2022 13:17:53 GMT">
						<outline text="$(this).css (&quot;border&quot;, &quot;1px solid gainsboro&quot;);" created="Fri, 22 Apr 2022 13:18:23 GMT"/>
						<outline text="});" created="Fri, 22 Apr 2022 13:18:19 GMT"/>
						</outline>
					<outline text="}" created="Fri, 22 Apr 2022 13:21:24 GMT"/>
					</outline>
				</outline>
			<outline text="styles.css" created="Wed, 24 Nov 2021 21:11:47 GMT">
				<outline text="body {">
					<outline text="font-family: &quot;Ubuntu&quot;;"/>
					<outline text="font-size: 20px;" isComment="true"/>
					<outline text="background-color: whitesmoke;" isComment="true"/>
					<outline text="}"/>
					</outline>
				<outline text=".divPageBody {">
					<outline text="margin-top: 90px;"/>
					<outline text="margin-top: 120px;" isComment="true" created="Mon, 18 Apr 2022 16:59:56 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divVersionNumber {" isComment="true">
					<outline text="font-size: 12px;"/>
					<outline text="color: &lt;%uiTextColor%&gt;;" isComment="true"/>
					<outline text="float: right;"/>
					<outline text="padding: 19px;"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Wed, 24 Nov 2021 18:04:57 GMT"/>
				<outline text=".divVersionNumber {">
					<outline text="font-size: 12px;"/>
					<outline text="color: &lt;%uiTextColor%&gt;;" isComment="true"/>
					<outline text="float: right;"/>
					<outline text="padding: 19px;"/>
					<outline text="}"/>
					</outline>
				<outline text=".iMenuCheck {">
					<outline text="margin-left: -18px;"/>
					<outline text="color: darkgray;" isComment="true"/>
					<outline text="margin-right: 2px;" isComment="true"/>
					<outline text="height: 16px;" created="Sat, 19 Feb 2022 15:04:05 GMT"/>
					<outline text="width: 16px;" created="Sat, 19 Feb 2022 15:04:05 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text=".divMenubar .nav li {">
					<outline text="font-size: 14px;"/>
					<outline text="}"/>
					</outline>
				<outline text=" #idMenuProductName {">
					<outline text="font-family: &quot;Oswald&quot;;"/>
					<outline text="font-style: italic;" created="Thu, 12 May 2022 14:42:52 GMT"/>
					<outline text="font-size: 28px;"/>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="code.js" created="Wed, 24 Nov 2021 21:12:16 GMT">
				<outline text="var urlServer = &quot;http://localhost:1801/returnjson?url=&quot;; " created="Fri, 19 Nov 2021 18:13:04 GMT"/>
				<outline text="var urlServer = &quot;http://feeder.scripting.com/returnjson?url=&quot;;" isComment="true" created="Fri, 19 Nov 2021 18:13:04 GMT"/>
				<outline text="" created="Tue, 15 Feb 2022 17:56:12 GMT"/>
				<outline text="var globalFeedStruct; //for communication with the feed reader" isComment="true" created="Tue, 15 Feb 2022 17:56:13 GMT"/>
				<outline text="" created="Wed, 16 Feb 2022 15:55:38 GMT"/>
				<outline text="var appPrefs = {" created="Wed, 16 Feb 2022 15:55:38 GMT">
					<outline text="ctStartups: 0,"/>
					<outline text="whenLastStartup: undefined,"/>
					<outline text="lastFeedUrl: &quot;http://scripting.com/rss.xml&quot;," created="Wed, 16 Feb 2022 16:28:28 GMT"/>
					<outline text="urlCurrentFeed: &quot;&quot;," created="Wed, 16 Feb 2022 16:45:25 GMT"/>
					<outline text="flPostOnReturnKey: false," created="Tue, 26 Apr 2022 21:56:57 GMT"/>
					<outline text="savedEditorText: &quot;&quot;," created="Wed, 27 Apr 2022 14:05:50 GMT"/>
					<outline text="myFeedTitle: &quot;My Feed&quot;," created="Mon, 02 May 2022 15:07:00 GMT"/>
					<outline text="myFeedDescription: &quot;The feed for my Little Feed Reader notes.&quot;" created="Mon, 02 May 2022 15:07:12 GMT"/>
					<outline text="};" created="Wed, 16 Feb 2022 15:55:44 GMT"/>
					</outline>
				<outline text=" " created="Tue, 15 Feb 2022 16:49:31 GMT"/>
				<outline text="var myNodeStorageApp = undefined;"/>
				<outline text="var flPrefsChanged = false;" isComment="true" created="Wed, 16 Feb 2022 16:29:53 GMT"/>
				<outline text="var flBuildFeedsMenu = false;" created="Thu, 17 Feb 2022 16:10:46 GMT"/>
				<outline text="" created="Wed, 16 Feb 2022 16:29:57 GMT"/>
				<outline text="function prefsChanged () {" created="Wed, 16 Feb 2022 16:29:35 GMT">
					<outline text="myNodeStorageApp.prefsChanged ();"/>
					<outline text="}" created="Wed, 16 Feb 2022 16:29:43 GMT"/>
					</outline>
				<outline text="function patchAppPrefs () {" created="Wed, 16 Feb 2022 15:51:56 GMT">
					<outline text="if (appPrefs.feeds.length == 0) {" isComment="true" created="Wed, 16 Feb 2022 16:17:55 GMT">
						<outline text="appPrefs.feeds.push ({" created="Wed, 16 Feb 2022 16:18:14 GMT">
							<outline text="title: &quot;Scripting News&quot;," created="Wed, 16 Feb 2022 16:18:22 GMT"/>
							<outline text="url: &quot;http://scripting.com/rss.xml&quot;" created="Wed, 16 Feb 2022 16:18:28 GMT"/>
							<outline text="});" created="Wed, 16 Feb 2022 16:18:19 GMT"/>
							</outline>
						<outline text="}" created="Wed, 16 Feb 2022 16:18:07 GMT"/>
						</outline>
					<outline text="}" created="Thu, 17 Feb 2022 14:56:27 GMT"/>
					</outline>
				<outline text="function markdownProcess (s) {" created="Tue, 02 Nov 2021 14:12:22 GMT">
					<outline text="var md = new Markdown.Converter ();"/>
					<outline text="return (md.makeHtml (s));"/>
					<outline text="}" created="Tue, 02 Nov 2021 14:12:45 GMT"/>
					</outline>
				<outline text="" created="Thu, 05 May 2022 20:21:59 GMT"/>
				<outline text="function getUsersBlogUrl () { //5/5/22 by DW" created="Thu, 05 May 2022 20:21:59 GMT">
					<outline text="return (appConsts.urlForFeeds + localStorage.twScreenName + &quot;.xml&quot;)" created="Thu, 05 May 2022 20:22:08 GMT"/>
					<outline text="}" created="Thu, 05 May 2022 20:22:09 GMT"/>
					</outline>
				<outline text="" created="Thu, 05 May 2022 20:21:59 GMT"/>
				<outline text="function getUrlParam (name) { //11/15/21 by DW">
					<outline text="var val = getURLParameter (name);"/>
					<outline text="if (val == &quot;null&quot;) {">
						<outline text="return (undefined);"/>
						<outline text="}"/>
						</outline>
					<outline text="else {">
						<outline text="return (decodeURIComponent (val));"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function httpRequest (url, timeout, headers, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="9/18/21; 10:47:11 AM by DW" created="Sat, 18 Sep 2021 14:47:10 GMT">
							<outline text="When there's an error, usually there is a status.responseText to parse as JSON, but sometimes it fails. Now we account for that. " created="Sat, 18 Sep 2021 14:47:11 GMT"/>
							</outline>
						<outline text="7/20/20; 5:36:14 PM by DW">
							<outline text="Finally, I need a HTTP request routine that calls back in a standard way.">
								<outline text="function (err, data)"/>
								</outline>
							<outline text="No, I don't want to use promises."/>
							<outline text="for info about timeous see this page." isComment="true">
								<outline text="http://stackoverflow.com/questions/3543683/determine-if-ajax-error-is-a-timeout"/>
								</outline>
							</outline>
						</outline>
					<outline text="timeout = (timeout === undefined) ? 30000 : timeout;"/>
					<outline text="var jxhr = $.ajax ({ ">
						<outline text="url: url,"/>
						<outline text="dataType: &quot;text&quot;, "/>
						<outline text="headers," created="Tue, 14 May 2013 14:35:06 GMT" pgfnum="23850"/>
						<outline text="timeout"/>
						<outline text="}) "/>
						</outline>
					<outline text=".success (function (data, status) { ">
						<outline text="callback (undefined, data);"/>
						<outline text="}) "/>
						</outline>
					<outline text=".error (function (status) { ">
						<outline text="var message;" created="Sat, 18 Sep 2021 14:45:42 GMT"/>
						<outline text="try { //9/18/21 by DW" created="Sat, 18 Sep 2021 14:45:52 GMT">
							<outline text="message = JSON.parse (status.responseText).message;" created="Sat, 18 Sep 2021 14:46:09 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:45:55 GMT"/>
							</outline>
						<outline text="catch (err) {" created="Sat, 18 Sep 2021 14:45:57 GMT">
							<outline text="message = status.responseText;" created="Sat, 18 Sep 2021 14:46:25 GMT"/>
							<outline text="}" created="Sat, 18 Sep 2021 14:46:00 GMT"/>
							</outline>
						<outline text="var err = {">
							<outline text="code: status.status,"/>
							<outline text="message"/>
							<outline text="};"/>
							</outline>
						<outline text="callback (err);"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function servercall (path, params, flAuthenticated, callback, urlServer=appConsts.urlTwitterServer) {">
					<outline text="Changes" isComment="true">
						<outline text="12/10/21; 12:51:58 PM by DW" created="Fri, 10 Dec 2021 17:51:57 GMT">
							<outline text="New optional parameter, urlServer, so this function can be used to call Daytona." created="Fri, 10 Dec 2021 17:51:58 GMT"/>
							</outline>
						<outline text="1/11/21; 12:51:47 PM by DW">
							<outline text="New param, flAuthenticated. If true we add the oAuth info to the call. "/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = urlServer + path + &quot;?&quot; + twBuildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: jsontext.length == &quot; + jsontext.length + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function serverpost (path, params, flAuthenticated, filedata, callback) {">
					<outline text="Changes" isComment="true">
						<outline text="8/2/21; 2:19:56 PM by DW" created="Mon, 02 Aug 2021 18:19:55 GMT">
							<outline text="If filedata is not a PlainObject or a string, convert it to a string." created="Mon, 02 Aug 2021 18:19:58 GMT"/>
							</outline>
						<outline text="2/25/21; 1:01:58 PM by DW">
							<outline text="A special form of servercall for posts."/>
							</outline>
						</outline>
					<outline text="var whenstart = new Date ();"/>
					<outline text="if (!$.isPlainObject (filedata) &amp;&amp; (typeof (filedata) != &quot;string&quot;)) { //8/2/21 by DW" created="Mon, 02 Aug 2021 18:36:54 GMT">
						<outline text="filedata = filedata.toString ();" created="Mon, 02 Aug 2021 18:38:49 GMT"/>
						<outline text="}" created="Mon, 02 Aug 2021 18:38:43 GMT"/>
						</outline>
					<outline text="if (params === undefined) {">
						<outline text="params = new Object ();"/>
						<outline text="}"/>
						</outline>
					<outline text="if (flAuthenticated) { //1/11/21 by DW">
						<outline text="params.oauth_token = localStorage.twOauthToken;"/>
						<outline text="params.oauth_token_secret = localStorage.twOauthTokenSecret;"/>
						<outline text="}"/>
						</outline>
					<outline text="var url = appConsts.urlTwitterServer + path + &quot;?&quot; + drummerBuildParamList (params, false);" created="Sat, 09 Aug 2014 16:02:57 GMT" pgfnum="43215"/>
					<outline text="$.post (url, filedata, function (data, status) {" created="Sat, 09 Aug 2014 15:59:33 GMT" pgfnum="43210">
						<outline text="if (status == &quot;success&quot;) {" created="Sat, 09 Aug 2014 16:04:22 GMT" pgfnum="43217">
							<outline text="console.log (&quot;serverpost: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); " isComment="true"/>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (undefined, data);" created="Sat, 09 Aug 2014 16:04:47 GMT" pgfnum="43222"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:38 GMT" pgfnum="43219"/>
							</outline>
						<outline text="else {" created="Sat, 09 Aug 2014 16:04:39 GMT" pgfnum="43220">
							<outline text="var err = {">
								<outline text="code: status.status,"/>
								<outline text="message: JSON.parse (status.responseText).message"/>
								<outline text="};"/>
								</outline>
							<outline text="if (callback !== undefined) {" created="Mon, 29 Mar 2021 17:13:51 GMT">
								<outline text="callback (err);"/>
								<outline text="}" created="Mon, 29 Mar 2021 17:13:56 GMT"/>
								</outline>
							<outline text="}" created="Sat, 09 Aug 2014 16:04:41 GMT" pgfnum="43221"/>
							</outline>
						<outline text="});" created="Sat, 09 Aug 2014 16:00:26 GMT" pgfnum="43214"/>
						</outline>
					<outline text="httpRequest (url, undefined, undefined, function (err, jsontext) {" isComment="true">
						<outline text="if (err) {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, err.message == &quot; + err.message);"/>
							<outline text="callback (err);"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="console.log (&quot;servercall: url == &quot; + url + &quot;, secs == &quot; + secondsSince (whenstart)); "/>
							<outline text="callback (undefined, JSON.parse (jsontext));"/>
							<outline text="}"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function downloadFile (relpath, callback) {" created="Fri, 11 Mar 2022 15:36:46 GMT">
					<outline text="servercall (&quot;readwholefile&quot;, {relpath}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data.filetext); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Fri, 11 Mar 2022 15:37:10 GMT"/>
					</outline>
				<outline text="function deleteItem (id, callback) {" created="Fri, 11 Mar 2022 15:36:46 GMT">
					<outline text="servercall (&quot;deleteitem&quot;, {id}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Fri, 11 Mar 2022 15:37:10 GMT"/>
					</outline>
				<outline text="" created="Thu, 28 Apr 2022 14:34:22 GMT"/>
				<outline text="function updateBlogSettings (theSettings, callback) {" created="Thu, 28 Apr 2022 14:34:22 GMT">
					<outline text="var jsontext = jsonStringify (theSettings);" created="Thu, 28 Apr 2022 14:34:57 GMT"/>
					<outline text="servercall (&quot;updateblogsettings&quot;, {jsontext}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 14:34:36 GMT"/>
					</outline>
				<outline text="function newBlogPost (thePost, callback) {" created="Thu, 28 Apr 2022 14:34:22 GMT">
					<outline text="var jsontext = jsonStringify (thePost);" created="Thu, 28 Apr 2022 14:34:57 GMT"/>
					<outline text="servercall (&quot;newblogpost&quot;, {jsontext}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 14:34:36 GMT"/>
					</outline>
				<outline text="function updateBlogPost (thePost, callback) {" created="Thu, 28 Apr 2022 14:34:22 GMT">
					<outline text="var jsontext = jsonStringify (thePost);" created="Thu, 28 Apr 2022 14:34:57 GMT"/>
					<outline text="servercall (&quot;updateblogpost&quot;, {jsontext}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 14:34:36 GMT"/>
					</outline>
				<outline text="" created="Fri, 06 May 2022 14:49:25 GMT"/>
				<outline text="" created="Fri, 06 May 2022 14:49:25 GMT"/>
				<outline text="function toggleLike (id, callback) {" created="Fri, 06 May 2022 14:49:25 GMT">
					<outline text="servercall (&quot;togglelike&quot;, {id}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Fri, 06 May 2022 14:49:43 GMT"/>
					</outline>
				<outline text="function getLikes (id, callback) {" created="Fri, 06 May 2022 14:49:25 GMT">
					<outline text="servercall (&quot;getlikes&quot;, {id}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Fri, 06 May 2022 14:49:43 GMT"/>
					</outline>
				<outline text="function getALotOLikes (idarray, callback) {" created="Fri, 06 May 2022 14:49:25 GMT">
					<outline text="servercall (&quot;getalotoflikes&quot;, {idarray}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, data); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Fri, 06 May 2022 14:49:43 GMT"/>
					</outline>
				<outline text="" created="Fri, 06 May 2022 14:49:25 GMT"/>
				<outline text="function testToggleLike () {" created="Sun, 01 May 2022 15:10:01 GMT">
					<outline text="toggleLike (&quot;8750&quot;, function (err, data) {" created="Thu, 28 Apr 2022 14:35:42 GMT">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="console.log (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="console.log (jsonStringify (data)); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Thu, 28 Apr 2022 14:35:52 GMT"/>
						</outline>
					<outline text="}" created="Sun, 01 May 2022 15:10:09 GMT"/>
					</outline>
				<outline text="function testGetLikes () {" created="Sun, 01 May 2022 15:10:01 GMT">
					<outline text="getLikes (&quot;8750&quot;, function (err, data) {" created="Thu, 28 Apr 2022 14:35:42 GMT">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="console.log (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="console.log (jsonStringify (data)); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Thu, 28 Apr 2022 14:35:52 GMT"/>
						</outline>
					<outline text="}" created="Sun, 01 May 2022 15:10:09 GMT"/>
					</outline>
				<outline text="" created="Thu, 28 Apr 2022 14:35:25 GMT"/>
				<outline text="function testUpdateBlogSettings () {" created="Thu, 28 Apr 2022 14:35:26 GMT">
					<outline text="const theSettings = {" created="Thu, 28 Apr 2022 14:36:33 GMT">
						<outline text="title: &quot;Uncle Davey's Handsome Feed&quot;," created="Thu, 28 Apr 2022 14:36:43 GMT"/>
						<outline text="description: &quot;Just something I whipped up for fun.&quot;" created="Thu, 28 Apr 2022 14:37:00 GMT"/>
						<outline text="};" created="Thu, 28 Apr 2022 14:36:39 GMT"/>
						</outline>
					<outline text="updateBlogSettings (theSettings, function (err, data) {" created="Thu, 28 Apr 2022 14:35:42 GMT">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="console.log (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="console.log (jsonStringify (data)); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Thu, 28 Apr 2022 14:35:52 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 14:35:37 GMT"/>
					</outline>
				<outline text="function testNewBlogPost () {" created="Thu, 28 Apr 2022 14:35:26 GMT">
					<outline text="const thePost = {" created="Thu, 28 Apr 2022 14:36:33 GMT">
						<outline text="description: &quot;Woah-oh, what I want to know, is are you kind?&quot;" created="Thu, 28 Apr 2022 14:37:00 GMT"/>
						<outline text="};" created="Thu, 28 Apr 2022 14:36:39 GMT"/>
						</outline>
					<outline text="newBlogPost (thePost, function (err, data) {" created="Thu, 28 Apr 2022 14:35:42 GMT">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="console.log (err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="console.log (jsonStringify (data)); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Thu, 28 Apr 2022 14:35:52 GMT"/>
						</outline>
					<outline text="}" created="Thu, 28 Apr 2022 14:35:37 GMT"/>
					</outline>
				<outline text="function testGetTweet () {" created="Sun, 01 May 2022 15:10:01 GMT">
					<outline text="var id = &quot;1520781905175662594&quot;;" created="Sun, 01 May 2022 15:12:13 GMT"/>
					<outline text="servercall (&quot;gettweetforverb&quot;, {id}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="console.log (&quot;err.message == &quot; + err.message);" created="Sat, 20 Feb 2021 17:20:56 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="console.log (&quot;data == &quot; + jsonStringify (data));" created="Sat, 20 Feb 2021 17:20:56 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Sun, 01 May 2022 15:10:09 GMT"/>
					</outline>
				<outline text="" created="Fri, 29 Apr 2022 13:14:23 GMT"/>
				<outline text="function postFromEditbox (markdowntext, callback) {" created="Fri, 29 Apr 2022 13:14:24 GMT">
					<outline text="Changes" isComment="true" created="Fri, 29 Apr 2022 13:14:36 GMT">
						<outline text="4/29/22; 9:14:40 AM by DW" created="Fri, 29 Apr 2022 13:14:38 GMT">
							<outline text="Called when the user clicks the post button in the edit box." created="Fri, 29 Apr 2022 13:14:41 GMT"/>
							</outline>
						</outline>
					<outline text="const thePost = {" created="Thu, 28 Apr 2022 14:36:33 GMT">
						<outline text="markdowntext" created="Thu, 28 Apr 2022 14:37:00 GMT"/>
						<outline text="};" created="Thu, 28 Apr 2022 14:36:39 GMT"/>
						</outline>
					<outline text="newBlogPost (thePost, callback);" created="Thu, 28 Apr 2022 14:35:42 GMT"/>
					<outline text="}" created="Fri, 29 Apr 2022 13:14:33 GMT"/>
					</outline>
				<outline text="function updateFromEditbox (thePost, callback) {" created="Sat, 30 Apr 2022 16:09:43 GMT">
					<outline text="var whatWeSend = {" created="Sat, 30 Apr 2022 16:39:48 GMT">
						<outline text="guid: thePost.guid," created="Sat, 30 Apr 2022 16:39:56 GMT"/>
						<outline text="markdowntext: thePost.markdowntext" created="Sat, 30 Apr 2022 16:40:04 GMT"/>
						<outline text="}" created="Sat, 30 Apr 2022 16:40:11 GMT"/>
						</outline>
					<outline text="updateBlogPost (whatWeSend, callback);" created="Sat, 30 Apr 2022 16:40:44 GMT"/>
					<outline text="}" created="Sat, 30 Apr 2022 16:09:54 GMT"/>
					</outline>
				<outline text="function settingsCommand () {">
					<outline text="Changes" isComment="true">
						<outline text="8/31/14; 2:50:56 PM by DW">
							<outline text="Load the prefs first, in case this is a &quot;stale&quot; copy of the app. Don't want to lose posts this way."/>
							</outline>
						</outline>
					<outline text="getStoredPrefs (function () {">
						<outline text="const usersBlogUrl = getUsersBlogUrl ();" created="Thu, 05 May 2022 20:25:40 GMT"/>
						<outline text="getFeedInfo (usersBlogUrl, function (err, theFeed) {" created="Thu, 05 May 2022 20:26:47 GMT">
							<outline text="if (err) {" created="Thu, 05 May 2022 20:27:11 GMT">
								<outline text="alertDialog (err.message);" created="Thu, 05 May 2022 20:27:13 GMT"/>
								<outline text="}" created="Thu, 05 May 2022 20:27:21 GMT"/>
								</outline>
							<outline text="else {" created="Thu, 05 May 2022 20:27:21 GMT">
								<outline text="console.log (&quot;settingsCommand: theFeed == &quot; + jsonStringify (theFeed));" created="Thu, 05 May 2022 20:27:26 GMT"/>
								<outline text="appPrefs.myFeedTitle = theFeed.title;" created="Thu, 05 May 2022 20:29:55 GMT"/>
								<outline text="appPrefs.myFeedDescription = theFeed.description;" created="Thu, 05 May 2022 20:29:55 GMT"/>
								<outline text="prefsDialogShow (function () {">
									<outline text="const theSettings = {" created="Thu, 28 Apr 2022 14:36:33 GMT">
										<outline text="title: appPrefs.myFeedTitle," created="Thu, 28 Apr 2022 14:36:43 GMT"/>
										<outline text="description: appPrefs.myFeedDescription," created="Thu, 28 Apr 2022 14:36:43 GMT"/>
										<outline text="};" created="Thu, 28 Apr 2022 14:36:39 GMT"/>
										</outline>
									<outline text="updateBlogSettings (theSettings, function (err, data) {" created="Thu, 28 Apr 2022 14:35:42 GMT">
										<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
											<outline text="console.log (&quot;settingsCommand: &quot; + err.message);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
											<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
											</outline>
										<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
											<outline text="removeFeedFromCache (usersBlogUrl);"/>
											<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
											</outline>
										<outline text="});" created="Thu, 28 Apr 2022 14:35:52 GMT"/>
										</outline>
									<outline text="prefsChanged ();"/>
									<outline text="});"/>
									</outline>
								<outline text="}" created="Thu, 05 May 2022 20:27:23 GMT"/>
								</outline>
							<outline text="});" created="Thu, 05 May 2022 20:27:00 GMT"/>
							</outline>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="" created="Thu, 28 Apr 2022 14:34:22 GMT"/>
				<outline text="function uploadFile (relpath, filedata, type, flPrivate=true, callback) {" created="Fri, 11 Mar 2022 14:49:04 GMT">
					<outline text="twUploadFile (relpath, filedata, type, flPrivate, function (data) { " created="Thu, 20 May 2021 15:21:07 GMT">
						<outline text="note -- we need a new interface routine that has the standard callback params, and checks to see if callback is undefined" isComment="true" created="Fri, 11 Mar 2022 15:07:46 GMT"/>
						<outline text="if (callback !== undefined) {" created="Fri, 11 Mar 2022 15:07:47 GMT">
							<outline text="callback (undefined, data);" created="Fri, 11 Mar 2022 15:07:57 GMT"/>
							<outline text="}" created="Fri, 11 Mar 2022 15:07:56 GMT"/>
							</outline>
						<outline text="});" created="Fri, 11 Mar 2022 15:07:41 GMT"/>
						</outline>
					<outline text="}" created="Fri, 11 Mar 2022 14:49:25 GMT"/>
					</outline>
				<outline text="function checkFeedOnServer (url, callback) {" created="Tue, 22 Mar 2022 16:00:58 GMT">
					<outline text="Changes" isComment="true" created="Tue, 22 Mar 2022 16:02:36 GMT">
						<outline text="3/22/22; 12:02:38 PM by DW" created="Tue, 22 Mar 2022 16:02:38 GMT">
							<outline text="The server reads the feed now, and sends back to us via websocket any new or updated items." created="Tue, 22 Mar 2022 16:02:39 GMT"/>
							</outline>
						</outline>
					<outline text="servercall (&quot;checkfeednow&quot;, {url}, true, function (err, data) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 16:08:07 GMT">
								<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
								<outline text="}" created="Tue, 22 Mar 2022 16:08:13 GMT"/>
								</outline>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="console.log (&quot;checkFeedOnServer: data == &quot; + jsonStringify (data));" created="Sat, 02 Apr 2022 15:00:11 GMT"/>
							<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 16:08:07 GMT">
								<outline text="callback (undefined, data); "/>
								<outline text="}" created="Tue, 22 Mar 2022 16:08:13 GMT"/>
								</outline>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Tue, 22 Mar 2022 16:01:12 GMT"/>
					</outline>
				<outline text="function getUpdatedFeed (url, callback) {" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="servercall (&quot;getupdatedfeed&quot;, {url}, true, function (err, theFeed) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 16:08:07 GMT">
								<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
								<outline text="}" created="Tue, 22 Mar 2022 16:08:13 GMT"/>
								</outline>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="if (callback !== undefined) {" created="Tue, 22 Mar 2022 16:08:07 GMT">
								<outline text="callback (undefined, theFeed); "/>
								<outline text="}" created="Tue, 22 Mar 2022 16:08:13 GMT"/>
								</outline>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function getFeedRec (url, callback) {" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="servercall (&quot;getfeedrec&quot;, {url}, true, function (err, feedRec) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, feedRec); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function testGetFeedRec () {" created="Mon, 28 Mar 2022 17:16:24 GMT">
					<outline text="getFeedRec (&quot;http://scripting.com/rss.xml&quot;, function (err, feedRec) {" created="Mon, 28 Mar 2022 17:16:33 GMT">
						<outline text="console.log (jsonStringify (feedRec));" created="Mon, 28 Mar 2022 17:16:58 GMT"/>
						<outline text="});" created="Mon, 28 Mar 2022 17:16:51 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Mar 2022 17:19:37 GMT"/>
					</outline>
				<outline text="function getFeed (url, callback) {" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="servercall (&quot;getfeed&quot;, {url}, true, function (err, feedRec) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, feedRec); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function testGetFeed () {" created="Mon, 28 Mar 2022 17:16:24 GMT">
					<outline text="getFeed (&quot;http://scripting.com/rss.xml&quot;, function (err, theFeed) {" created="Mon, 28 Mar 2022 17:16:33 GMT">
						<outline text="console.log (jsonStringify (theFeed));" created="Mon, 28 Mar 2022 17:16:58 GMT"/>
						<outline text="});" created="Mon, 28 Mar 2022 17:16:51 GMT"/>
						</outline>
					<outline text="}" created="Mon, 28 Mar 2022 17:19:37 GMT"/>
					</outline>
				<outline text="function getRiver (feedUrl, callback) {" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="Changes" isComment="true" created="Sat, 23 Apr 2022 13:43:44 GMT">
						<outline text="4/23/22; 9:43:46 AM by DW" created="Sat, 23 Apr 2022 13:43:45 GMT">
							<outline text="Add feedUrl param." created="Sat, 23 Apr 2022 13:43:47 GMT"/>
							</outline>
						</outline>
					<outline text="var params = undefined;" created="Sat, 23 Apr 2022 14:48:53 GMT"/>
					<outline text="if (feedUrl !== undefined) {" created="Sat, 23 Apr 2022 14:49:00 GMT">
						<outline text="params = {url: feedUrl};" created="Sat, 23 Apr 2022 14:49:07 GMT"/>
						<outline text="}" created="Sat, 23 Apr 2022 14:49:12 GMT"/>
						</outline>
					<outline text="servercall (&quot;getriver&quot;, params, true, function (err, theRiver) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, theRiver); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function getRiverFromOneFeed (feedUrl, callback) {" isComment="true" created="Wed, 23 Mar 2022 14:28:05 GMT">
					<outline text="servercall (&quot;getriverfromonefeed&quot;, {url: feedUrl}, true, function (err, theRiver) {">
						<outline text="if (err) {" created="Sat, 20 Feb 2021 17:20:29 GMT">
							<outline text="callback (err);" created="Thu, 25 Mar 2021 15:34:16 GMT"/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:36 GMT"/>
							</outline>
						<outline text="else {" created="Sat, 20 Feb 2021 17:20:36 GMT">
							<outline text="callback (undefined, theRiver); "/>
							<outline text="}" created="Sat, 20 Feb 2021 17:20:38 GMT"/>
							</outline>
						<outline text="});" created="Sat, 20 Feb 2021 17:20:14 GMT"/>
						</outline>
					<outline text="}" created="Wed, 23 Mar 2022 14:28:26 GMT"/>
					</outline>
				<outline text="function testGetMyRiver () {" created="Wed, 30 Mar 2022 15:31:32 GMT">
					<outline text="getMyRiver (undefined, function (err, theRiver) {" created="Wed, 30 Mar 2022 15:31:53 GMT">
						<outline text="if (err) {" created="Wed, 30 Mar 2022 15:32:02 GMT">
							<outline text="console.log (err.message);" created="Wed, 30 Mar 2022 15:32:07 GMT"/>
							<outline text="}" created="Wed, 30 Mar 2022 15:32:15 GMT"/>
							</outline>
						<outline text="else {" created="Wed, 30 Mar 2022 15:32:16 GMT">
							<outline text="console.log (jsonStringify (theRiver));" created="Wed, 30 Mar 2022 15:32:19 GMT"/>
							<outline text="}" created="Wed, 30 Mar 2022 15:32:18 GMT"/>
							</outline>
						<outline text="});" created="Wed, 30 Mar 2022 15:31:59 GMT"/>
						</outline>
					<outline text="}" created="Wed, 30 Mar 2022 15:31:47 GMT"/>
					</outline>
				<outline text="function checkCurrentFeedOnServer () {" isComment="true" created="Tue, 22 Mar 2022 16:04:35 GMT">
					<outline text="checkFeedOnServer (appPrefs.urlCurrentFeed, function (err, theFeed) {" created="Tue, 22 Mar 2022 16:04:45 GMT">
						<outline text="if (err) {" created="Tue, 22 Mar 2022 16:15:59 GMT">
							<outline text="console.log (&quot;checkCurrentFeedOnServer: err.message == &quot; + err.message);" created="Tue, 22 Mar 2022 16:16:03 GMT"/>
							<outline text="}" created="Tue, 22 Mar 2022 16:16:08 GMT"/>
							</outline>
						<outline text="else {" created="Tue, 22 Mar 2022 16:16:09 GMT">
							<outline text="console.log (&quot;checkCurrentFeedOnServer: theFeed == &quot; + jsonStringify (theFeed));" created="Tue, 22 Mar 2022 16:16:11 GMT"/>
							<outline text="}" created="Tue, 22 Mar 2022 16:17:04 GMT"/>
							</outline>
						<outline text="});" created="Tue, 22 Mar 2022 16:15:54 GMT"/>
						</outline>
					<outline text="}" created="Tue, 22 Mar 2022 16:04:51 GMT"/>
					</outline>
				<outline text="function wsConnectUserToServer () {">
					<outline text="var mySocket = undefined;" created="Wed, 29 Sep 2021 16:20:51 GMT"/>
					<outline text="function checkConnection () {" created="Wed, 29 Sep 2021 16:20:34 GMT">
						<outline text="if (mySocket === undefined) {">
							<outline text="mySocket = new WebSocket (appConsts.urlSocketServer); "/>
							<outline text="mySocket.onopen = function (evt) {">
								<outline text="var msg = &quot;user &quot; + localStorage.twOauthToken + &quot; &quot; + localStorage.twOauthTokenSecret;" created="Wed, 29 Sep 2021 16:28:20 GMT"/>
								<outline text="console.log (&quot;wsConnectToServer: msg == &quot; + msg);"/>
								<outline text="mySocket.send (msg);"/>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onmessage = function (evt) {">
								<outline text="function getPayload (jsontext) {" created="Mon, 21 Mar 2022 15:32:01 GMT">
									<outline text="var thePayload = undefined;" created="Mon, 21 Mar 2022 15:37:20 GMT"/>
									<outline text="try {" created="Mon, 21 Mar 2022 15:37:20 GMT">
										<outline text="thePayload = JSON.parse (jsontext);" created="Mon, 21 Mar 2022 15:37:23 GMT"/>
										<outline text="}" created="Mon, 21 Mar 2022 15:37:39 GMT"/>
										</outline>
									<outline text="catch (err) {" created="Mon, 21 Mar 2022 15:37:40 GMT">
										<outline text="}" created="Mon, 21 Mar 2022 15:37:44 GMT"/>
										</outline>
									<outline text="return (thePayload);" created="Mon, 21 Mar 2022 15:33:05 GMT"/>
									<outline text="}" created="Mon, 21 Mar 2022 15:32:14 GMT"/>
									</outline>
								<outline text="if (evt.data !== undefined) { //no error">
									<outline text="var theCommand = stringNthField (evt.data, &quot;\r&quot;, 1);" created="Mon, 21 Mar 2022 15:34:02 GMT"/>
									<outline text="var jsontext = stringDelete (evt.data, 1, theCommand.length + 1);" created="Mon, 21 Mar 2022 15:35:15 GMT"/>
									<outline text="var thePayload = getPayload (jsontext);" created="Mon, 21 Mar 2022 15:35:39 GMT"/>
									<outline text="console.log (&quot;wsConnectToServer: theCommand == &quot; + theCommand + &quot;, thePayload == &quot; + jsonStringify (thePayload));"/>
									<outline text="switch (theCommand) {" created="Mon, 20 Dec 2021 16:38:54 GMT">
										<outline text="case &quot;newItem&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
											<outline text="newRiverItem (thePayload.item, thePayload.theFeed);" created="Thu, 24 Mar 2022 17:24:08 GMT"/>
											<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
											</outline>
										<outline text="case &quot;updatedItem&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
											<outline text="updatedRiverItem (thePayload.item, thePayload.theFeed);" created="Thu, 24 Mar 2022 16:30:44 GMT"/>
											<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
											</outline>
										<outline text="case &quot;updatedFeed&quot;:" created="Fri, 01 Apr 2022 14:22:53 GMT">
											<outline text="updatedFeed (thePayload);" created="Fri, 01 Apr 2022 14:23:14 GMT"/>
											<outline text="break;" created="Fri, 01 Apr 2022 14:23:00 GMT"/>
											</outline>
										<outline text="case &quot;deletedItem&quot;: " created="Mon, 21 Mar 2022 15:30:32 GMT">
											<outline text="deleteRiverItem (thePayload);" created="Thu, 24 Mar 2022 17:24:08 GMT"/>
											<outline text="break;" created="Mon, 21 Mar 2022 15:30:46 GMT"/>
											</outline>
										<outline text="}" created="Mon, 20 Dec 2021 16:38:58 GMT"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onclose = function (evt) {">
								<outline text="mySocket = undefined;"/>
								<outline text="};"/>
								</outline>
							<outline text="mySocket.onerror = function (evt) {">
								<outline text="console.log (&quot;wsConnectToServer: socket received an error.&quot;);" isComment="true" created="Wed, 31 Mar 2021 14:26:24 GMT"/>
								<outline text="};"/>
								</outline>
							<outline text="}"/>
							</outline>
						<outline text="}" created="Wed, 29 Sep 2021 16:20:43 GMT"/>
						</outline>
					<outline text="self.setInterval (checkConnection, 1000);" created="Wed, 29 Sep 2021 16:20:35 GMT"/>
					<outline text="}"/>
					</outline>
				<outline text="" created="Sun, 17 Apr 2022 13:22:07 GMT"/>
				<outline text="function displayRiver (feedUrl, callback) {" created="Sun, 17 Apr 2022 13:22:08 GMT">
					<outline text="if (feedUrl == &quot;&quot;) {" created="Sun, 24 Apr 2022 13:59:10 GMT">
						<outline text="feedUrl = undefined;" created="Sun, 24 Apr 2022 13:59:16 GMT"/>
						<outline text="}" created="Sun, 24 Apr 2022 13:59:19 GMT"/>
						</outline>
					<outline text="displayTraditionalRiver (feedUrl, callback);" created="Sun, 17 Apr 2022 13:22:20 GMT"/>
					<outline text="}" created="Sun, 17 Apr 2022 13:22:25 GMT"/>
					</outline>
				<outline text="" created="Wed, 09 Mar 2022 15:43:01 GMT"/>
				<outline text="function setCursorCallback (itemInArray) {" isComment="true" created="Fri, 18 Feb 2022 15:54:59 GMT">
					<outline text="appPrefs.feeds.forEach (function (theFeed) {" created="Fri, 18 Feb 2022 16:19:53 GMT">
						<outline text="if (theFeed.url == appPrefs.urlCurrentFeed) {" created="Fri, 18 Feb 2022 16:20:27 GMT">
							<outline text="theFeed.guid = itemInArray.guid;" created="Fri, 18 Feb 2022 16:20:52 GMT"/>
							<outline text="console.log (&quot;setCursorCallback: theFeed.guid == &quot; + theFeed.guid);" isComment="true" created="Fri, 18 Feb 2022 15:56:07 GMT"/>
							<outline text="prefsChanged ();" created="Fri, 18 Feb 2022 15:56:32 GMT"/>
							<outline text="}" created="Fri, 18 Feb 2022 16:20:45 GMT"/>
							</outline>
						<outline text="});" created="Fri, 18 Feb 2022 16:20:20 GMT"/>
						</outline>
					<outline text="}" created="Fri, 18 Feb 2022 15:55:12 GMT"/>
					</outline>
				<outline text="function updateTwitterLogin () {">
					<outline text="if (appConsts.flEnableLogin) {">
						<outline text="initTwitterMenuItems ();"/>
						<outline text="}"/>
						</outline>
					<outline text="}"/>
					</outline>
				<outline text="function everySecond () {" created="Wed, 16 Feb 2022 16:42:33 GMT">
					<outline text="if (flBuildFeedsMenu) {" created="Thu, 17 Feb 2022 16:10:47 GMT">
						<outline text="flBuildFeedsMenu = false;" created="Thu, 17 Feb 2022 16:10:58 GMT"/>
						<outline text="buildFeedsMenuFromOpmlFile ();"/>
						<outline text="}" created="Thu, 17 Feb 2022 16:10:51 GMT"/>
						</outline>
					<outline text="riverItemsEverySecond ();"/>
					<outline text="}" created="Wed, 16 Feb 2022 16:42:45 GMT"/>
					</outline>
				<outline text="function everyMinute () {" created="Mon, 18 Apr 2022 16:04:04 GMT">
					<outline text="riverItemsEveryMinute ();" created="Mon, 18 Apr 2022 16:04:10 GMT"/>
					<outline text="}" created="Mon, 18 Apr 2022 16:04:12 GMT"/>
					</outline>
				<outline text="function startup () {">
					<outline text="console.log (&quot;startup&quot;);"/>
					<outline text="$(&quot;#idTwitterIcon&quot;).html (twStorageConsts.fontAwesomeIcon);"/>
					<outline text="myNodeStorageApp = new nodeStorageApp (appConsts, appPrefs);"/>
					<outline text="myNodeStorageApp.everySecond = everySecond;"/>
					<outline text="runEveryMinute (everyMinute);"/>
					<outline text="myNodeStorageApp.start (function (flConnected) {">
						<outline text="if (flConnected) {">
							<outline text="patchAppPrefs ();"/>
							<outline text="appPrefs.ctStartups++;"/>
							<outline text="appPrefs.whenLastStartup = new Date ();"/>
							<outline text="flBuildFeedsMenu = true;" created="Wed, 16 Feb 2022 16:14:44 GMT"/>
							<outline text="var urlParam = getUrlParam (&quot;url&quot;);" created="Sat, 04 Sep 2021 16:08:41 GMT"/>
							<outline text="var urlFeed = (urlParam === undefined) ? appPrefs.urlCurrentFeed : urlParam;" created="Wed, 16 Feb 2022 16:48:50 GMT"/>
							<outline text="displayRiver (urlFeed);" created="Wed, 16 Feb 2022 16:55:31 GMT"/>
							<outline text="$(&quot;.divPageBody&quot;).keydown (function (ev) {" isComment="true">
								<outline text="console.log (&quot;keydown == &quot; + ev.which);"/>
								<outline text="switch (ev.which) {">
									<outline text="case 37: //left arrow">
										<outline text="break;"/>
										</outline>
									<outline text="case 38: //up arrow">
										<outline text="moveCursorUp ();"/>
										<outline text="break;"/>
										</outline>
									<outline text="case 39: //right arrow">
										<outline text="break;"/>
										</outline>
									<outline text="case 40: //down arrow">
										<outline text="moveCursorDown ();"/>
										<outline text="break;"/>
										</outline>
									<outline text="}"/>
									</outline>
								<outline text="ev.stopPropagation ();"/>
								<outline text="ev.preventDefault ();"/>
								<outline text="});"/>
								</outline>
							<outline text="prefsChanged ();"/>
							<outline text="initEditBox (appPrefs.savedEditorText, postFromEditbox, updateFromEditbox); //4/25/22 by DW"/>
							<outline text="wsConnectUserToServer ();"/>
							<outline text="}"/>
							</outline>
						<outline text="else {">
							<outline text="updateTwitterLogin ();"/>
							<outline text="}"/>
							</outline>
						<outline text="hitCounter ();"/>
						<outline text="});"/>
						</outline>
					<outline text="}"/>
					</outline>
				</outline>
			<outline text="index.html" created="Sat, 06 Nov 2021 16:50:39 GMT">
				<outline text="&lt;html&gt;">
					<outline text="&lt;head&gt;">
						<outline text="&lt;title&gt;[%productNameForDisplay%]&lt;/title&gt;"/>
						<outline text="&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&gt;"/>
						<outline text="&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;"/>
						<outline text=""/>
						<outline text="&lt;!-- Facebook metadata --&gt;" isComment="true">
							<outline text="&lt;meta property=&quot;og:url&quot; content=&quot;[%metaUrl%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:type&quot; content=&quot;website&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:title&quot; content=&quot;[%metaTitle%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:description&quot; content=&quot;[%metaDescription%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:image&quot; content=&quot;[%metaImgUrl%]&quot; /&gt;"/>
							<outline text="&lt;meta property=&quot;og:site_name&quot; content=&quot;[%metaSiteName%]&quot; /&gt;"/>
							</outline>
						<outline text="&lt;!-- Twitter metadata --&gt;" isComment="true">
							<outline text="&lt;meta name=&quot;twitter:card&quot; content=&quot;summary_large_image&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:site&quot; content=&quot;@[%metaTwitterScreenName%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:title&quot; content=&quot;[%metaTitle%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:url&quot; content=&quot;[%metaUrl%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:description&quot; content=&quot;[%metaDescription%]&quot;&gt;"/>
							<outline text="&lt;meta name=&quot;twitter:image:src&quot; content=&quot;[%metaImgUrl%]&quot;&gt;"/>
							</outline>
						<outline text=""/>
						<outline text="&lt;%basicIncludes2%&gt;"/>
						<outline text="" created="Tue, 15 Feb 2022 17:39:52 GMT"/>
						<outline text="&lt;link href='http://fonts.googleapis.com/css?family=Oswald' rel='stylesheet' type='text/css'&gt;"/>
						<outline text="" created="Thu, 12 May 2022 14:40:25 GMT"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/storage/api.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="" created="Thu, 17 Feb 2022 14:48:27 GMT"/>
						<outline text="&lt;%include (&quot;river6/templates/feedviewer/code.js&quot;)%&gt;" isComment="true"/>
						<outline text="&lt;%include (&quot;river6/templates/feedviewer/styles.css&quot;)%&gt;" isComment="true"/>
						<outline text="" created="Mon, 07 Mar 2022 16:51:30 GMT"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/emojify.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fargo.io/code/shared/emojify.css&quot;/&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/markdownConverter.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;//s3.amazonaws.com/fargo.io/cms/dateFormat.js&quot; async&gt;&lt;/script&gt;"/>
						<outline text=""/>
						<outline text="&lt;%include (&quot;river6/browsers/outlinebrowser.js&quot;)%&gt;" isComment="true"/>
						<outline text="&lt;%include (&quot;river6/browsers/riverbrowser.js&quot;)%&gt;" isComment="true"/>
						<outline text="&lt;%include (&quot;river6/browsers/styles.css&quot;)%&gt;" isComment="true"/>
						<outline text="" created="Wed, 09 Mar 2022 15:59:31 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/concord/testing/3.0.6/concord.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://scripting.com/code/concord/testing/3.0.6/concordstyles.css&quot;/&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/outliner.js&quot;&gt;&lt;/script&gt;" created="Thu, 08 May 2014 14:04:18 GMT" pgfnum="41269"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/opmlpackage/client/opml.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;http://fargo.io/code/shared/outlinedialog.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/shared/outlinedialog.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/keypress.js&quot; /&gt;&lt;/script&gt;"/>
						<outline text="" created="Mon, 28 Mar 2022 14:48:07 GMT"/>
						<outline text="&lt;script src=&quot;http://cdn.jsdelivr.net/medium-editor/latest/js/medium-editor.min.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://cdn.jsdelivr.net/medium-editor/latest/css/medium-editor.min.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; charset=&quot;utf-8&quot;&gt;"/>
						<outline text="&lt;link rel=&quot;stylesheet&quot; href=&quot;http://fargo.io/code/editors/mediumeditor/dist/css/themes/default.css&quot;&gt; "/>
						<outline text="&lt;script src=&quot;http://fargo.io/code/editors/mediumEditorMarkdown/me-markdown.standalone.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="" created="Tue, 26 Apr 2022 15:46:18 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/dialogs/code.js&quot;&gt;&lt;/script&gt;" isComment="true"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/dialogs/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;" isComment="true"/>
						<outline text="" created="Fri, 11 Mar 2022 17:30:53 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/editbox.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/littlefeedreader/editbox.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="" created="Mon, 25 Apr 2022 15:48:28 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/oldschoolrender.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/littlefeedreader/oldschoolrender.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="" created="Mon, 14 Mar 2022 16:36:29 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/viewpost.js&quot;&gt;&lt;/script&gt;" isComment="true"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/littlefeedreader/viewpost.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;" isComment="true"/>
						<outline text=""/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/riverviewer.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/littlefeedreader/riverviewer.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text="" created="Mon, 14 Mar 2022 16:36:30 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/misc.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/getfeedinfo.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/feeds.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="" created="Mon, 14 Mar 2022 16:37:05 GMT"/>
						<outline text="&lt;script src=&quot;http://scripting.com/code/littlefeedreader/code.js&quot;&gt;&lt;/script&gt;"/>
						<outline text="&lt;link href=&quot;http://scripting.com/code/littlefeedreader/styles.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;"/>
						<outline text=""/>
						<outline text="&lt;script&gt;">
							<outline text="var appConsts = {">
								<outline text="productname: &quot;[%productName%]&quot;,"/>
								<outline text="productnameForDisplay: &quot;[%productNameForDisplay%]&quot;,"/>
								<outline text="leadingQuestion: &quot;Welcome to the camp.&quot;," created="Mon, 25 Apr 2022 16:45:09 GMT"/>
								<outline text="leadingQuestion: &quot;Be nice and be concise.&quot;," isComment="true" created="Mon, 25 Apr 2022 16:45:09 GMT"/>
								<outline text="defaultEditorButtons: [&quot;bold&quot;, &quot;italic&quot;, &quot;anchor&quot;, &quot;h4&quot;, &quot;orderedlist&quot;, &quot;unorderedlist&quot;, &quot;quote&quot;],"/>
								<outline text="editorPlaceholderText: &quot;You can write a short post here.&quot;,"/>
								<outline text="version: &quot;[%version%]&quot;,"/>
								<outline text="urlTwitterServer: &quot;[%urlServerForClient%]&quot;,"/>
								<outline text="urlSocketServer: &quot;[%urlWebsocketServerForClient%]&quot;,"/>
								<outline text="flEnableLogin: [%flEnableLogin%],"/>
								<outline text="flUseSockets: true,"/>
								<outline text="urlForFeeds: &quot;[%urlForFeeds%]&quot;" created="Sat, 30 Apr 2022 14:43:06 GMT"/>
								<outline text="}"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="" created="Thu, 17 Feb 2022 14:49:14 GMT"/>
						<outline text="&lt;/head&gt;"/>
						</outline>
					<outline text="&lt;body&gt;">
						<outline text="&lt;div class=&quot;divMenubar&quot; id=&quot;idMenubar&quot;&gt;" created="Thu, 28 Mar 2013 21:39:05 GMT" pgfnum="21615">
							<outline text="&lt;div class=&quot;topbar-wrapper&quot; style=&quot;z-index: 5;&quot;&gt;">
								<outline text="&lt;div class=&quot;navbar navbar-fixed-top&quot; data-dropdown=&quot;dropdown&quot;&gt;">
									<outline text="&lt;div class=&quot;divVersionNumber&quot; id=&quot;idVersionNumber&quot;&gt;">
										<outline text="0.4.2"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;div class=&quot;navbar-inner&quot;&gt;">
										<outline text="&lt;div class=&quot;container&quot;&gt;">
											<outline text="&lt;a class=&quot;brand&quot; onclick=&quot;clickHome ()&quot;&gt;&lt;span id=&quot;idMenuProductName&quot;&gt;[%productNameForDisplay%]&lt;/span&gt;&lt;/a&gt;"/>
											<outline text="&lt;ul class=&quot;nav&quot; id=&quot;idMainMenuList&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idMainMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Menu&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;getFeedUrlCommand ();&quot;&gt;Get feed URL...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="" created="Sat, 19 Feb 2022 15:06:33 GMT"/>
														<outline text="" created="Sat, 19 Feb 2022 15:06:33 GMT"/>
														<outline text="" created="Sat, 19 Feb 2022 15:06:33 GMT"/>
														<outline text="&lt;li&gt;&lt;a href=&quot;https://github.com/scripting/daytonaSupport/blob/main/README.md&quot; target=&quot;_blank&quot;&gt;Support site...&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleMyDrummerIndexMode ();&quot;&gt;&lt;i class=&quot;fa fa-check iMenuCheck&quot; id=&quot;idMyDrummerIndexCheckmark&quot;&gt;&lt;/i&gt;My Drummer index&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;toggleMetadataMode ();&quot;&gt;&lt;i class=&quot;fa fa-check iMenuCheck&quot; id=&quot;idMetadataModeCheckmark&quot;&gt;&lt;/i&gt;Metadata mode&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="" isComment="true" created="Mon, 06 Dec 2021 20:13:33 GMT"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;setCollection ('scriptingnews');&quot;&gt;&lt;i class=&quot;fa fa-check iMenuCheck&quot; id=&quot;idScriptingNewsCheckmark&quot;&gt;&lt;/i&gt;Scripting News&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;setCollection ('drummerdocs');&quot;&gt;&lt;i class=&quot;fa fa-check iMenuCheck&quot; id=&quot;idDrummerDocsCheckmark&quot;&gt;&lt;/i&gt;Drummer docs&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;setCollection ('drummeruser');&quot;&gt;&lt;i class=&quot;fa fa-check iMenuCheck&quot; id=&quot;idMyDrummerCheckmark&quot;&gt;&lt;/i&gt;My Drummer&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="" created="Mon, 06 Dec 2021 20:13:34 GMT"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idFeedsMenu&quot; style=&quot;visibility: visible&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;Feeds&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot; id=&quot;idFeedsMenuList&quot;&gt;">
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idMessageOfTheDayMenu&quot;&gt; ">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; onclick=&quot;motdClick ()&quot; id=&quot;idMotdIcon&quot;&gt;&lt;/i&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;" isComment="true"/>
													<outline text="&lt;ul class=&quot;dropdown-menu ulMotdDropdownMenu&quot;&gt;" isComment="true">
														<outline text="&lt;li&gt;&lt;div class=&quot;divMessageOfTheDayText&quot; id=&quot;idMessageOfTheDayText&quot;&gt;&lt;/li&gt; "/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;li class=&quot;dropdown&quot; id=&quot;idMessageOfTheDayMenu&quot;&gt; " isComment="true">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot; onclick=&quot;motdClick ()&quot;&gt;&lt;i class=&quot;fa&quot; id=&quot;idMotdIcon&quot;&gt;&lt;/i&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu ulMotdDropdownMenu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;div class=&quot;divMessageOfTheDayText&quot; id=&quot;idMessageOfTheDayText&quot;&gt;&lt;/li&gt; "/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;ul class=&quot;nav pull-right&quot;&gt;">
												<outline text="&lt;li class=&quot;dropdown&quot;&gt;">
													<outline text="&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-toggle=&quot;dropdown&quot;&gt;&lt;span id=&quot;idTwitterIcon&quot;&gt;&lt;/span&gt;&lt;span id=&quot;idTwitterUsername&quot;&gt;&lt;/span&gt;&amp;nbsp;&lt;b class=&quot;caret&quot;&gt;&lt;/b&gt;&lt;/a&gt;"/>
													<outline text="&lt;ul class=&quot;dropdown-menu&quot;&gt;">
														<outline text="&lt;li&gt;&lt;a onclick=&quot;aboutDialog ();&quot;&gt;About &lt;span id=&quot;idMenuAboutProductName&quot;&gt;&lt;/span&gt;...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;settingsCommand ();&quot;&gt;Settings...&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;li class=&quot;divider&quot;&gt;&lt;/li&gt;"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;fbToggleConnectCommand ();&quot; id=&quot;idFacebookConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;" isComment="true"/>
														<outline text="&lt;li&gt;&lt;a onclick=&quot;twToggleConnectCommand ();&quot; id=&quot;idTwitterConnectMenuItem&quot;&gt;&lt;/a&gt;&lt;/li&gt;"/>
														<outline text="&lt;/ul&gt;"/>
														</outline>
													<outline text="&lt;/li&gt;"/>
													</outline>
												<outline text="&lt;/ul&gt;"/>
												</outline>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Thu, 28 Mar 2013 21:39:17 GMT" pgfnum="21616"/>
							</outline>
						<outline text="&lt;div class=&quot;divPrefsDialog&quot; comment=&quot;This is the Settings dialog.&quot;&gt;" created="Sun, 03 Feb 2013 14:56:13 GMT" pgfnum="18179">
							<outline text="&lt;div id=&quot;idPrefsDialog&quot; class=&quot;modal hide fade&quot; tabindex=&quot;-1&quot; role=&quot;dialog&quot; aria-labelledby=&quot;windowTitleLabel&quot; aria-hidden=&quot;true&quot;&gt;">
								<outline text="&lt;div class=&quot;modal-body&quot;&gt;">
									<outline text="&lt;div class=&quot;divDialogElements&quot;&gt;">
										<outline text="&lt;%prefs.includeOutline (&quot;http://scripting.com/code/littlefeedreader/settings.opml&quot;)%&gt;" created="Mon, 31 Dec 2012 16:55:33 GMT" pgfnum="16518"/>
										<outline text="&lt;/div&gt;"/>
										</outline>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;div class=&quot;modal-footer&quot;&gt;">
									<outline text="&lt;a href=&quot;#&quot; class=&quot;btn&quot; onclick=&quot;prefsCloseDialog ();&quot;&gt;Cancel&lt;/a&gt;"/>
									<outline text="&lt;a href=&quot;#&quot; class=&quot;btn btn-primary&quot; onclick=&quot;prefsOkClicked ();&quot;&gt;OK&lt;/a&gt;"/>
									<outline text="&lt;/div&gt;"/>
									</outline>
								<outline text="&lt;/div&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;" created="Sun, 03 Feb 2013 14:56:23 GMT" pgfnum="18180"/>
							</outline>
						<outline text="&lt;div class=&quot;divPageBody&quot;&gt;">
							<outline text="&lt;div class=&quot;divRiverContainer&quot; id=&quot;idRiverContainer&quot;&gt;" created="Mon, 14 Mar 2022 16:22:35 GMT">
								<outline text="&lt;/div&gt;" created="Mon, 14 Mar 2022 16:22:41 GMT"/>
								</outline>
							<outline text="&lt;table&gt;" isComment="true">
								<outline text="&lt;tr&gt;">
									<outline text="&lt;td class=&quot;tdLeftPanel&quot;&gt;">
										<outline text="&lt;div class=&quot;divTopOfPage&quot;&gt;">
											<outline text="&lt;div class=&quot;divWhenLastNewItem&quot; id=&quot;idWhenLastNewItem&quot;&gt;&lt;/div&gt;"/>
											<outline text="&lt;div class=&quot;divTopFeedTitle&quot; id=&quot;idFeedTitle&quot;&gt;&lt;/div&gt;"/>
											<outline text="&lt;div class=&quot;divTopFeedDescription&quot; id=&quot;idFeedDescription&quot;&gt;&lt;/div&gt;"/>
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;div class=&quot;divFeedItems&quot; id=&quot;idFeedItems&quot;&gt;&lt;/div&gt;"/>
										<outline text="&lt;td&gt;"/>
										</outline>
									<outline text="&lt;td class=&quot;tdRightPanel&quot;&gt;">
										<outline text="&lt;div class=&quot;divItemContent&quot; id=&quot;idItemContent&quot;&gt;">
											<outline text="&lt;/div&gt;"/>
											</outline>
										<outline text="&lt;td&gt;"/>
										</outline>
									<outline text="&lt;/tr&gt;"/>
									</outline>
								<outline text="&lt;/table&gt;"/>
								</outline>
							<outline text="&lt;/div&gt;"/>
							</outline>
						<outline text="&lt;script&gt;">
							<outline text="$(document).ready (function () {">
								<outline text=""/>
								<outline text="startup ();" created="Wed, 30 Oct 2013 15:20:06 GMT" pgfnum="30656"/>
								<outline text="});"/>
								</outline>
							<outline text="&lt;/script&gt;"/>
							</outline>
						<outline text="&lt;/body&gt;"/>
						</outline>
					<outline text="&lt;/html&gt;"/>
					</outline>
				</outline>
			</outline>
		<outline text="build script" created="Fri, 18 Feb 2022 16:51:37 GMT">
			<outline text="nodeEditorSuite.utilities.buildILittleFeedReader ()" created="Fri, 18 Feb 2022 16:51:42 GMT"/>
			</outline>
		</body>
	</opml>
